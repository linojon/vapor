aid,title,summary,authorid,pubdate,pubtypeid,notes,status,body,author,counter,cids,categories,keywords,url
212,"Replaceable render engines for Formtastic","One of the things I love about Formtastic is the semantic DSL for specifying a form in my code. One of the things that can frustrate me is the resulting DOM that is generated.",3,1268801851,9,,2,"<p>I recently <a href=""http://github.com/linoj/formtastic/tree/render"">forked the Formtastic project</a>  and took a shot at extracting the render   code from the semantic DSL. Worked on it some more over the weekend at  <a href=""http://railscamps.com/"">RailsCampNE</a>.  </p><p>While you can often use CSS to work through the DOM structure and get the form to look how you want, it&#39;s not always the way I would have done it, and there are cases that just aren&#39;t possible. So I decided to refactor Formtastic. At first I looked at just subclassing the builder but decided to fork the project. I made some decisions where to draw the line between DSL and &quot;render&quot;, and split the rendering into a separate module. <br /></p><p>Anyway, please have a look:  http://github.com/linoj/formtastic/blob/render/RENDERER.textile<br />and let me have any comments or suggestions. <br /></p><h2>Example</h2><p>A frequent question on the Formtastic google group is <a href=""http://groups.google.com/group/formtastic/browse_thread/thread/e43d1130f47b12fe"">something like</a>  &quot;how do i show two or more fields inline&quot;.</p><p>When Formtastic renders fields, say a first, middle, and last name input string in a view like this:<br /></p><pre>&lt;%= form.input :first_name, :label =&gt; &#39;First&#39;, :input_html =&gt; {:size =&gt; &#39;15&#39;} %&gt;<br />&lt;%= form.input :middle_name, :label =&gt; &#39;Middle&#39;, :input_html =&gt; {:size =&gt; &#39;5&#39;} %&gt;<br />&lt;%= form.input :last_name, :label =&gt; &#39;Last&#39;, :input_html =&gt; {:size =&gt; &#39;15&#39;} %&gt;</pre><br /><p> you get something like this:</p><pre>&lt;li id=&quot;user_first_name_input&quot; class=&quot;string required&quot;&gt;<br />  &lt;label for=&quot;user_first_name&quot;&gt;First&lt;abbr title=&quot;required&quot;&gt;*&lt;/abbr&gt;&lt;/label&gt; <br />  &lt;input id=&quot;user_first_name&quot; name=&quot;user[first_name]&quot; size=&quot;15&quot; type=&quot;text&quot;&gt;<br />&lt;/li&gt;<br />&lt;li id=&quot;user_middle_name_input&quot; class=&quot;string required&quot;&gt;<br />  &lt;label for=&quot;user_middle_name&quot;&gt;Middle&lt;abbr title=&quot;required&quot;&gt;*&lt;/abbr&gt;&lt;/label&gt; <br />  &lt;input id=&quot;user_middle_name&quot; name=&quot;user[middle_name]&quot; size=&quot;5&quot; type=&quot;text&quot;&gt;<br />&lt;/li&gt;<br />&lt;li id=&quot;user_last_name_input&quot; class=&quot;string required&quot;&gt;<br />  &lt;label for=&quot;user_last_name&quot;&gt;Last&lt;abbr title=&quot;required&quot;&gt;*&lt;/abbr&gt;&lt;/label&gt; <br />  &lt;input id=&quot;user_last_name&quot; name=&quot;user[last_name]&quot; size=&quot;15&quot; type=&quot;text&quot;&gt;<br />&lt;/li&gt;<br /></pre><p>&nbsp;</p><p>As you&#39;d expect, your styles are setup so each &lt;li&gt; displays each form field on separate lines. <br /></p><p>If you want to group these fields, you can use input.fields to create a fieldset like so,</p><pre>&lt;% form.inputs &#39;Full Name&#39; do %&gt;<br />  &lt;%= form.input :first_name, :label =&gt; &#39;First&#39;, :input_html =&gt; {:size =&gt; &#39;15&#39;} %&gt;<br />  &lt;%= form.input :middle_name, :label =&gt; &#39;Middle&#39;, :input_html =&gt; {:size =&gt; &#39;5&#39;} %&gt; <br />  &lt;%= form.input :last_name, :label =&gt; &#39;Last&#39;, :input_html =&gt; {:size =&gt; &#39;15&#39;} %&gt;<br />&lt;% end %&gt;<br /></pre><p>which generates,</p><pre>&lt;fieldset class=&quot;inputs&quot;&gt;<br />  &lt;legend&gt;&lt;span&gt;Full Name&lt;/span&gt;&lt;/legend&gt;<br />  &lt;ol&gt;<br />    &lt;li id=&quot;user_first_name_input&quot; class=&quot;string required&quot;<br />      &lt;label for=&quot;user_first_name&quot;&gt;First&lt;abbr title=&quot;required&quot;&gt;*&lt;/abbr&gt;&lt;/label&gt; <br />      &lt;input id=&quot;user_first_name&quot; name=&quot;user[first_name]&quot; size=&quot;15&quot; type=&quot;text&quot;&gt;<br />    &lt;/li&gt;<br />    &lt;li id=&quot;user_middle_name_input&quot; class=&quot;string required&quot;&gt;<br />      &lt;label for=&quot;user_middle_name&quot;&gt;Middle&lt;abbr title=&quot;required&quot;&gt;*&lt;/abbr&gt;&lt;/label&gt; <br />      &lt;input id=&quot;user_middle_name&quot; name=&quot;user[middle_name]&quot; size=&quot;5&quot; type=&quot;text&quot;&gt;<br />    &lt;/li&gt;<br />    &lt;li id=&quot;user_last_name_input&quot; class=&quot;string required&quot;&gt;<br />      &lt;label for=&quot;user_last_name&quot;&gt;Last&lt;abbr title=&quot;required&quot;&gt;*&lt;/abbr&gt;&lt;/label&gt; <br />      &lt;input id=&quot;user_last_name&quot; name=&quot;user[last_name]&quot; size=&quot;15&quot; type=&quot;text&quot;&gt;<br />    &lt;/li&gt;<br />  &lt;/ol&gt;<br />&lt;/fieldset&gt;</pre><p>The fields are enclosed in a fieldset. </p><p>To then force these onto the same line, you&#39;d float the input items so they&#39;re inline rather than on separate lines. And then adjust the CSS so the fieldset and legend don&#39;t really look like a fieldset and legend. If you&#39;ve ever tried this, you know it&#39;s usually a lot of uninvited work. </p><h3>Use a Formtastic ERB Renderer</h3><p>Using my Formtastic ERB renderer this is a bit easier and more intuitive.</p><p>First, install <a href=""http://github.com/linoj/formtastic/tree/render"">my fork of Formtastic</a> . Then configure the initializer to use the ERB renderer. </p><p>File: config/initializers/formtastic.rb</p><pre>Formtastic::SemanticFormBuilder.renderer = Formtastic::ErbRenderer</pre><p>Now we can specify alternative partial templates for the inputs, such as</p><pre>&lt;% form.inputs :partial =&gt; &#39;inline_items&#39; do %&gt;<br />  &lt;%= form.input :first_name, :partial =&gt; &#39;inline&#39;, :label =&gt; &#39;First&#39;, :input_html =&gt; {:size =&gt; &#39;15&#39;} %&gt;<br />  &lt;%= form.input :middle_name, :partial =&gt; &#39;inline&#39;, :label =&gt; &#39;Middle&#39;, :input_html =&gt; {:size =&gt; &#39;5&#39;} %&gt;<br />  &lt;%= form.input :last_name, :partial =&gt; &#39;inline&#39;, :label =&gt; &#39;Last&#39;, :input_html =&gt; {:size =&gt; &#39;15&#39;} %&gt;<br />&lt;% end %&gt;<br /></pre><p>What we&#39;ve done is specified the inputs should use partial &quot;inline_items&quot; and the input use partial &quot;inline&quot;. These might be defined as follows:  </p><p>File: app/views/formtastic/_inline_items.html.erb</p><pre>&lt;li class=&quot;&lt;%= wrapper[:class] %&gt;&quot; &gt;<br />  &lt;label&gt;&lt;%= legend -%&gt;&lt;/label&gt;<br />  &lt;div&gt;&lt;%= contents %&gt;&lt;/div&gt;<br />&lt;/li&gt; <br /></pre><p>File: app/views/formtastic/_inline.html.erb</p><pre>&lt;p  id=&quot;&lt;%= wrapper[:id] %&gt;&quot; class=&quot;&lt;%= wrapper[:class] %&gt;&quot; &gt;<br />  &lt;%= label -%&gt;&lt;br /&gt;<br />  &lt;%= input -%&gt;&lt;br /&gt;<br />  &lt;%= inline_errors -%&gt;<br />&lt;/p&gt;</pre><p>So now when we render the form, we get</p><pre>&lt;li class=&quot;inputs&quot;&gt;<br />  &lt;label&gt;Full Name&lt;/label&gt;<br />  &lt;div&gt;<br />    &lt;p id=&quot;user_first_name_input&quot; class=&quot;string required&quot;&gt;<br />      &lt;label for=&quot;user_first_name&quot;&gt;First&lt;abbr title=&quot;required&quot;&gt;*&lt;/abbr&gt;&lt;/label&gt;&lt;br&gt;<br />      &lt;input id=&quot;user_first_name&quot; name=&quot;user[first_name]&quot; size=&quot;15&quot; type=&quot;text&quot;&gt;&lt;br&gt;<br />    &lt;/p&gt;<br />    &lt;p id=&quot;user_middle_name_input&quot; class=&quot;string required&quot;&gt;<br />      &lt;label for=&quot;user_middle_name&quot;&gt;Middle&lt;abbr title=&quot;required&quot;&gt;*&lt;/abbr&gt;&lt;/label&gt;&lt;br&gt;<br />      &lt;input id=&quot;user_middle_name&quot; name=&quot;user[middle_name]&quot; size=&quot;5&quot; type=&quot;text&quot;&gt;&lt;br&gt;<br />    &lt;/p&gt;<br />    &lt;p id=&quot;user_last_name_input&quot; class=&quot;string required&quot;&gt;<br />      &lt;label for=&quot;user_last_name&quot;&gt;Last&lt;abbr title=&quot;required&quot;&gt;*&lt;/abbr&gt;&lt;/label&gt;&lt;br&gt;<br />      &lt;input id=&quot;user_last_name&quot; name=&quot;user[last_name]&quot; size=&quot;15&quot; type=&quot;text&quot;&gt;&lt;br&gt;<br />    &lt;/p&gt;<br />  &lt;/div&gt;<br />&lt;/li&gt;</pre><br /><p> so the inputs group is wrapped in a &lt;div&gt; and the items are in &lt;p&gt; tags. That looks palatable.</p><p>The CSS to make this inline may look like:</p><pre>form.formtastic li.inputs div {</pre><pre>  margin-left: 25%;<br />}<br /></pre><pre>  </pre><pre>form.formtastic li.inputs div label {</pre><pre>  display: inline;</pre><pre>  float: none;</pre><pre>}<br />      </pre><pre>form.formtastic li.inputs div p {</pre><pre>  float: left;</pre><pre>  margin-left: 0;</pre><pre>  margin-right: 1em;<br />}<br /></pre><p>Of course, this is just one example. In another case I need my form fields to be in arranged in a table. And so on. The point is we&#39;re no longer constrained by the hard-coded DOM structure generated by Formtastic.</p><p><img style=""width: 612px; height: 82px"" src=""var/uploads/Image/fields.jpg"" alt="" "" width=""612"" height=""82"" /> <br /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,1425,42,rails,,Replaceable_render_engines_for_Formtastic
211,"Upgrading app from Rails 2.3.2 to 2.3.5","I ran into a few snags upgrading ReviewRamp from Rails 2.3.2 to 2.3.5",3,1263329438,9,,2,"<h3>First Fail <br /></h3><p>Actually, we went to do this back on Dec 6 and ran into errors installing the Rails GEMs. I kept getting messages like </p><pre>...<br />Installing gem activerecord-2.3.5<br />Downloading gem activerecord-2.3.5.gem<br />GET 302 Found: http://gems.rubyforge.org/gems/activerecord-2.3.5.gem<br />Exception `EOFError&#39; at /opt/local/lib/ruby/1.8/net/protocol.rb:135 - end of file reached<br />GET 200 OK: http://s3.amazonaws.com/gemcutter_production/gems/activerecord-2.3.5.gem<br />Exception `Gem::Package::FormatError&#39; at /opt/local/lib/ruby/site_ruby/1.8/rubygems/package/tar_input.rb:110 - No metadata found!<br />Exception `Gem::InstallError&#39; at /opt/local/lib/ruby/site_ruby/1.8/rubygems/installer.rb:121 - invalid gem format for /opt/local/lib/ruby/gems/1.8/cache/activerecord-2.3.5.gem<br />ERROR:  Error installing rails:<br />    invalid gem format for /opt/local/lib/ruby/gems/1.8/cache/activerecord-2.3.5.gem<br />Nothing to update<br /></pre><p>&nbsp;</p><p>Googling revealed other people were running into similar issues. I tried a bunch of things, including removing the cache directory /opt/local/lib/ruby/gems/1.8/cache/activerecord-2.3.5.gem to no avail. After wasting an evening on this, I gave up and moved on to other work.</p><h3>Update Gems <br /></h3><p>Last night I decided to revisit, and try again, and the activerecord (and other Rails gems) updates went perfectly fine! Yaaah, no problems. </p><pre>$ sudo gem update rails</pre><p>Then edit the config/environment.rb (changing 2.3.2 to 2.3.5)<br /></p><pre>RAILS_GEM_VERSION = &#39;2.3.5&#39; unless defined? RAILS_GEM_VERSION</pre><p> Next I tried rake gems and got an error with the rack gem, saying </p><pre> RubyGem version error: rack(1.0.0 not ~&gt; 1.0.1) <br /></pre><p>so I tried</p><pre> $ sudo gem update rack</pre><p> That actually installed version 1.1.0, and rails still wouldn&#39;t run. After some googling and fiddling around I realized it really does require 1.0.1, so did this:</p><pre> sudo gem install rack -v=1.0.1</pre><p> Hmm, so while I was at it I decided to upgrade everything. </p><p>Ooops, some of the gems required XCode. I replaced my Mac&#39;s hard drive a number of months ago and hadnt installed the XCode stuff, so fishing out the Leopard CD&#39;s, poped in the install disk, and found the Xcode folder and installed it.</p><p>Then,</p><pre> sudo gem update</pre><p>It had been a while since I upgraded Cucumber and Rspec, so these needed some additional love. First, the new cucumber-rails and database_cleaner gems,<br /></p><pre>sudo gem install cucumber-rails</pre><pre>sudo gem install database_cleaner <br /></pre><p>Then, I made copies of config/environments/cucumber.rb and features/support/env.rb and ran</p><pre>script/generate cucumber </pre><p>And then merged my custom changes the those files back into the generated ones.</p><p>Similarly for rspec, I made copy of spec/spec_helper.rb, ran</p><pre>script/generate rspec</pre><p>and merged back my changes. <br /></p><h3>Run Tests</h3><p>Next I run through my test suites. </p><pre>rake spec</pre><p>Woot! ran fine. With a few exceptions. Mostly legitimate things that hadn&#39;t errored out before, some in my code, others in the test code itself. Fixed&#39;em. <br /></p><p>&nbsp;</p><pre>cucumber</pre><p>Oops. More problems. Mostly related to a patch I&#39;d made to webrat early last year so &quot;within&quot; can support xpath not just css selectors. I thought that had been fixed and would be in my upgrade, but no. And the patch to the current webrat is different from what we figured out last March. See https://webrat.lighthouseapp.com/projects/10503/tickets/153-within-should-support-xpath Thanks tomtt :)</p><p>The easiest way it to add the following code to into features/support </p><pre>module Webrat</pre><pre>  class Scope</pre><pre>    protected</pre><pre>    def xpath_scoped_dom</pre><pre>      @scope.dom.xpath(@selector).first</pre><pre>    end</pre><pre>    def scoped_dom</pre><pre>      begin</pre><pre>        @scope.dom.css(@selector).first</pre><pre>      rescue Nokogiri::CSS::SyntaxError, Nokogiri::XML::XPath::SyntaxError =&gt; e</pre><pre>        begin</pre><pre>          # That was not a css selector, mayby it&#39;s an xpath selector?</pre><pre>          xpath_scoped_dom</pre><pre>        rescue</pre><pre>          # Raise original css syntax error if selector is not xpath either</pre><pre>          raise</pre><pre>        end</pre><pre>      end</pre><pre>    end</pre><pre><br />  end</pre><pre>end</pre><p> A couple of other tweeks were needed (like click_button doesnt find hidden buttons now; my app used onclick javascript to submit and had a hidden button for webrat to find ?!, I fixed it to correctly be unobtrusive-- starts out visible then js hides it when enabled.).</p><p>OK, all good. On the development version, that is.<br /></p><p>Now I just need to find a &quot;convenient&quot; midnight hour to upgrade the production server too.</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,1571,42,rails,,Upgrading_app_from_Rails_2.3.2_to_2.3.5
210,"Gridify - A Ruby wrapper and Rails plugin for jqGrid",,3,1263071400,9,,2,"<p>Gridify is a Ruby wrapper and Rails plugin for jqGrid.</p><p> jqGrid is a rich featured data grid built with the jQuery javascript library. <a href=""http://www.trirand.com/jqgridwiki/doku.php"">www.trirand.com/jqgridwiki/doku.php</a></p> <p> Gridify defines a simplified, more consistent API for jqGrid rather than directly emulate the jqGrid api and options in Ruby. </p> <p> Gridify tries to respect the MVC (model-view-controller) architecture of your application. This is challenging because grid features span all three areas: it’s clearly part of the &quot;view&quot; as it mostly resides in the browser; columns in the table often directly map to columns in the model (database); and grid’s ajax requests are handled by controllers. Gridfy gives you some flexibility in managing grids within MVC. </p><p><img style=""width: 572px; height: 318px"" src=""var/uploads/Image/notesgrid.jpg"" alt="" "" width=""572"" height=""318"" /> <br /></p><h3>Example </h3> <p> Lets say we have an ActiveRecord model &quot;Note&quot; which we want to display in a grid. </p> <p> In app/models/note.rb, </p> <pre>  class Note &lt; ActiveRecord::Base<br />    gridify<br />  end<br /></pre> <p> In the NotesController, </p> <pre>  def index<br />    if request.xhr?<br />      records = Note.find_for_grid :grid, params<br />      render :xml =&gt; Note.grid.encode_records(records)<br />    else<br />      @grid = Note.grid<br />    end<br />  end<br /></pre> <p> In the app/views/notes/index.html.erb, </p> <pre>  &lt;%= @grid %&gt;<br />  &lt;h1&gt;Notes Grid&lt;h1&gt;<br />  &lt;table id=&quot;notes_grid&quot;&gt;&lt;/table&gt;<br />  &lt;div id=&quot;notes_grid_pager&quot;&gt;&lt;/div&gt;<br /></pre> <p> In this example, gridify creates a default grid named &quot;grid&quot; for the Notes model. In the controller, the #index html action supplies the @grid object used by the view; the #index xml action responds to request params with the encoded data. In the view, @grid.to_s generates the javascript code needed for the grid, which populates the table and pager div. </p><p>&nbsp;</p><p>The project source code and more documentation is on github at </p><p><a href=""http://github.com/linoj/gridify"">http://github.com/linoj/gridify</a> </p><p>&nbsp;</p><p>&nbsp;</p>",linoj,2652,"45,42","javascript,rails","jqgrid,jquery",Gridify_-_A_Ruby_wrapper_and_Rails_plugin_for_jqGrid
209,"jqGrid for RESTful Rails","jqGrid is a high quality grid plug-in for jQuery. I made a couple of tweaks so it supports RESTful requests and Rails routes.",3,1260760336,9,,2,"<p><a href=""http://www.trirand.com/blog/"">jqGrid</a>  is a high quality grid plug-in for <a href=""http://jquery.com/"">jQuery</a> . I made a couple of <a href=""http://github.com/linoj/jqGrid"">tweaks</a>  so it supports RESTful requests and <a href=""http://rubyonrails.org/"">Rails</a>  routes. The changes are on <a href=""http://github.com/linoj/jqGrid"">github</a>, and maybe they&#39;ll be pulled into the project once others have had a chance to try it.</p><p>To setup jqGrid to perform actions on individual rows in the table, you use the <a href=""http://www.trirand.com/jqgridwiki/doku.php?id=wiki:navigator"">navGrid</a>  function to configure the pager bar with navigation tools. One of options is the url to use for the add, edit, and delete actions. Normally, jqGrid passes the Id of the row as a url parameter (eg /notes?id=123). RESTful Rails requests expect the Id to be part of the url (eg /notes/123 ). I changed grid.formedit.js so you can embed the id in the url. Using &quot;{id}&quot; in the url string will be replaced by the data Id.</p><p>jqGrid also lets you set the request verb (&#39;GET&#39;, &#39;POST&#39;) using the mtype option. To support RESTful requests you&#39;d want to make sure edit (update) uses &#39;PUT&#39;, add (create) uses &#39;POST&#39;, and delete (destroy) uses &#39;DELETE&#39;. </p><p> For example,</p><pre> jQuery(&quot;#mygrid&quot;).jqGrid(&#39;navGrid&#39;,&#39;#pager&#39;,</pre><pre>  { view:true, add:true, edit:true, del:true, search:false, refresh:false },</pre><pre>  { url: &#39;/notes/{id}&#39;, mtype: &#39;PUT&#39; },   // edit settings</pre><pre>  { url: &#39;/notes&#39;, mtype: &#39;POST&#39; },       // add settings</pre><pre>  { url: &#39;/notes/{id}&#39;, mtype: &#39;DELETE&#39; } // delete settings</pre><pre>);      <br /></pre><p>Note, if you support multiselects, for example for deleting multiple rows, id will be a comma delimited array string. Your rails controller can handle that by doing something like Note.destroy( params[:id].split(&#39;,&#39;) )<br /></p><p>As a shortcut, I&#39;ve added a grid option &quot;restful: true&quot; which overrides any mtype and url settings.</p><pre>jQuery(&quot;#mygrid&quot;).jqGrid({</pre><pre>  url:      &#39;/notes&#39;,</pre><pre>  restful:  true;</pre><pre>  ... <br /></pre><pre>}); </pre><pre> </pre><pre>jQuery(&quot;#mygrid&quot;).jqGrid(&#39;navGrid&#39;,&#39;#pager&#39;,</pre><pre>  { view:true, add:true, edit:true, del:true, search:false, refresh:false },</pre><pre>  {},   // edit settings</pre><pre>  {},   // add settings</pre><pre>  {}    // delete settings</pre><pre>); <br /></pre><p>&nbsp;</p><p>&nbsp;</p>",linoj,2806,"45,42","javascript,rails","jqGrid,jQuery",jqGrid_for_RESTful_Rails
208,"Export to CSV and ""ArgumentError: A copy of SubmissionsController has been removed from the module tree but is still active!""",,3,1259822303,9,,2,"<p>For a long time my SubmissionsController #export action seemed to work just fine. Until earlier today, I noticed it wasn&#39;t working. Looking in the logs it reported </p><blockquote><p><em>ArgumentError: A copy of SubmissionsController has been removed from the module tree but is still active!</em></p></blockquote><p> The export to CSV is implemented using <a href=""http://fastercsv.rubyforge.org/"">faster_csv</a>  gem (1.5.0) and the <strong>stream_csv</strong> method as described originally in <a href=""http://oldwiki.rubyonrails.org/rails/pages/HowtoExportDataAsCSV"">http://oldwiki.rubyonrails.org/rails/pages/HowtoExportDataAsCSV</a>  and also found among other places <a href=""http://vikasnandal.wordpress.com/2008/03/09/how-to-export-data-to-csv-in-ruby-on-rails/"">here</a> . </p><p>And it worked fine. Or so I thought. I upgraded my app from Rails 2.0 to 2.3 about 6 months ago. Has it been broken that long? well, the problem never showed up in my rspec tests and I guess I haven&#39;t clicked through this feature in the browser recently. <br /></p><p>So I googled the error and found several posts related to Rails engines and/or modules and/or plugins where one module stays in memory and another is getting unloaded. It may only be an issue when running in <em>development mode</em>, i didnt really verify that; should have, but instead i kept tweaking the code to see if this change or that would make the problem go away. </p><p>Per the original examples my controller does something like this:</p><pre>def export_users<br /></pre><pre>  users = User.find(:all)</pre><pre>    stream_csv do |csv|</pre><pre>      csv &lt;&lt; [&quot;first&quot;,&quot;last&quot;,&quot;id&quot;,&quot;email&quot;]</pre><pre>      users.each do |u|</pre><pre>        csv &lt;&lt; [u.first,u.last,u.id,u.email]</pre><pre>      end</pre><pre>    end</pre><pre>  end</pre><pre><br /></pre><p>I had moved the stream_csv into its own module in lib/stream_csv.rb, something like this:</p><pre>module StreamCsv<br />  def stream_csv( basename, &amp;block )<br />     filename = basename + &quot;.csv&quot;    <br />     <br />     #this is required if you want this to work with IE        <br />     if request.env[&#39;HTTP_USER_AGENT&#39;] =~ /msie/i<br />       headers[&#39;Pragma&#39;] = &#39;public&#39;<br />       headers[&quot;Content-type&quot;] = &quot;text/plain&quot; <br />       headers[&#39;Cache-Control&#39;] = &#39;no-cache, must-revalidate, post-check=0, pre-check=0&#39;<br />       #If the above doesn’t work for you, try setting Cache-Control to private <br />       #headers[&#39;Cache-Control&#39;] = &#39;private&#39;<br />       headers[&#39;Content-Disposition&#39;] = &quot;attachment; filename=\&quot;#{filename}\&quot;&quot; <br />       headers[&#39;Expires&#39;] = &quot;0&quot; <br />     else<br />       headers[&quot;Content-Type&quot;] ||= &#39;text/csv&#39;<br />       headers[&quot;Content-Disposition&quot;] = &quot;attachment; filename=\&quot;#{filename}\&quot;&quot; <br />     end<br />  <br />    <strong>render :text =&gt; Proc.new { |response, output|<br />      csv = FasterCSV.new(output, :row_sep =&gt; &quot;\r\n&quot;) <br />      yield csv<br />    }</strong><br />  end<br />end<br /></pre><p>&nbsp;</p><p>The short of it is, I had to modify the implementation of <strong>stream_csv</strong> so the render uses FasterCSV.generate and send_data like this:</p><p>&nbsp;</p><pre><strong>     content = FasterCSV.generate( :row_sep =&gt; &quot;\r\n&quot; ) do |csv|</strong></pre><pre><strong>       yield csv</strong></pre><pre><strong>     end</strong></pre><pre><strong>     </strong></pre><pre><strong>     send_data content, :filename =&gt; filename</strong></pre><p>&nbsp;</p><p>Voila! The error goes away. I&#39;m happy. And stupid. Because I really don&#39;t know why it&#39;s ok now. Anyone want to explain?</p><p>Meanwhile, there are newer solutions to generating CSV which are cleaner altogether and move more code out of the controller, I&#39;ll probably use on my next projects. For example, See <a href=""http://rubyrailsandwindows.blogspot.com/2009/06/rails-view-export-to-csv.html"">http://rubyrailsandwindows.blogspot.com/2009/06/rails-view-export-to-csv.html</a> </p><p>&nbsp;</p><p>&nbsp;</p>",linoj,1073,42,rails,,Export_to_CSV_and_%22ArgumentError%3A_A_copy_of_SubmissionsController_has_been_removed_from_the_module_tree_but_is_still_active%21%22
207,"12 core technologies you should learn, love, and hate to be a 'real' technocrat","My presentation at PodCamp NH 2009 at the New Hampton School, New Hampton, NH (Nov 8)",3,1257733525,9,,2,"<div id=""__ss_2453787"" style=""width: 425px; text-align: left"">A &quot;dim sum&quot; (light sampling) of core technologies which everyone who considers themselves a &quot;technocrat&quot; should have some understanding and appreciation. Since there&#39;s a lot to cover, each topic will move pretty quickly, keeping the descriptions at a conceptual level.  </div><div id=""__ss_2453787"" style=""width: 425px; text-align: left""> </div><div id=""__ss_2453787"" style=""width: 425px; text-align: left""><a style=""margin: 12px 0pt 3px; font-family: Helvetica,Arial,Sans-serif; font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; line-height: normal; font-size-adjust: none; font-stretch: normal; display: block; text-decoration: underline"" href=""http://www.slideshare.net/linoj/12-core-technologies-you-should-learn-love-and-hate-to-be-a-real-technocrat"" title=""12 core technologies you should learn, love, and hate to be a &#39;real&#39; technocrat"">12 core technologies you should learn, love, and hate to be a &#39;real&#39; technocrat</a><object height=""355"" style=""margin: 0px"" width=""425""><param name=""movie"" value=""http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=podcampnh2009-091108202225-phpapp01&amp;stripped_title=12-core-technologies-you-should-learn-love-and-hate-to-be-a-real-technocrat""></param><param name=""allowFullScreen"" value=""true""></param><param name=""allowScriptAccess"" value=""always""></param><embed src=""http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=podcampnh2009-091108202225-phpapp01&amp;stripped_title=12-core-technologies-you-should-learn-love-and-hate-to-be-a-real-technocrat"" width=""425"" height=""355"" type=""application/x-shockwave-flash""></embed></object></div><div id=""__ss_2453787"" style=""width: 425px; text-align: left""><div style=""font-size: 11px; font-family: tahoma,arial; height: 26px; padding-top: 2px"">View more <a style=""text-decoration: underline"" href=""http://www.slideshare.net/"">documents</a> from <a style=""text-decoration: underline"" href=""http://www.slideshare.net/linoj"">linoj</a>.</div></div>",linoj,1430,39,musings,,12_core_technologies_you_should_learn%2C_love%2C_and_hate_to_be_a_%27real%27_technocrat
206,"qTip: awesome tooltips with jQuery",,3,1256064466,9,,2,"<p>I honestly can&#39;t say this is the best tooltip plugin for jQuery because I haven&#39;t tried out very many of them. But I did read through the jQuery plugin repository descriptions pretty thoroughly and tried out a bunch of demos. </p><p>And I landed on <a href=""http://craigsworks.com/projects/qtip/"">qTip</a>   http://craigsworks.com/projects/qtip/</p><p><strong>I can say that qTip is awesome</strong>. It is versatile and easy to use. It has many render and behavior options, for example, for making professional looking bubble tips. The online documentation is excellent. </p><p>Some notable notes:</p><ul><li>While there&#39;s generous styling options built-in, you can gain complete css control too http://craigsworks.com/projects/qtip/forum/topic/475/complete-control-via-stylesheet/<br /></li><li>Someone&#39;s worked out how to make the styles Themeroller-compatible. I havent tried it yet but looks promising. http://craigsworks.com/projects/qtip/forum/topic/211/qtips-with-jquery-ui-css-and-themeroller/</li><li>The author promises a new corners engine, which will be smaller and allow 1px border widths</li><li>It can be used to replace normal html tooltips (title), inline tips (content can be even be stored in DOM data attributes), AJAX content (which i havent used), form field help (e.g. with onfocus events, which i plan to use), <br /></li><li>and more.<br /></li></ul><p>&nbsp;</p><p>&nbsp;</p>",linoj,1573,45,javascript,,qTip%3A_awesome_tooltips_with_jQuery
205,"Atlas: something I plan to watch (and play with) looks neat",,3,1255545750,9,,2,"<object width=""437"" height=""293"" id=""viddler_1db9bf4d"" classid=""clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"">
<param name=""movie"" value=""http://www.viddler.com/simple/1db9bf4d/"" />
<param name=""allowScriptAccess"" value=""always"" />
<param name=""allowFullScreen"" value=""true"" /> <embed src=""http://www.viddler.com/simple/1db9bf4d/"" type=""application/x-shockwave-flash"" width=""437"" height=""293""></embed>
</object>",linoj,1532,39,musings,,Atlas%3A_something_I_plan_to_watch_%28and_play_with%29_looks_neat
204,"stack level too deep","My specs started failing, I traced the problem to the acts_as_paranoid plugin",3,1253722872,9,,2,"<p>I just want to share this since I wasted a lot of time tracking it down.</p><p>After upgrading my Mac to Snow Leopard, I ran the specs on my ReviewRamp app and things were failing. Actually I have no idea if or why its related to the OSX upgrade, but it could be just a coincidence. I had been away from this app for a month so maybe I did something several weeks ago to cause it and didn&#39;t re-run the spec suite. Who knows. It doesn&#39;t matter. What matters is it stopped working. I was getting errors like</p><pre>&quot;stack level too deep&quot;</pre><p>in </p><pre>vendor/plugins/acts_as_paranoid/init.rb:3:in `belongs_to_without_deleted&#39;</pre><p>The model that it was failing in didn&#39;t even use acts_as_paranoid!</p><p>I dissected my app, removing acts_as_paranoid altogether and commenting it out of models that used it, and then my specs passed.</p><p>Googling I found some old references to similar cases where that plugin was being initialized more than once, screwing up the alias_method_chain. Digging around some more I found a recent fork to the plugin which fixes the problem.</p><p>http://github.com/edendevelopment/acts_as_paranoid/commit/f73ce8d9fe7c70d15f47f70be154fb0a1920900b</p><p>So I just removed the original acts_as_paranoid and installed the forked on, and all is fine now.</p><pre>  $ script/plugin install git://github.com/edendevelopment/acts_as_paranoid.git</pre><p>This <strong><em>really</em></strong> should be merged back into the original technoweenie repository.</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,1319,42,rails,acts_as_paranoid,stack_level_too_deep
203,"source for saasramp screencast","DONT PUBLISH. Tinymce mashes the embedded html and js, so heres the source. I used safari to edit that article since it lets you paste raw html.",3,1253475917,9,,0,"<pre>&lt;script src=&quot;http://www.apple.com/library/quicktime/scripts/ac_quicktime.js&quot; language=&quot;JavaScript&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</pre><pre>&lt;script src=&quot;http://www.apple.com/library/quicktime/scripts/qtp_library.js&quot; language=&quot;JavaScript&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</pre><pre>&lt;link href=&quot;http://www.apple.com/library/quicktime/stylesheets/qtp_library.css&quot; rel=&quot;StyleSheet&quot; type=&quot;text/css&quot; /&gt;</pre><pre><br />&lt;script type=&quot;text/javascript&quot;&gt;&lt;!--</pre><pre>    QT_WritePoster_XHTML(&#39;Click to Play&#39;, &#39;/var/uploads/saasramp/saasramp-poster.jpg&#39;,</pre><pre>        &#39;/var/uploads/saasramp/saasramp.mov&#39;,</pre><pre>        &#39;640&#39;, &#39;496&#39;, &#39;&#39;,</pre><pre>        &#39;controller&#39;, &#39;true&#39;,</pre><pre>        &#39;autoplay&#39;, &#39;true&#39;,</pre><pre>        &#39;bgcolor&#39;, &#39;black&#39;,</pre><pre>        &#39;scale&#39;, &#39;aspect&#39;);</pre><pre>//--&gt;</pre><pre>&lt;/script&gt;</pre><pre>&lt;noscript&gt;</pre><pre>&lt;object width=&quot;640&quot; height=&quot;496&quot; classid=&quot;clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B&quot; codebase=&quot;http://www.apple.com/qtactivex/qtplugin.cab&quot;&gt;</pre><pre>    &lt;param name=&quot;src&quot; value=&quot;/var/uploads/saasramp/saasramp-poster.jpg&quot; /&gt;</pre><pre>    &lt;param name=&quot;href&quot; value=&quot;/var/uploads/saasramp/saasramp.mov&quot; /&gt;</pre><pre>    &lt;param name=&quot;target&quot; value=&quot;myself&quot; /&gt;</pre><pre>    &lt;param name=&quot;controller&quot; value=&quot;false&quot; /&gt;</pre><pre>    &lt;param name=&quot;autoplay&quot; value=&quot;false&quot; /&gt;</pre><pre>    &lt;param name=&quot;scale&quot; value=&quot;aspect&quot; /&gt;</pre><pre>    &lt;embed width=&quot;640&quot; height=&quot;496&quot; type=&quot;video/quicktime&quot; pluginspage=&quot;http://www.apple.com/quicktime/download/&quot;</pre><pre>        src=&quot;saasramp-poster.jpg&quot;</pre><pre>        href=&quot;saasramp.mov&quot;</pre><pre>        target=&quot;myself&quot;</pre><pre>        controller=&quot;false&quot;</pre><pre>        autoplay=&quot;false&quot;</pre><pre>        scale=&quot;aspect&quot;&gt;</pre><pre>    &lt;/embed&gt;</pre><pre>&lt;/object&gt;</pre><pre>&lt;/noscript&gt;</pre><pre><br /></pre>",linoj,0,,,,source_for_saasramp_screencast
202,"source for scratch screencast","DONT PUBLISH ME. Tinyemc mashes the embedded javascript and html to show the video. Here's the code. I used safari to edit the article because it wont run tinymce and lets you past html directly",3,1253475661,9,,0,"<pre>&lt;script src=&quot;http://www.apple.com/library/quicktime/scripts/ac_quicktime.js&quot; language=&quot;JavaScript&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</pre><pre>&lt;script src=&quot;http://www.apple.com/library/quicktime/scripts/qtp_library.js&quot; language=&quot;JavaScript&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</pre><pre>&lt;link href=&quot;http://www.apple.com/library/quicktime/stylesheets/qtp_library.css&quot; rel=&quot;StyleSheet&quot; type=&quot;text/css&quot; /&gt;  </pre><pre><br />&lt;script type=&quot;text/javascript&quot;&gt;&lt;!--</pre><pre>    QT_WritePoster_XHTML(&#39;Click to Play&#39;, &#39;/var/uploads/authapp/authapp-poster.jpg&#39;,</pre><pre>        &#39;/var/uploads/authapp/authapp.mov&#39;,</pre><pre>        &#39;640&#39;, &#39;496&#39;, &#39;&#39;,</pre><pre>        &#39;controller&#39;, &#39;true&#39;,</pre><pre>        &#39;autoplay&#39;, &#39;true&#39;,</pre><pre>        &#39;bgcolor&#39;, &#39;yellow&#39;,</pre><pre>        &#39;scale&#39;, &#39;aspect&#39;);</pre><pre>//--&gt;</pre><pre>&lt;/script&gt;</pre><pre>&lt;noscript&gt;</pre><pre>&lt;object width=&quot;640&quot; height=&quot;496&quot; classid=&quot;clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B&quot; codebase=&quot;http://www.apple.com/qtactivex/qtplugin.cab&quot;&gt;</pre><pre>    &lt;param name=&quot;src&quot; value=&quot;/var/uploads/authapp/authapp-poster.jpg&quot; /&gt;</pre><pre>    &lt;param name=&quot;href&quot; value=&quot;/var/uploads/authapp/authapp.mov&quot; /&gt;</pre><pre>    &lt;param name=&quot;target&quot; value=&quot;myself&quot; /&gt;</pre><pre>    &lt;param name=&quot;controller&quot; value=&quot;false&quot; /&gt;</pre><pre>    &lt;param name=&quot;autoplay&quot; value=&quot;false&quot; /&gt;</pre><pre>    &lt;param name=&quot;scale&quot; value=&quot;aspect&quot; /&gt;</pre><pre>    &lt;embed width=&quot;640&quot; height=&quot;496&quot; type=&quot;video/quicktime&quot; pluginspage=&quot;http://www.apple.com/quicktime/download/&quot;</pre><pre>        src=&quot;/var/uploads/authapp/authapp-poster.jpg&quot;</pre><pre>        href=&quot;/var/uploads/authapp/authapp.mov&quot;</pre><pre>        target=&quot;myself&quot;</pre><pre>        controller=&quot;false&quot;</pre><pre>        autoplay=&quot;false&quot;</pre><pre>        scale=&quot;aspect&quot;&gt;</pre><pre>    &lt;/embed&gt;</pre><pre>&lt;/object&gt;</pre><pre>&lt;/noscript&gt;</pre><pre><br /></pre><br />",linoj,0,,,,source_for_scratch_screencast
201,"SaasRamp Screencast","SaasRamp is an open source Rails plugin which enables subscription billings in your application. This screencast demos SaasRamp and explores the generators and features built into the plugin.",3,1253397525,9,,2,"<p>SaasRamp is an open source Rails plugin which enables subscription billings in your application. It is built as a wrapper on ActiveMerchant, stores credit cards in the gateway, handles its own daily processing, and is completely independent of the authorization and authentication you choose.</p>

<p>For details check out the README and source code at http://github.com/linoj/saasramp</p>

<p>Rather than blogging a detailed introduction or writing a tutorial for the new SaasRamp plugin, I decided to make a screencast demo. The screencast starts with a skeleton application built in my previous screencast: <a href=""http://www.vaporbase.com/postings/Using_BDD_and_generators_to_create_a_Rails_app_from_scratch_Screencast"">Using BDD and generators to create a Rails app from scratch Screencast</a>, where using some generators and a behavior driven approach, we create a simple Rails application with one resource and user authentication.</p>

<p>In this screencast we install the plugin (and dependencies), generate the initialization and migrations, show how to integrate it into your app including setting up email notifications and the daily rake task for processing renewals. We run a number of Cucumber feature scenarios to show the plugin in action.</p>

<h2>Code snippets</h2>
<p>If you want to follow along this screencast, you could do the other screencast first and build the skeleton app. Or download that app from github at http://github.com/linoj/demo-authapp.  </p>

<p>Also if you&#39;re following along this screencast, there are some gists available for you to paste: http://gist.github.com/189670</p>

<h2>Download video</h2>

<a href=""/var/uploads/saasramp/saasramp-desktop.m4v"">saasramp-desktop.m4v</a> (39mb)

<h2>Click to play</h2>

<script src=""http://www.apple.com/library/quicktime/scripts/ac_quicktime.js"" language=""JavaScript"" type=""text/javascript""></script>
<script src=""http://www.apple.com/library/quicktime/scripts/qtp_library.js"" language=""JavaScript"" type=""text/javascript""></script>
<link href=""http://www.apple.com/library/quicktime/stylesheets/qtp_library.css"" rel=""StyleSheet"" type=""text/css"" />

<script type=""text/javascript""><!--
	QT_WritePoster_XHTML('Click to Play', '/var/uploads/saasramp/saasramp-poster.jpg',
		'/var/uploads/saasramp/saasramp.mov',
		'640', '496', '',
		'controller', 'true',
		'autoplay', 'true',
		'bgcolor', 'black',
		'scale', 'aspect');
//-->
</script>
<noscript>
<object width=""640"" height=""496"" classid=""clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B"" codebase=""http://www.apple.com/qtactivex/qtplugin.cab"">
	<param name=""src"" value=""/var/uploads/saasramp/saasramp-poster.jpg"" />
	<param name=""href"" value=""/var/uploads/saasramp/saasramp.mov"" />
	<param name=""target"" value=""myself"" />
	<param name=""controller"" value=""false"" />
	<param name=""autoplay"" value=""false"" />
	<param name=""scale"" value=""aspect"" />
	<embed width=""640"" height=""496"" type=""video/quicktime"" pluginspage=""http://www.apple.com/quicktime/download/""
		src=""saasramp-poster.jpg""
		href=""saasramp.mov""
		target=""myself""
		controller=""false""
		autoplay=""false""
		scale=""aspect"">
	</embed>
</object>
</noscript>

<p>&nbsp;</p>
",linoj,1639,42,rails,"rails,saas,saasramp,activemerchant,plugin,screencast",SaasRamp_Screencast
199,"Using BDD and generators to create a Rails app from scratch Screencast","Using some generators and a behavior driven approach, we create a simple Rails application with one resource and user authentication.",3,1253395364,9,,2,"<p>In this screencast we take a BDD (behavior driven development) approach to building a new Ruby on Rails application from scratch, using some nifty generators to bootstrap the application. The result is a basic setup that could be used as a starting point for full applications. </p>

<p>The application is built using several readily available generators, including <a href=""http://github.com/ryanb/nifty-generators"">Ryan Bates&#39;</a> nifty_layout, nifty_authentication and nifty_scaffold. The development is driven by a couple of little <a href=""http://cukes.info/"">Cucumber</a> scenarios which read like plain English stories, and <a href=""http://rspec.info/"">rspecs</a>. We use <a href=""http://github.com/binarylogic/authlogic"">Authlogic</a> for user registration and login (authentication).</p>

<p>Actually I <strong>did not</strong> set out to create this tutorial per se. Rather, this started as part of my <a href=""http://www.vaporbase.com/postings/SaasRamp_Screencast"">introductory demo to SaasRamp</a>, a new open-source plug-in for subscription based applications. The plug-in demo needed a dummy app to start from, but these details would be distracting to include there, so I extracted it (and filled in more details) becoming this screencast. </p>

<h2>Code snippets</h2>

<p>Some code snippets are pasted into files during the screencast, which I&#39;ve posted in a gist at http://gist.github.com/189671</p>

<p>Also, I've saved the final little app we built in the screencast to http://github.com/linoj/demo-authapp</p>

<h2>Download video</h2>
<a href=""/var/uploads/authapp/authapp-desktop.m4v"">authapp-desktop.m4v</a> (25mb)

<h2>Click to play</h2>

<script src=""http://www.apple.com/library/quicktime/scripts/ac_quicktime.js"" language=""JavaScript"" type=""text/javascript""></script>
<script src=""http://www.apple.com/library/quicktime/scripts/qtp_library.js"" language=""JavaScript"" type=""text/javascript""></script>
<link href=""http://www.apple.com/library/quicktime/stylesheets/qtp_library.css"" rel=""StyleSheet"" type=""text/css"" />  

<script type=""text/javascript""><!--
	QT_WritePoster_XHTML('Click to Play', '/var/uploads/authapp/authapp-poster.jpg',
		'/var/uploads/authapp/authapp.mov',
		'640', '496', '',
		'controller', 'true',
		'autoplay', 'true',
		'bgcolor', 'yellow',
		'scale', 'aspect');
//-->
</script>
<noscript>
<object width=""640"" height=""496"" classid=""clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B"" codebase=""http://www.apple.com/qtactivex/qtplugin.cab"">
	<param name=""src"" value=""/var/uploads/authapp/authapp-poster.jpg"" />
	<param name=""href"" value=""/var/uploads/authapp/authapp.mov"" />
	<param name=""target"" value=""myself"" />
	<param name=""controller"" value=""false"" />
	<param name=""autoplay"" value=""false"" />
	<param name=""scale"" value=""aspect"" />
	<embed width=""640"" height=""496"" type=""video/quicktime"" pluginspage=""http://www.apple.com/quicktime/download/""
		src=""/var/uploads/authapp/authapp-poster.jpg""
		href=""/var/uploads/authapp/authapp.mov""
		target=""myself""
		controller=""false""
		autoplay=""false""
		scale=""aspect"">
	</embed>
</object>
</noscript>
",linoj,5105,42,rails,"rails,cucumber,authlogic,nifty,generator",Using_BDD_and_generators_to_create_a_Rails_app_from_scratch_Screencast
198,"Wal-mart Applicant","I don't know if this has been going around the internet for years or even a fake, but still it's really funny!
",3,1250954073,9,,2,"<p><img style=""width: 640px; height: 464px"" src=""var/uploads/Image/image-1.jpg"" alt="" "" width=""640"" height=""464"" /></p><p>&nbsp;</p><p><img src=""var/uploads/Image/walmart2.jpg"" alt="" "" /> </p><p><img src=""var/uploads/Image/walmart3.jpg"" alt="" "" /> </p><p><img src=""var/uploads/Image/walmart4.jpg"" alt="" "" /> <br /></p>",linoj,1189,39,musings,,Wal-mart_Applicant
197,"Husage: A Better HughesNet Usage Report","This week I released a useful little utility as a service for HughesNet satellite internet customers.",3,1250220336,9,,2,"<p>&quot;<a href=""http://www.husage.net"">Husage</a> &quot; is free service for HughesNet users that provides reports of your download usage over 24 hour periods, and sends you an email alert if your usage level exceeds a threshold.</p><p>Our family is a HughesNet customer. Like all HughesNet users we are subject to the so-called &quot;Fair Access Policy&quot; (FAP) which limits the number of megabytes we can download in any 24 hour period. If and when we exceed this limit, the service virtually shuts down, slowing access to less than dial-up speed for the next 24 hours. <br /></p><p>This is a brutal disruption, especially for families like ours who rely on the internet all the time, for email, web browsing, running a home-based business, homework, itunes, youtube, games, system updates, and so on.</p><p>I wrote this little tool to help us manage our downloads. The Husage utility has better reports than those provided by HughesNet, including</p><ul><li>A column for Total Accumulated Downloads from the previous 24 hours (minus the free bandwidth hours)</li><li>Color coding of periods that exceed given Warning and Alert levels</li><li>Email alerts when usage exceeds the given Warning and Alert levels</li><li>Personal preferences to set Warning and Alert levels, email addresses, time zone, etc.<br /></li></ul><p>Since there may be other HughesNet customers who could use this tool, we decided to let you use it for free for your own HughesNet usage reports. <br /></p><p>Check it out at <a href=""http://www.husage.net"">http://www.husage.net</a></p><p>&nbsp;</p>",linoj,1448,39,musings,,Husage%3A_A_Better_HughesNet_Usage_Report
196,"iMac disk died","Replaced hard disk, reinstalled everything, restored data, installed better backup solution, went fairly smoothly.",3,1248205082,9,,2,"<h2>Preface - Narrative <br /></h2><p>I&#39;m probably the only person in the Rails development world who uses a desktop iMac instead of a macbook. <em>Whatever</em>. That didn&#39;t stop me from thinking i&#39;m mobile, so I lugged my box to Maine for the weekend for <a href=""http://railscamps.com/"">RailsCamp</a>.</p><p>The night before, I did a backup, a prudent thing to do before going on the road. <br /></p><p>I do backups regularly but manually, and not thoroughly. Basically I&#39;d copy important data to another PC on the home network. That worked out pretty well for those files, but unless I missed some things (which I did), they&#39;d be lost. (My ReviewRamp project source is backed up daily (at least) offsite to a git host - Unfuddle.com). Also I didn&#39;t have backups of my apps and other stuff i&#39;ve downloaded and installed over the years. Three (3) years, that&#39;s alot of stuff. <br /></p><p>Upon arriving i hung out a bit with the guys and then went to fire up my iMac... oh no! i get a white screen, with flashing folder icon and question mark. It wont boot, couldn&#39;t find my OS. I&#39;ve seen this before, it requires booting off the OSX install disk and running Disk Utility / FirstAid. Of the 30 people there, no one had an install disk. We tried booting from a laptop using a firewire cable; also tried mounting my mac as a remote disk onto a laptop. Nothing. Acted as if the hard drive didn&#39;t exist. </p><p>So I hung out into the night and drank a few more beers. The next morning I packed up and went home (2 hr drive) to fix it and planned to go back to camp later in the afternoon. No such luck.</p><p>Got home. Popped in my OSX install disk. Ran Disk Utility. The hard drive wasn&#39;t listed. Futzed around some more. Tried some command line commands. Googled for help. Realized the drive hardware actually is listed, as 0 bytes and strange identifier. Googled some more. Everything pointed to a hardware problem on the drive, a blown chip or something.</p><p>My wife found a YouTube video showing how to open the iMac and replace the hard drive. Remove the case, it looks like an old TV Dinner inside. Peel away the foil, remove the flat screen, voila there&#39;s the disk. Remove the disk (and peel off the heat sensor, which is glued on with rubber cement).</p><p>Brought the disk into Staples. Amazing! They had the exact model, Western Digital SATA drive, with twice the capacity (500MB). Also bought an external backup drive. So, I put in the new hard drive, re-assembled the mac pretty reasonably (but why was the last screw a few millimeters longer than it should have been??!). The machine boots. Go into Disk Utility. It&#39;s there. I partition and format the new drive so now it&#39;s ready. </p><p>One more issue. My internet connection is via satellite (HughesNet), which limits us to 500MB downloads over any 24 hour period. If we exceed the limit, access is virtually shut down for the next 24 hours (slower than dialup). Bastards. Except between 2am and 7am. Looks like I&#39;ll be up all night doing downloads.</p><h2>Reinstall</h2><p>Pop in the <strong>OSX</strong> Install disk and reboot. Go through the install. That takes an hour. I take a nap, and get up at 2am. Connected to the internet, I begin downloading updates to OSX 10.4 (&quot;Tiger&quot;). About 2GB of updates were downloaded between 2am and 6am.</p><p>Geez, maybe I should have picked up a copy of Leopard (10.5) while at the store, but I didn&#39;t. I hadn&#39;t upgraded from Tiger to Leopard yet, and the next version, Snow Leopard, is due in September so I figured I&#39;ll just wait. </p><p>Also install the <strong>Xcode</strong> tools from the OSX disks. <br /></p><p><strong>Mail</strong>. Setup my various email accounts. Copied my mail folders from the backups (more about this later) into ~/Library/Mail/. Seems to work.</p><p>Open Office. I&#39;m still using OO, should probably to switch to CocoaOffice but first priority is to get things as they were.</p><p><strong>MacPorts</strong>. Install macport, the download utility to install other stuff.</p><p>    http://trac.macports.org/wiki/InstallingMacPorts<br />    http://svn.macports.org/repository/macports/downloads/MacPorts-1.7.1/ <br />        click MacPorts-1.7.1-10.4-Tiger.dmg </p><pre>$ sudo port selfupdate</pre><p>            to test it runs; should already be up to date</p><p><strong>Ruby GEMS</strong>. Install ruby gems package utility <br /></p><pre>$ sudo port install rb-rubygems</pre><pre> </pre><p>THE REST OF THIS POST is basically a laundry list of stuff on my system. It&#39;s here mostly for my own documentation, probably isn&#39;t too interesting to anyone else. <br /></p><h3>MySQL setup</h3><p>ref: http://www.buildingwebapps.com/articles/6455-setting-up-rails-on-tiger-mac<br />ref: http://2tbsp.com/content/install_and_configure_mysql_5_macports <br /></p><p>$ sudo port install mysql5<br />$ sudo port install mysql5-server<br />$ sudo launchctl load -w /Library/LaunchDaemons/org.macports.mysql5.plist<br />$ sudo -u mysql mysql_install_db5<br />$ sudo cp /opt/local/share/mysql5/mysql/my-medium.cnf /opt/local/etc/mysql5/my.cnf<br />        edit my.cnf, adding per article <br />            socket          = /tmp/mysql.sock<br /><br />add to ~/.profile<br />    alias mysqlstart=&#39;sudo /opt/local/bin/mysqld_safe5 &amp;&#39;<br />    alias mysqlstop=&#39;/opt/local/bin/mysqladmin5 -u root -p shutdown&#39;<br />$ mysqlstart<br />$ /opt/local/lib/mysql5/bin/mysqladmin -u root password &#39;secret&#39;<br />$ /opt/local/lib/mysql5/bin/mysqladmin -u root -h jsl.local password &#39;secret&#39;<br /><br />confirm its running with<br />        $ mysql5 -p -u root<br /> </p><h3>Php5 Setup</h3><p>$ sudo port install php5<br />    $ sudo cp /opt/local/etc/php5/php.ini-development /opt/local/etc/php5/php.ini<br />        <br />    Edit your php.ini file located at /opt/local/etc/php5/php.ini<br />        mysql.default_socket = /tmp/mysql.sock<br /> </p><h3>Apache2 Setup</h3><p>$ sudo port install apache2 <br /></p><p>$ sudo launchctl load -w /Library/LaunchDaemons/org.macports.apache2.plist <br /></p><p>edit /opt/local/apache2/conf/httpd.conf<br />        <em>my email</em></p><p><br />        <em># http://localhost/  sees ~/Sites/index.html</em><br />        document root - /Users/jonathan/Sites<br />        <br />        <em>uncomment</em><br />        Include conf/extra/httpd-autoindex.conf (Fancy directory listing)<br />        Include conf/extra/httpd-default.conf (Some default settings)<br /><br />        <em>add</em><br />        Include conf/extras-conf/*.conf (contains mod_php.conf)<br />        <br />        <em>add index.php to</em><br />        DirectoryIndex index.html, index.php<br /></p><p><br />    $ cd /opt/local/apache2/modules<br />    $ sudo /opt/local/apache2/bin/apxs -a -e -n &quot;php5&quot; libphp5.so<br /> </p><p>    $ sudo killall -9 httpd<br />    $ sudo /opt/local/apache2/bin/apachectl stop<br />    $ sudo /opt/local/apache2/bin/apachectl start<br />        <br />    adding this to .profile<br />        alias apache=&#39;sudo /opt/local/apache2/bin/apachectl&#39;<br />    <br />        $ apache stop<br />        $ apache start <br />    Will launch apache2 at startup, see /Library/LaunchDaemons/org.macports.apache2.plist<br />    </p><p>But its not connection to Preferences Sharing pane, so turn/keep that off (Apache 1). (How to fix this?)</p><p>    <br />    create phpinfo.php<br />        &lt;?php phpinfo(); ?&gt; <br />    <br />    http://localhost/phpinfo.php<br /> </p><h3>Rails setup</h3><p>$ sudo gem install rails</p><p>$ sudo gem install sqlite3-ruby</p><p>$ sudo gem install mongrel --include-dependencies</p><p>&nbsp;</p><h3>Other Ports:</h3><p>git-core +doc <br /></p><p>rb-termios</p><p>ImageMagick</p><p>ghostscript <br /></p><p>&nbsp;</p>  <h3>Other Gems:</h3><p>capistrano</p><p>mysql -- --with-mysql-config=/opt/local/bin/mysql_config5</p><p>ruby-debug</p><p>hpricot</p><p>spork</p><p>nokogiri -v 1.3.1</p><p>rspec</p><p>rspec-rails</p><p>tzinfo</p><p>cucumber webrat</p><p>jscruggs-metric_fu</p><p>term-ansicolor </p><p>treetop </p><p>diff-lcs </p><p>ruby2ruby</p><p>fastercsv</p><p>cheat</p><p>chardet</p><p>tidy</p><p>RedCloth</p><p>mislav-will_paginate <br /></p><p>&nbsp;</p><p>click to download http://html5lib.googlecode.com/files/html5-0.10.0.gem<br />$ sudo gem install /Users/jonathanlinowes/downloads/html5-0.10.0.gem<br /><br /></p> <h3>Other apps:</h3><p>CocoaMySql   http://www.sequelpro.com/release-archive.html </p><p>Path Finder </p><p>iGetter </p><p>Fireworks <br /></p><p>Stuffit Expander <br /></p><p>Menu Meters http://ragingmenace.com/software/menumeters/</p><p>Cronnix (gui for cron)</p><p>Netzero software (for emergency dialup access)</p><p>&nbsp;</p> <h3>Fubar Mail</h3><p>The only real hassle is the problem i&#39;m having restoring my old emails. The .emlx files are there but when I go into Mail and click on an message I see  something like:<br /></p><p>&quot;The message from foo@bar.com concerning “Welcome!” has not been downloaded from the server. You need to take this account online in order to download it.&quot; <br /></p><p>This is only some folders (including all the Inbox account folders) but certainly not all folders are bashed. Running &quot;rebuild&quot; and the messages completely disappear from the list. </p><p>From the command line I try to copy the .emlx files into a mailbox by hand, and then rebuild. That seem to work. Until i reboot, then problem recurrs. I&#39;m still looking into this.</p><h3>Backups</h3><p>For a sane backup solution I bought a Western Digital &quot;My Book&quot; external drive. Connected via Firewire. Installed the enclosed mac software. </p><p>DONT DO IT. &quot;My Backup Anywhere&quot; (aka Memeo) is supposed to be like Apple&#39;s Time Machine, automatically backing up files as you save them, never having to do an actual backup again, so I gave it a try. Well, I started the initial backup and after 15 hours it was still copying files!! And even so, it only looks at my personal files, not system files or installed apps. (my user directory on this new install is only 2.5gig).</p><p>Decided to use Carbon Copy Clone. Downloaded a copy (it&#39;s donation-ware). Re-partitioned the WD drive for the mac file system, ran a full system backup -- 25 GB including all OSX, apps, gems, etc took less than an hour. </p><p>Now it&#39;s setup to run an incremental backup once a night. And the file system on the external drive is standard (no software needed to restore files) I can browse it with Finder or command line. </p><p>OK, only a couple days lost, days i hoped to be spending learning, teaching, and goofing off at RailsCamp. Now i&#39;ve got to get back to work...</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,2405,38,xamp,,iMac_disk_died
195,"ReviewRamp Beta Escapes!!","Hurray! We finally released the public Beta version of ReviewRamp, today!",3,1246233660,9,,2,"<p>Years ago I worked for a large software company where a marketing executive confided in me, “We don’t release products here, they just escape.” He was lamenting how the company was too technically driven. Engineers and product managers always wanted to add “just one more feature” before letting a product out the door.</p><p>On the other hand, this company was headquartered in Marin County, California, where quality wineries know “No wine before it’s time.”</p><p>For ReviewRamp, we’ve tried to strike a healthy balance between getting our first public Beta release into people’s hands, and ensuring the product exceeds expectations for quality, performance, and features.</p><h2>What is ReviewRamp?</h2><p>With ReviewRamp you get a complete system for collecting, reviewing, and managing online submissions. Collaborate with a group of reviewers. Setup is easy, with predefined fieldsets for common projects that you can customize to your specific requirements.</p><p>ReviewRamp can be used for a wide range of applications, from contests, to award nominations, to grant applications, to business proposals. More details can be found at http://www.reviewramp.com</p><h2>What is the ReviewRamp Beta Release?</h2><p>ReviewRamp is online now, and you can sign up FREE as a Beta Tester! We&#39;d like to see you becoming productive with ReviewRamp right away. We want to hear how you might use the service; how it can be valuable to you. We encourage you to work with us, helping identify the product’s strengths and weaknesses. Meanwhile, we’re still working on improvements and adding new features.</p><h2>Here are some links to get you started: </h2><p>    <strong>ReviewRamp home:</strong>          http://www.reviewramp.com<br /><br />    <strong>ReviewRamp blog: </strong>           http://support.reviewramp.com/blog<br /><br />    <strong>ReviewRamp tutorials: </strong>    http://www.reviewramp.com/tutorials<br /></p><p>&nbsp;</p>",linoj,1209,44,reviewramp,,ReviewRamp_Beta_Escapes%21%21
194,"How to catch the swine flu",,3,1241204551,9,,2,"<p>&nbsp;</p><div style=""text-align: center""><img src=""var/uploads/Image/H1N1.jpeg"" alt=""pig lick"" /></div><p>[Credits: David sent me this...]<br /></p>",linoj,1611,39,musings,,How_to_catch_the_swine_flu
193,BaseWithoutTable,"The BaseWithoutTable Rails plugin is handy for making models that don't have a corresponding database table. I started using it about a year ago and thought I do a little writeup about it. ",3,1236094420,9,,2,"<p>BaseWithoutTable offers the power of ActiveRecord models, including validation, without having a table in the database. It can be handy in a number of situations, including </p><ul><li>behavior driven development  </li><li>constants management</li><li>presentation layer</li></ul><p>I&#39;m using an older (svn) version but the current one is on github http://github.com/sofadesign/active_record_base_without_table/tree/master</p><h3>Example</h3><p>For example, my app keeps a bunch of choice lists that are reused in different forms. Eventually I&#39;ll implement CRUD operations for maintaining the lists, but for now its ok to hardcode the built-in ones.</p><p>&nbsp;</p><pre>class ChoiceList &lt; ActiveRecord::BaseWithoutTable<br />  column :project_id, :integer<br />  column :name, :string<br />  column :choices, :textarea<br />  column :value_type, :string</pre><pre><br />  def self.find( how )<br />    choices = []<br />    case how<br />    when :all<br />     choices &lt;&lt; [new( :value_type =&gt; &#39;string&#39;,  :name =&gt; &#39;Marital status&#39;, :choices =&gt; &quot;Single\nMarried\nSeparated\nDivorced\nWidowed&quot; )]<br />   ...etc...</pre><p>&nbsp;</p><h3>Behavior Driven Development</h3><p>As an alternative to mocking and stubbing of models that haven&#39;t been implemented, you can consider making a &#39;working mock&#39; with BaseWithoutTable. For example, I had code that needed a model to respond to a #find call. Rather than mocking it, I actually implement it but without the database table. The find method returns an array of items to make the app function. Later I can go in and implement the model for real.</p><h3>Constants Management</h3><p>BaseWithoutTable is handy for any read-only data. Why experience the overhead of database access? And rather than just uninteligent Ruby constants, you get alot of the ActiveRecord goodies.  </p><h3>Presentation Layer</h3><p>A presentation layer includes a virtual model and a corresponding controller that for example, aggregates multiple models for user interaction. Conventional Rails controllers and views can get kind of complicated doing this. There are a bunch of different solutions for presentation layers, some more formal than other (and lots of discussion) if you google for it. A simple way is to use BaseWithoutTable to make your virtual model, make a conventional controller for the model, along with its views. Then a form that has fields from various models can be read, write, and validated by the virtual model. (To be honest, I havent integrated this technique into my app but I&#39;d like to soon).<br /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,1625,42,rails,"active record",BaseWithoutTable
192,button_submit_tag,"A helper that's been missing from Rails",3,1235748876,9,,2,"<p>With submit_tag to submit forms, the action receives params[:commit] =&gt; value of the button, where value is also the label on the button. That&#39;s been fine most of the time even when you decide to change the button label from, for example, &quot;Update&quot; to &quot;Save Changes&quot;, since, most of the time you don&#39;t care at all about that. But when a form has more than one way to submit you may need to know which of the buttons were clicked. In that case the controller might have hardcoded the :commit value, eg if params[:commit] == &#39;add&#39; etc. Then tying the value to the GUI can make you scream, especially in cases where there&#39;s multiple buttons.</p><p>The solution would be to use the &lt;button&gt; tag, but for some reason Rails doesn&#39;t have a button_submit_tag helper. (Anyone know why?) </p><p>So with some tinkering I got a helper that works; throw it into application_helper.rb:</p><pre>  def button_submit_tag(name, value=nil, label=nil, options = {})</pre><pre>    content_tag :button, label||name.humanize, <br />        { &quot;type&quot; =&gt; &quot;submit&quot;, &quot;name&quot; =&gt; name, &quot;id&quot; =&gt; name, <br />        &quot;value&quot; =&gt; value||name }.update(options.stringify_keys)</pre><pre>  end</pre><p>You can use it like,</p><pre>&lt;%= button_submit_tag( &#39;add_item&#39;, &#39;foo&#39;, &#39;Add a Foo&#39;,  :title =&gt; &#39;Add an item&#39; ) %&gt;</pre><p>results in</p><pre>&lt;button value=&quot;foo&quot; type=&quot;submit&quot; title=&quot;Add an item&quot; name=&quot;add_item&quot; id=&quot;add_column&quot;&gt;Add a Foo&lt;/button&gt; </pre><p>and submits</p><pre>params[:add_item] =&gt; &#39;foo&#39;<br /></pre><p>Label could be any html (but if just an image, might as well use image_submit_tag helper). I probably should extend it to accept a content block also, but it works fine as is for me right now. <br /></p>",linoj,1197,42,rails,helpers,button_submit_tag
191,"Self image","I thought I'd pass along this comic strip which, unfortunately, rings more truth than I care to admit... :)",3,1233495323,9,,2,"<p>&nbsp;</p><p>&nbsp;</p><div style=""text-align: center""><img style=""width: 480px; height: 505px"" src=""var/uploads/Image/diner%20comic.jpeg"" alt="" "" width=""480"" height=""505"" /></div> <br /><p>&nbsp;</p>",linoj,1511,39,musings,,Self_image
190,"My NH Ruby Presentation","Last night I presented at the monthly NH Ruby users group meeting. ",3,1232127489,9,,2,"<p>Last night I had the floor at the monthly <a href=""http://nhruby.org/"">NH Ruby users group</a>  meeting. Thanks to Nick and the group for inviting me. </p><p>I apologize for being 1/2 hour late, it&#39;s a 2.5 hour drive from my house to Portsmouth NH, but with stopping for coffee and gas, and getting pulled over for speeding (oh $hit), it took more like 3 hours. And I left the house later than I&#39;d planned because I decided to do a full backup of my pc at the last minute (I brought my iMac to the meeting since my &#39;desktop&#39; is my &#39;laptop&#39;; yeah, i know, sometimes I do things backwards).</p><p>When I got there, the conference room was pretty full, about 14 people, eating pizza and having a wonderful time, shouting, laughing, dancing half-nude on the conference table -- it&#39;s a good thing I got there in time to calm them down. (Very much just kidding, it was a pretty sedate room). I was expecting maybe half a dozen, so this was cool. Tim <a href=""http://nhruby.org/2009/1/15/broadcasting-live"">streamed</a>  the meeting over the net and said there were 14 other people watching at one point. </p><p>Of course, I forgot to bring a VGA adapter so we couldn&#39;t hook the iMac to the projector, but I did bring a memory stick with the presentations too (good thinking!) and I borrowed someone else&#39;s laptop for the projector. </p><p>I gave a <a href=""http://nhruby.org/2008/12/26/nhruby-january-meeting"">presentation</a>  on several of the things I&#39;ve been working on over the past year, namely,<br /></p><ul><li>ReviewRamp</li><li>Using Cucumber</li><li>DynamicRecord</li></ul><p>I&#39;ve posted the presentations on <a href=""http://www.slideshare.net/linojon/slideshows"">slideshare</a> , and embedded them below. Figuring this was a techie group, I didnt spend a whole lot of time on making the slides pretty. The material jumps right into the topics, with minimal introduction, rolling up our sleves and getting to it. I hope this didn&#39;t alienate some people in the group, but I figured in this setting, present substance over stuff that can be easily googled.<br /></p><p>My talk prompted some discussion but not a whole lot. So either the group was completely mesmerized, overwhelmed, or asleep! By consensus, the meeting went to 9:30 rather than 9, making up my lost half hour, so that&#39;s a good sign.  </p><p>Afterwards a bunch of us went out for beers, and I headed back to north country around midnight, getting home in the wee hours and sleeping-in this morning. <br /></p><p>&nbsp;</p><p>&nbsp;</p>  <div id=""__ss_924253"" style=""width: 425px; text-align: left""><a style=""margin: 12px 0pt 3px; font-family: Helvetica,Arial,Sans-serif; font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; line-height: normal; font-size-adjust: none; font-stretch: normal; display: block; text-decoration: underline"" href=""http://www.slideshare.net/linoj/reviewramp-presentation-presentation-924253?type=powerpoint"" title=""ReviewRamp Presentation"">ReviewRamp Presentation</a><object height=""355"" style=""margin: 0px"" width=""425""><param name=""movie"" value=""http://static.slideshare.net/swf/ssplayer2.swf?doc=reviewramp-presy-1232127049039736-3&amp;stripped_title=reviewramp-presentation-presentation-924253""></param><param name=""allowFullScreen"" value=""true""></param><param name=""allowScriptAccess"" value=""always""></param><embed src=""http://static.slideshare.net/swf/ssplayer2.swf?doc=reviewramp-presy-1232127049039736-3&amp;stripped_title=reviewramp-presentation-presentation-924253"" width=""425"" height=""355"" type=""application/x-shockwave-flash""></embed></object><div style=""font-size: 11px; font-family: tahoma,arial; height: 26px; padding-top: 2px"">View SlideShare <a style=""text-decoration: underline"" href=""http://www.slideshare.net/linoj/reviewramp-presentation-presentation-924253?type=powerpoint"" title=""View ReviewRamp Presentation on SlideShare"">presentation</a> or <a style=""text-decoration: underline"" href=""http://www.slideshare.net/upload?type=powerpoint"">Upload</a> your own. (tags: <a style=""text-decoration: underline"" href=""http://slideshare.net/tag/reviewramp"">reviewramp</a> <a style=""text-decoration: underline"" href=""http://slideshare.net/tag/ruby"">ruby</a>)</div></div>  <div id=""__ss_924254"" style=""width: 425px; text-align: left""><a style=""margin: 12px 0pt 3px; font-family: Helvetica,Arial,Sans-serif; font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; line-height: normal; font-size-adjust: none; font-stretch: normal; display: block; text-decoration: underline"" href=""http://www.slideshare.net/linoj/cucumber-how-i-slice-it-presentation-924254?type=powerpoint"" title=""Cucumber: How I Slice It"">Cucumber: How I Slice It</a><object height=""355"" style=""margin: 0px"" width=""425""><param name=""movie"" value=""http://static.slideshare.net/swf/ssplayer2.swf?doc=cucumber-presy-1232127058292477-3&amp;stripped_title=cucumber-how-i-slice-it-presentation-924254""></param><param name=""allowFullScreen"" value=""true""></param><param name=""allowScriptAccess"" value=""always""></param><embed src=""http://static.slideshare.net/swf/ssplayer2.swf?doc=cucumber-presy-1232127058292477-3&amp;stripped_title=cucumber-how-i-slice-it-presentation-924254"" width=""425"" height=""355"" type=""application/x-shockwave-flash""></embed></object><div style=""font-size: 11px; font-family: tahoma,arial; height: 26px; padding-top: 2px"">View SlideShare <a style=""text-decoration: underline"" href=""http://www.slideshare.net/linoj/cucumber-how-i-slice-it-presentation-924254?type=powerpoint"" title=""View Cucumber: How I Slice It on SlideShare"">presentation</a> or <a style=""text-decoration: underline"" href=""http://www.slideshare.net/upload?type=powerpoint"">Upload</a> your own. (tags: <a style=""text-decoration: underline"" href=""http://slideshare.net/tag/cucumber"">cucumber</a> <a style=""text-decoration: underline"" href=""http://slideshare.net/tag/rails"">rails</a>)</div></div>  <div id=""__ss_924255"" style=""width: 425px; text-align: left""><a style=""margin: 12px 0pt 3px; font-family: Helvetica,Arial,Sans-serif; font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; line-height: normal; font-size-adjust: none; font-stretch: normal; display: block; text-decoration: underline"" href=""http://www.slideshare.net/linoj/dynamicrecord-presentation-presentation-924255?type=powerpoint"" title=""DynamicRecord Presentation"">DynamicRecord Presentation</a><object height=""355"" style=""margin: 0px"" width=""425""><param name=""movie"" value=""http://static.slideshare.net/swf/ssplayer2.swf?doc=dynamicrecord-presy-1232127067646836-2&amp;stripped_title=dynamicrecord-presentation-presentation-924255""></param><param name=""allowFullScreen"" value=""true""></param><param name=""allowScriptAccess"" value=""always""></param><embed src=""http://static.slideshare.net/swf/ssplayer2.swf?doc=dynamicrecord-presy-1232127067646836-2&amp;stripped_title=dynamicrecord-presentation-presentation-924255"" width=""425"" height=""355"" type=""application/x-shockwave-flash""></embed></object><div style=""font-size: 11px; font-family: tahoma,arial; height: 26px; padding-top: 2px"">View SlideShare <a style=""text-decoration: underline"" href=""http://www.slideshare.net/linoj/dynamicrecord-presentation-presentation-924255?type=powerpoint"" title=""View DynamicRecord Presentation on SlideShare"">presentation</a> or <a style=""text-decoration: underline"" href=""http://www.slideshare.net/upload?type=powerpoint"">Upload</a> your own. (tags: <a style=""text-decoration: underline"" href=""http://slideshare.net/tag/dynamicrecord"">dynamicrecord</a> <a style=""text-decoration: underline"" href=""http://slideshare.net/tag/activerecord"">activerecord</a>)</div></div>",linoj,1571,"39,42","musings,rails",,My_NH_Ruby_Presentation
189,"XML export and import",,3,1231092439,9,,0,,linoj,0,42,rails,,XML_export_and_import
188,"Show me the response","Using Cucumber, the executable plain-text documentation tool, you may want to see the current page in a scenario. I use a generic ""And (show me)"" step.",3,1230394704,9,,2,"<p>I&#39;ll avoid the introductions to <a href=""http://github.com/aslakhellesoy/cucumber/wikis"">Cucumber</a>  and just jump right into this topic.</p><p>Often when developing a feature scenario, the Given/When/Then steps follow links, click buttons, etc. landing on a page, and then assert specific conditions to validate the results. While developing these steps, and especially when things go wrong, you might want to see the current html response to the prior step&#39;s request.</p><p>For example, </p><pre>Given I am logged in as a user</pre><pre>When I follow the &quot;My Profile&quot; link</pre><pre>Then I should see &quot;Hello Jon&quot;</pre><p> So lets say the 3rd step fails and you don&#39;t know why. Sure, you can plow through the traceback and logs but that can be a pita especially on large pages with deeply nested DOM, especially if the problem might be obvious if you could just see the damn page.</p><p>Solution: Add a &quot;(show me)&quot; step, which opens a browser window and shows me the page: </p><pre>Given I am logged in as a user</pre> <pre>When I follow the &quot;My Profile&quot; link</pre><pre>Then (show me) <br /></pre> <pre>Then I should see &quot;Hello Jon&quot;</pre> <p>Now you can see the response page, and realize, perhaps, it actually says &quot;Howdy Jon&quot; (or whatever). Then you can either fix the code, or fix your story.  </p><p>This is not a real step in the true nature of Cucumber&#39;s business DSL, but a utility instruction, implemented as</p><pre>Then /^\(show me\)$/ do</pre><pre>  show_me</pre><pre>end</pre><p>and</p><pre>def show_me</pre><pre>  name = response.request.request_uri.gsub(/[\/\#\?]/,&#39;-&#39;)</pre><pre>  File.open(RAILS_ROOT + &quot;/public/cucumber/#{name}.html&quot;, &quot;w&quot;){ |f| f.puts response.body }</pre><pre>  system &quot;open -a Firefox.app http://localhost:3000/cucumber/#{name}.html&quot; </pre><pre>end</pre><p>show_me dumps the current response page into an html file and opens it in a browser. The name of the html file is derived from the current request_uri, so you can have multiple show_me steps in a scenario (provided the uri&#39;s are unique or your scenarios run slow enough that the page is loaded before the next one is dumped).  </p><p>Note, due to how Cucumber is implemented, the step can be used after any other step, if you just say</p><pre>And (show me)</pre><p> This way you dont have to think about whether it&#39;s placed after a Given, When or Then, as I&#39;ll often cut/paste the line as I work my way down through a scenario. <br /></p><p>This is also useful, for instance, when writing (or refactoring) scenarios for existing features and you want to find the specific DOM selector for a tag. Once opened in the browser, you can examine the DOM (with FireBug or whatever).</p><h3>Cross-browser Checking <br /></h3><p>You can easily change the browser, maybe even add a step, &quot;(show me in $browser)&quot;, to pick Firefox, Safari, etc. and use it as a poor-man&#39;s cross-browser testing. Sure, it&#39;s not Watir or Selenium (which I&#39;ve haven&#39;t played with yet), it&#39;s just a manual visual inspection but as a temporary sanity check, it&#39;s not all bad.</p><h3>HTML Validation <br /></h3><p>While I&#39;m at it, I&#39;ll also mention a couple of other utility steps that help me validate the html on a page. (Reminder, mine is a Rails app).<br /></p><p>The first uses ruby_tidy via the <a href=""http://www.cosinux.org/~dam/projects/rails-tidy/doc/"">rails-tidy plugin</a>. </p><pre>Then /^the page html should be valid$/ do</pre><pre>  # using ruby_tidy</pre><pre>  assert_tidy</pre><pre>end</pre><p>This uses the <a href=""http://redgreenblu.com/svn/projects/assert_valid_markup/"">assert_valid_markup</a>  plugin, which validates your (X)HTML against the <a href=""http://validator.w3.org/"">W3C Validator</a>  web service. Use it sparingly, as it can be slow.<br /></p><pre>Then /^the page html should be w3 valid$/ do</pre><pre>  # using assert_valid_asset plugin</pre><pre>  assert_valid_markup( response.body )</pre><pre>end</pre><p>&nbsp;</p><p>&nbsp;</p>",linoj,2862,"41,42","webdev,rails",cucumber,Show_me_the_response
187,"His cucumber, her cucumber","""Cucumber"" is a plain text f",3,1230083810,9,,0,"<p>&quot;<a href=""http://github.com/aslakhellesoy/cucumber/wikis"">Cucumber</a>  is a tool that can execute feature documentation written in plain text.&quot; Features of an application can be described as a series of steps in ordinary English. The developer then provides code for each step, matching the statements and running them. Thus the documentation serves to drive development as well as as regression tests after the feature is implemented. I started using its precursor over a year ago when first introduced as <a href=""http://blog.davidchelimsky.net/2007/10/21/story-runner-in-plain-english"">rSpec Stories</a>.<br /></p><p>There&#39;s been <a href=""http://www.mail-archive.com/rspec-users@rubyforge.org/msg06268.html"">discussion</a>  on the pluses and minuses of maintaining state variables between steps. I advocate a limited use of these, especially for things that correspond to states in your application, in particular</p><ul><li>variables maintained in the session </li><li>resources represented in URLs</li></ul><br /><p>&nbsp;</p>",linoj,0,"41,42","webdev,rails",cucumber,His_cucumber%2C_her_cucumber
186,"Oh my, my, my","A technique for handling routes to resources that the current user owns.",3,1229452852,9,,2,"<p>I&#39;ve been struggling with how to manage resources that are owned by the current logged in user. The conventional way is to scope your finds by the current_user to ensure he&#39;s not getting someone elses stuff, e.g.</p><pre>record = current_user.things.find( :first )</pre><p>Or, a while back I introduced a pattern for pushing this into the model when its a has_many association (see <a href=""postings/has_one_of_many"">has_one_of _many</a> ), so you could setup in advance the current user, and then reference the thing in the singular, e.g.</p><pre># in Container model</pre><pre>has_one_of_many :things, :by =&gt; :user_id</pre><pre> </pre><pre># in application controller</pre><pre>Container.current_thing_user_id = current_user.id <br /></pre><p>and then anywhere, you can pull the current user&#39;s thing from the container:<br /></p><pre>record = @container.thing </pre><p>Well, that&#39;s cool, but in the URLs and routes, we&#39;re still required to give a specific thing ID for our RESTful actions, such as GET /things/123 to show, or /things/123/edit to edit.  </p><p>What I really want is to keep it generic, so my url&#39;s can refer to the current_user&#39;s stuff without having to look up its ID when I generate the link.</p><p>The simple solution is to support a magic ID the string &quot;my&quot;. Thus, we can have</p><pre>GET /things/my</pre><pre>GET /things/my/edit</pre><pre>PUT /things/my (for update)</pre><pre>etc </pre><p>To generate the URL&#39;s, you can still use your named resource routes, for example, instead of</p><pre>thing_path( @thing )</pre><pre>edit_thing_path( @thing ) <br /></pre><p>say</p><pre>thing_path( &#39;my&#39; )</pre><pre>edit_thing_path( &#39;my&#39; ) <br /></pre><p>and it will generate the expected paths. <br /></p><p>Then your controller handles the &#39;my&#39; param, e.g.</p><pre>if params[:id]==&#39;my&#39; </pre><pre>  thing = Thing.find_by_user_id( current_user.id )</pre><pre>else <br /></pre><pre>  thing = Thing.find( params[:id] )</pre><pre>end</pre><p>I&#39;ve taken this a step further. I no longer need to make a distinction between #new and #edit when working on &#39;my&#39; record. If we go to edit but the record doesn&#39;t exist, we just create one then.</p><pre>def edit</pre><pre>  if params[:id]==&#39;my&#39; </pre> <pre>    thing = Thing.<strong>find_or_create_by_user_id</strong>( current_user.id )</pre> <pre>  else <br /></pre> <pre>    thing = Thing.find( params[:id] )</pre> <pre>  end</pre><pre>  ...</pre><pre>end <br /></pre> <p>&nbsp;</p><p>Note, as written, this assumes each user has just one thing in the container. But you could adjust as needed (e.g. using find_all_by_user_id etc) <br /></p><p>&nbsp;</p>",linoj,1753,42,rails,,Oh_my%2C_my%2C_my
185,"Eat Gooey Cookies","How I'm using cookies to communicate non-critical user activity back to the server. My application and this example uses Ruby on Rails with jQuery for client-side javascript, and the jQuery cookie plugin. and JSON . ",3,1228634476,9,,2,"<p>Suppose you have a page where the user can click a Help button that reveals extra instructions. You might implement this using a hidden DIV block containing the helpful text, and the help button or icon which when clicked, using javascript, will show/hide the block. OK, simple and common enough.</p><p>Then the user clicks a link, or refreshes the page, or goes away and comes back, or anything else that causes the page to reload, and now the help text is gone, its hidden again. The browser simply forgot (and the server was never notified) what the user had done before. </p><p>Maybe this is what you want. Or maybe it&#39;s not.</p><p>In more complex browser/javascript based GUI, the problem is even more pronounced, like client side table sort, resized boxes, font preferences, etc. </p><p>One solution is to Ajax a message to the server any time the user modifies elements on the page. But for non-critical GUI niceties, that seems excessive in a number of ways especially if the server doesn&#39;t need to respond to those events. Its all client-side activity.<br /></p><p>My solution is to transparently stuff the preferences into a cookie, which the server can take note of upon the next request, and use, if necessary, in subsequent responses.</p><h3>Baking the Cookies</h3><p>Basically it works like this: </p><ul><li>like a good boy, your application generates normal html, and you have javascripts unobtrusively sweeten the page after its been loaded. <br /></li><li>The unobtrusive javascript adds client-side actions that may not notify the server. <br /></li><li>Upon each user event, the browser (client side js) remembers changes to the gui state in a cookie. <br /></li><li>When the user submits a new request to your application, the cookie is automatically passed along. <br /></li><li>The app, before processing the request, reads the cookie, records the current user preferences in the database, and deletes the cookie.  </li><li>The app generates the next page, possibly using the current gui preferences as needed.</li></ul><h3>Bite My Cookie</h3><p>Cookies are stored as files in the client browser&#39;s disk cache. Typically, the cookie function assumes one value per cookie. At first glance, it might be tempting to just use one cookie per user preference (e.g. one name:value pair per user preference). But while cookies are limited to 4k bytes, its also not a good idea to sprinkle many cookies for your site. </p><p>I maintain user preferences in a javascript object, user_gui, updated on any event that I want to record, and written to a &quot;gui&quot; cookie. The object is stringified using JSON, its a little verbose but convenient. </p><p>fyi, My application and this example uses Ruby on Rails with jQuery for client-side javascript, and the jQuery <a href=""http://plugins.jquery.com/project/Cookie"">cookie plugin</a>. and <a href=""http://www.JSON.org/json2.js"">JSON</a> . <br /></p><h3>Example</h3><p>Lets start with an unobtrusive javascript example, but the current gui state is not recorded.</p><p>In the View template:</p><pre>      &lt;a href=&quot;/some/help&quot; id=&quot;icon_23&quot;&gt;&lt;img src=&quot;images/myicon.gif&quot;&gt;&lt;/a&gt;</pre> <pre>      &lt;div id=&quot;div_23&quot; style=&quot;display:none&quot; &gt;your stuff&lt;/div&gt;</pre> <pre>      </pre><pre>      &lt;script&gt;</pre><pre>        $(function(){ </pre><pre>          $(&quot;#icon_23&quot;).click( function(){ <br />            $(&quot;#div_23).toggle();<br />            return false; <br />          }) </pre><pre>        })</pre><pre>      &lt;/script&gt;</pre><p>First, we think of the poor guy who has no javascript and make sure the page still works for him. The icon is a hyper link to a separate help page. The DIV is hidden.</p><p>Then we bind a function to the onclick event on the icon, which toggles the visibility of the div. OK, thats jQuery101.</p><h3>Example with Gooey Cookies</h3><p>Now we take that example and record the current gui state so when the page is reloaded, the div will be visible or not as the last time the user visited.</p><pre>      &lt;a href=&quot;/some/help&quot; id=&quot;icon_23&quot;&gt;&lt;img src=&quot;images/myicon.gif&quot;&gt;&lt;/a&gt;</pre><pre>      &lt;div id=&quot;div_23&quot; style=&quot;display:none&quot; &gt;your stuff&lt;/div&gt;</pre><pre><br />      &lt;script&gt;</pre><pre>        $(function(){ </pre><pre>          <strong>&lt;% if current_user.gui[&quot;div_23&quot;] %&gt;</strong></pre><pre><strong>            $(&quot;#div_23&quot;).show();</strong></pre><pre><strong>          &lt;% end %&gt;</strong></pre><pre>          $(&quot;#icon_23&quot;).click( function(){ <br />            $(&quot;#div_23&quot;)<strong>.toggle(&#39;normal&#39;, guicookie )</strong>;<br />            return false;<br />          }) </pre><pre>        })</pre><pre>      &lt;/script&gt;</pre><p>Not very different. The HTML doesn&#39;t change at all. As for the javascript, first we initialize the current view state of the div based on current_user settings. (Note the use of server side ERB which conditionally includes the .show() statement only if its required. Or the conditional show() could be done in any number of other ways.) </p><p>Then, during the toggle, we add a callback to guicookie function, which records the state in the cookie. (The toggle function require we specify a speed argument, eg &quot;normal&quot;, when also providing the guicookie callback function). <br /></p><h3>Ingredients</h3><p>I&#39;ve taken a convention-over-configuration approach to simplify things. Typically I just want to remember if something&#39;s visible or not, or tag it with some value. </p><p>We&#39;ll assume this &quot;something&quot; is a single DOM element, with a unique ID. That id will be used as the property name in the javascript object, and ultimately stored in the user record in the database.</p>  <p>The following methods are used to store the state in the cookie</p><pre>var user_gui = {}<br />function guicookie( value ) {<br />  var key = $(this).attr(&#39;id&#39;);<br />  value = value || $(this).is(&#39;:visible&#39;);<br />  user_gui[key] = value;<br />  guicookie_save();<br />}<br /></pre><pre>function guicookie_save() {<br />  var value = JSON.stringify(user_gui); <br />  if (value == &#39;{}&#39;) value = null; // delete it if empty<br />  $.cookie(&#39;gui&#39;, value, {path : &#39;/&#39;} );<br />}</pre><p>The guicookie function can be used in 2 ways. If no value is supplied, we check whether the element is visible, and store true or false in the cookie. When a value is provided, we assign that value to the cookie. The guicookie_save helper stringifies the object and updates the cookie. <br /></p><p>On the server side, we need to consume the cookie. In Rails you can define a before_filter in the application controller (e.g. application.rb file) so the cookie gets consumed on any action.</p><pre>     before_filter :eat_gui_cookie<br /><br /></pre><pre>     def eat_gui_cookie</pre><pre>        if logged_in? &amp;&amp; cookies[:gui]</pre><pre>         current_user.gui.merge!( cookies[:gui].from_json ) </pre><pre>         cookies.delete :gui</pre><pre>       end</pre><pre>    end</pre><p> This uses a little addition to the String class to decode the cookie string value, </p><pre>  String<br />    def from_json<br />      ActiveSupport::JSON.decode(self)<br />    end<br />  end</pre><h3>Classy Cookies<br /></h3><p>There&#39;s more?! On the client (javascript) side I&#39;ve added a guicookie_class function which lets you remember when an element&#39;s been tagged with a class name (eg using addClass). It create a new property named CLASS_DOM_ID which which will be true if CLASS is present. </p><p>For example, lets say an event has left your DOM with an element like &lt;div id=&quot;item_123&quot; class=&quot;flagged&quot;&gt; then guicookie_class will set user_gui[&quot;flagged_item_123&quot;] = true and pass that back to the server in the cookie.</p><pre>jQuery.fn.guicookie_class = function(clas){<br />  var key = clas+&#39;_&#39;+$(this).attr(&#39;id&#39;);<br />  user_gui[key] = $(this).hasClass(clas);<br />  guicookie_save();<br />}</pre><p> In this case its called as a jQuery function, eg</p><pre>$(&quot;#item_123&quot;).toggleClass(&#39;flagged&#39;).guicookie_class(&#39;flagged&#39;); </pre><p>&nbsp;</p><p>Enjoy! <br /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,5992,"41,42","webdev,rails","javascript,cookies,gui",Eat_Gooey_Cookies
184,"A cute little underscore thingy","I found myself frequently doing something like ""table_#{id}"", so i added a little string method that lets me say 'table'._(id)  ",3,1228329963,9,,2,"<p>Rails provides a dom_id helper which lets you generate a DOM ID string for an object, for example, if @foo is class Foo with id=123, then @foo.dom_id #=&gt; &#39;foo_123&#39; .  But I don&#39;t always want to key off an object, and sometimes I need several ID&#39;s for different elements all associated with one object. I started getting annoyed writing things like,<br /></p><p>&nbsp;</p><pre>&lt;div id=&lt;%= &quot;#{name}_#{@foo.id}&quot; %&gt; &gt;</pre> <p>&nbsp;</p><p>So i wrote a little convenience method for strings:</p><p>&nbsp;</p><pre>class String  <br />  def _(id)<br />    self+&quot;_#{id}&quot;<br />  end<br />end      <br /></pre><p>&nbsp;</p><p> And now can say,<br /></p><p>&nbsp;</p><pre>&lt;div id=&lt;%= name._ @foo.id %&gt; &gt;</pre><p>&nbsp;</p><p>Maybe its the same difference, but I find it convenient. <br /></p><p>&nbsp;</p><p>&nbsp;</p>",linoj,1631,42,rails,ruby,A_cute_little_underscore_thingy
183,"Won't Paginate","I had a problem with will_paginate when giving it a page number and per_page settings that are out of range, resulting in an empty table on the page. And here's how I solved it.",3,1228287232,9,,2,"<p>Lets say you have a total of 15 items in the database, and you&#39;re displaying them in a table, paginated. Lets say you&#39;re showing 5 items per page, and you&#39;re on page 3.</p><p>Then you change the items per page to 10 via a gui control in the view. The &#39;current&#39; page argument is still 3. Voila, nothing! The table is empty, because it thinks you&#39;re displaying page 3 of a 10 items per page, and there&#39;s only 15 items in the database. </p><p>The Rails will_paginate plugin will retrieve the requested page, and return an empty collection. The user will see an empty table, and may not understand why. All he did was change the Items per Page. OK, sure he <em>was</em> in page 3, but who cares? he just wants to see a page of data with 10 rows instead of 5, not an empty table.</p><p>What&#39;s worse, the plug-in&#39;s page_entries_info helper end up saying something like &quot;Items 21-20 out of 20&quot; while there&#39;s only 15 total items in the database!</p><h3>Solutions <br /></h3><p>The #index controller action to refresh the table gets a request with the page number (3) and per_page (10) as arguments. It finds the collection of items (empty). At that point it could check if the collection is empty, and resubmit it with a different page number. But that&#39;s putting too much model logic into the controller, I think.</p><p>Can we push it into the model? I looked at the will_paginate finder code to see if there was a way to patch it so it checks whether the starting offset is greater than the collection size, but that would result in extra database queries. Beside, hacking the code to handle it wasn&#39;t looking pretty.</p><p>Then I realized, to fix the problem, the controller action just needs to know how many total items there are (without asking the database, if possible), to check if the current page number is valid and adjust it if needed. <br /></p><p>I also realized, from a usability point of view, we can assume the first time the table is rendered, it has correct values for page and per_page that result in a legitimate collection. Its only when the per_page is changed that the offset is too big. I also realized we already know the total size the first time the table is rendered. WillPaginate class provides it as collection.total_entries</p><p>So the solution is to pass the total_entries back to the controller when the per_page value is changed. Then the controller can reset the page number if its out of range. I pushed this into a helper method in application.rb </p><h3>Controller:</h3><pre>     @page, @per_page = pager_settings( params )<br />     @records = Stuff.paginate( :page =&gt; @page, :per_page =&gt; @per_page )</pre><p>&nbsp;</p><h3>Application Helper (application.rb):</h3><pre>  def pager_settings( params )</pre><pre>    page = params[:page] ? params[:page].to_i : 1 #default page 1</pre><pre>    per_page = params[:per_page] ? params[:per_page].to_i : 25 #default 25</pre><pre>    if total = params[:total]</pre><pre>      max_page = ((total.to_i - 1) / per_page) + 1</pre><pre>      page = max_page if page &gt; max_page </pre><pre>    end</pre><pre>    [page, per_page]</pre><pre>  end</pre><p>&nbsp;</p><h3>View:</h3><pre>          &lt;%# at footer of the table, pass along the total %&gt;<br />          &lt;% form_tag url_for, :method =&gt; :get do %&gt;</pre><pre>            &lt;%= select_tag &#39;per_page&#39;, </pre><pre>                options_for_select( [5, 10, 25, 100], @per_page ),</pre><pre>                :onchange =&gt; &#39;this.form.submit()&#39; </pre><pre>            %&gt;</pre><pre>            &lt;%= hidden_field_tag &#39;total&#39;, records.total_entries %&gt;</pre><pre>          &lt;% end %&gt;</pre><p>&nbsp;</p><p><br /> <br /></p>",linoj,1325,42,rails,will_paginate,Won%27t_Paginate
181,"has one of many","Lets you make has_many associations look like a has_one (Note, i've renamed it, was has_one_current (Nov 14))",3,1226386878,9,,2,"<p>i just wrote a cool module, should make it into a plugin, if i had time.</p><p>has_one_of_many  lets you make a has_many association look like a has_one at runtime. In my app, X has_many Y but each user can only make one Y per X. I wanted to push the association find down into the model but normally models dont know about current_user. There&#39;s other uses as well, could be quite handy any time an action is attending to a single, currently selected item in a collection.<br /></p><p>So, for example, if Article has many reviews, but each user can write only one review, now you can say @article.review and get the current user&#39;s one. </p><p>In the Article model you&#39;d declare</p><p>    has_one_of_many :reviews, :by =&gt; :user_id </p><p>Then in your controller, you could say Article.current_review_user_id = current _user.id</p><p>Internally it does a self.reviews.find_by_user_id  </p><p>Possible extensions:</p><ul><li>has_some_of_many to return a filtered collection. The problem is i dont like the idea of replacing, for example, #reviews with the filtered one, but could use alias_method_chain. Anyway, named finders can do this already.<br /></li></ul><ul><li>:condition =&gt; or other find options to better control the find, such as the the most recent</li></ul><p>Note, my app also uses a home-grown version of nested_params http://rails.lighthouseapp.com/projects/8994/tickets/1202-add-attributes-writer-method-for-an-association , so I generate a review_attributes=() method too. </p><p>Some have commented this violates MVC, but I strongly disagree. First, filtering on user is just an example. The model never knows about current_user, it only knows there&#39;s an attribute value used to constrain the collection to a single item. <br /></p><p>Here&#39;s the code:</p><pre>  # ------------------------------------</pre><pre>  # has_one_of_many</pre><pre>  # ------------------------------------</pre><pre>  # eg  has_one_of_many :reviews, :by =&gt; :user_id</pre><pre>  # implements class methods:</pre><pre>  #   current_review_user_id=( value ) # sets the value used to query the has_many</pre><pre>  #   current_review_user_id # get the value used</pre><pre>  # instance methods:</pre><pre>  #   review # =&gt; the current child, as if it were has_one<br />  #   review_attributes=( attribs ) # sets attributes in the current, or new if none</pre><pre><br />    @@has_current = {} # :assoc =&gt; :attrib</pre><pre>    @@current_value = {} # :assoc =&gt; value</pre><pre><br />    # names of associations that has current</pre><pre>    def self.current_ones</pre><pre>      @@has_current.keys</pre><pre>    end </pre><pre><br /></pre><pre>    #    </pre><pre>    def self.has_one_of_many(association_id, options={}) # public</pre><pre>      names = association_id.to_s<br />      name = name.singularize</pre><pre>      by = options[:by]</pre><pre>      @@has_current[name] = by</pre><pre>      self.class_eval %{</pre><pre>        def self.current_#{name}_#{by}=(value)</pre><pre>          @@current_value[&#39;#{name}&#39;] = value</pre><pre>        end</pre><pre>        </pre><pre>        def self.current_#{name}_#{by}</pre><pre>          @@current_value[&#39;#{name}&#39;]</pre><pre>        end</pre><pre><br />        # instance methods</pre><pre>        def #{name}</pre><pre>          #{namepl}.find_by_#{by}( @@current_value[&#39;#{name}&#39;] )</pre><pre>        end</pre><pre>        </pre><pre>        def #{name}_attributes=(new_attributes)</pre><pre>          record = self.#{names}.find_by_#{by}( @@current_value[&#39;#{name}&#39;] )</pre><pre>          if record</pre><pre>            record.update_attributes(new_attributes)</pre><pre>          else</pre><pre>            self.#{names}.new(new_attributes)</pre><pre>          end</pre><pre>        end</pre><pre>      }, __FILE__, __LINE__  </pre><pre>    end</pre><pre>    </pre><pre>    # kludgey but handles :include =&gt; :review</pre><pre>    # since the association now looks like a has_one, </pre><pre>    # but since its not really an association, AR barfs</pre><pre>    # so just delete it from the :include</pre><pre>    class &lt;&lt; self</pre><pre>      def find_with_current_ones_removed(*args, &amp;block)</pre><pre>        current_ones.each do |name|</pre><pre>          args.last[:include].delete(name.to_sym)</pre><pre>        end if args.last[:include]</pre><pre>        find_without_current_ones_removed( *args, &amp;block )</pre><pre>      end</pre><pre>      alias_method_chain :find, :current_ones_removed</pre><pre>    end</pre><p>&nbsp;</p>",linoj,1353,42,rails,"active record",has_one_of_many
180,"Render collection with layout","The Rails ""partial layouts"" feature doesn't work how I expected with collections. Here's a helper.",3,1221233468,9,,2,"<p>In Rails you can include fragments of a view template in other views, using &quot;partial&quot; views. Rails 2.0 introduced the feature where you can specify a &quot;layout&quot; template that wraps itself around the partial. This can be extremely useful when various partials render different content but you want them the share some common formatting. </p><p>For example, in a page with a sidebar with multiple boxes with different content, each box might be rendered with something like</p><pre>&lt;%= render :partial =&gt; &quot;show&quot;, :layout =&gt; &quot;layouts/box&quot; %&gt;</pre><p>The views/layouts/_box.html.erb file might then include (a simplistic example):<br /></p><pre>&lt;div class=&quot;box&quot;&gt;</pre><pre>    &lt;%= yield %&gt;</pre><pre>&lt;/div&gt; </pre><p>OK, cool, I use this sometimes.</p><p>Partials can also be called with collections (list of objects). It will automatically iterate over each one, using the partial once per object. So, for example, to render a list of objects, you&#39;d use</p><pre>&lt;%= render :partial =&gt; &quot;item&quot;, :collection =&gt; @items %&gt;</pre><p>When you specify a layout here, I was hoping it would use the layout each time the partial is rendered for each item. But nooooooooo! The layout is used once, yielding once to the entire list. <br /></p><p>In other words, Rail&#39;s partial layouts does one layout for the whole collection.</p><p>Here&#39;s a simple but effective helper that does what I wanted. <br /></p><pre>def render_collection_with_layout( options )<br />    collection = options.delete(:collection)<br />    collection.collect {|object| render options.merge(:object =&gt; object) }.join<br />end</pre><p>which is used like this:</p><pre>&lt;%= render_collection_with_layout( :partial =&gt; &quot;item&quot;, :collection =&gt; @items, :layout =&gt; &quot;layouts/wrapper&quot; %&gt;<br /></pre><p>This helper uses the layout for each object in the collection. </p><p>On a side note, the layout has access to the current item in the iteration as the local variable &quot;object&quot;.</p><p>One caveat is this helper makes the two partial layout methods mutually exclusive. That is, its using the :layout argument for the inner layout and there&#39;s no way to specify an outer one. But that&#39;s an extreme case that I dont need. <br /></p><br /><p>&nbsp;</p>",linoj,4076,42,rails,,Render_collection_with_layout
179,"Get a Life 2.0","Some much hype about web 2.0, it got me thinking...",3,1220977856,9,,0,"<p>I read this article,http://advice.cio.com/c_g_lynch/getting_2_0ed_out_when_will_web_2_0_and_other_2_0_terms_fade_away?source=nlt_cioinsider</p><p>&nbsp;</p><p>and it gave me the idea for a new motto:</p><p>&nbsp;</p><p>Get a Life 2.0 </p><p>(be social, be mobile, live in a cloud) </p><p>&nbsp;</p><p>And then an image popped into my mind: (thx lars_g)</p><p><img src=""var/uploads/Image/get%20a%20life.jpg"" alt="" "" title=""get a life 2.0"" width=""302"" height=""319"" /> <br /></p>",linoj,0,39,musings,,Get_a_Life_2.0
178,"Journey to the Center of the Earth and Back in One Day","My son, Steven, wrote this essay last night, his first writing assignment as he starts high school 9th grade. The assignment was to ""recount a story about your parents before you were born"".",3,1220459555,9,,2,"<p>Flying from the opposite side of the country my parents had an unexpected adventure ahead of them. They were planning for a difficult hike of the Grand Canyon, but didn’t expect the difficulty of doing it in one day without careful planning. A twenty mile hike may seem easy when you’re talking about it, but when you experience it, it’s another story.</p><p>Leaving the hotel around nine o’clock, they asked for directions of how to get to the canyon trail head. What they expected to be a quick walk, turned out to be a two-hour trek along the rim of the canyon. Finally at the beginning of the trail, it was already eleven o’clock. They wasted two hours just getting to the trail!</p><p>Starting down the trail at eleven o’clock, they planned to complete the trip in one day. Usually most people camp out at the bottom of the canyon, but my parents wanted to accomplish this hike in just a day. They continued down the steep trail for about four hours before reaching the bottom and the Colorado River. Exhausted and only half way through the hike, they rested. With little time to spare, they ate lunch quickly and started the harder part of the hike back up hoping to reach the top before nightfall. It was 3:30pm. After a few hours the day began to darken to dusk. A few more hours and they were hiking it was pitch black. It didn’t occur to them to bring a flashlight. At this point, they weren’t sure whether they should just sit down on the narrow trail and wait for morning or finish the hike. It was impossible to know how many more hours of hiking they had ahead of them. </p><p>Continuing up the trail they stumbled upon a young mountain goat. The trail was not wide enough for my parents, who were single file, and the goat to pass each other. Each step my parents took, the tiny goat stepped back. They decided to stand still, hug the wall and finally, the frightened goat walked by.</p><p>Ready to give up for the night, they were delighted to see the clear night start to brighten with the rays of a full moon. This gave them light and enough hope to finish the hike. My parents continued up the trail with only the moon as light. After about two more hours they reached the top. </p><p>At the top, and after 10:00pm, my parents were devastated to discover that all the busses and taxis had stopped running for the night. They had another two-mile walk back to the hotel. With no water or food, they made their way to a convenience store, their only source of food at that hour. Finally making it home they laid down and slept. Unable to move the next day, my parents learned an important lesson: always plan and be prepared when on a big hike. Better yet, don’t try hiking the Grand Canyon in one day!</p><p>&nbsp;</p><p>-- by Steven J. Linowes, age 14</p><p>&nbsp;</p>",linoj,3707,39,musings,,Journey_to_the_Center_of_the_Earth_and_Back_in_One_Day
177,"Productive or wasted week?","A testament to testing and behavior driven development. Implementing file uploads.",3,1220104293,9,,2,"<p>At the beginning of the week I was exercising the web app I&#39;m developing and came across what appears to be a bug with file uploads. </p><p>After clicking around the app a bit in my browser, I verified the problem. So I wrote an rspec story (integration test) to create a repeatable failing case. Then using rdebug, traced through the code and discovered it was not just a bug but a structural design flaw.</p><p>How could I have missed that? The feature appeared to work one case at a time, but multiple file uploads were clobbering each other. I knew this was one of the few features that didn&#39;t have much testing coverage; it was just one of those things that you implement, it seems to work, and the effort to go in and write tests after the fact seemed more than it&#39;s worth. Part of the resistance was I wasn&#39;t sure <em>how</em> to test file uploads. </p><p>As if you really cared, the feature is not simply a file upload field in a form. My app allows project owners to create custom forms, where one or more fields can be a file attachment. Multiple users can submit multiple forms containing multiple attachments. The user submissions have multiple views, as input forms, as a table of records, and to show a single record at a time, where each file upload needs to be rendered, for example, as a thumbnail image and/or a download link. Non-trivial anyway. </p><p>Roughly the week went like this</p><blockquote><p>Monday: Discovered the problem, but didn&#39;t really get to work on it.</p><p>Tuesday: Began attacking the problem in earnest, traced the code with rdebug, determined the issue was a design flaw, not just a &#39;bug&#39;. Wrote some story scenarios to illustrate it. And began fleshing out the corresponding model specs, taking a top-down + bottom-up approach.</p><p>Wednesday: Completed the model specs and coding, so the tests pass. The fixes involved some refactoring (general clean up the code) caused some other tests to fail; fixed that too. <br /></p><p>Thursday:  Fleshed out the corresponding controller specs, and discovered a few additional problems with the models that didn&#39;t show up with the unit tests. Entire test suite passes (2159 examples).</p><p>Friday: Finally returned to the story scenarios I&#39;d written in the beginning of the week. With some fiddling mostly in the story steps, but also several views and helpers, got the stories to pass. Committed the code changes and took the evening off.<br /></p></blockquote><p> It took some research to determine how to implement testing file upload fields, they&#39;re not a normal input field. I adopted Rails&#39; TestUploadedFile to simulate the upload, and File.exists? to verify the upload occurred (and FileUtils.rm_rf to clean out the uploads directory before each test example runs). In stories, I used the webrat attaches_file method. </p><p>So, my plans for the week on Monday were befuddled by discovering the problem, which was fixed (I sincerely hope) once and for all by Friday. Is that progress? Or did I fall behind a week?</p><p>This debugging was getting me down all week, felt like I was wasting time, but now I can move forward again.</p><p>Actually it probably would have gone faster if I hadn&#39;t kept distracting myself doing emails, chatting on irc (including offering some support on #rubyonrails), and doing stuff around the house. And the design problem required some clear headed concentration, which has become a rare commodity for me lately. And this was the first week of school for my kids so things got hectic at certain times of the day. Ok, ok, excuses, excuses. <br /></p><p>On the other hand, the bugs were real and would have to be fixed eventually. Perhaps they occurred in the first place because the feature was not really implemented using test-first, behavior driven process. I admit, I got lazy (or rather, very distracted) a few months ago when I first implemented that code, and I paid for that now. </p><p>I need to write a few more story scenarios to complete the testing but otherwise I&#39;m ready to move forward next week with what I was planning to work on this week... <br /></p><p>&nbsp;</p>",linoj,1732,"39,42","musings,rails",,Productive_or_wasted_week%3F
176,"Refactoring your messes",,3,1220013429,9,,2,"<p><br />[08:15am] epitron: &quot;Cleaning the apartment is like refactoring. Much better to do constantly in small bits than to let things pile up and start to smell.&quot;</p><p>08:15am] epitron: hahah</p><p>[08:22am] linoj: yeah, ever started to do a massive cleaning and then have to leave in the middle, everything a bigger mess than when you started</p><p>[08:22am] epitron: haha</p><p>[08:22am] epitron: exactly</p><p>[08:22am] epitron: cleaning up a mess in a house of size N requires 2*N space</p><p>[08:22am] epitron: or rather, cleaning up a mess of size N</p><p>[08:23am] linoj: N*N</p><p>[08:23am] epitron: it would be a lot easier if you could just instantiate a new house and move everything over, then garbage collect the old house</p><p>[08:24am] linoj: yep, done that</p><p>[08:24am] epitron: \o/</p><p>[08:35am] linoj: one thing about the latter idea is you find things you thought were real important in the old house turn out to be not so important after you move, and never get unpacked</p><p>[08:39am] linoj: where did that quote come from? <br /></p><p>[08:39am] epitron: http://blog.patnakajima.com<br /><br /></p>",linoj,1915,39,musings,,Refactoring_your_messes
175,"Find in textmate","Create separate textmate projects that contain only the subdirs I want to search in. ",3,1219671832,9,,2,"<p>This is kind of a simplistic tip, but it&#39;s working great for me. I&#39;ve been looking for a convenient way to do a Find In Project in Textmate for any files containing some text, but only for a subset of folders in my current project. </p><p>For example, when I create a textmate project for a Rails site, I drop the whole rails root into the side drawer, so I have ready access to everything, not just app/ but also config/, db/, spec/, etc. as well as any plugins (vendor/plugins/). I also like to freeze my rails core in vendor/rails/ (for various reasons mostly related to deployment) so that&#39;s also there under the textmate project.</p><p>All good, except when I need to search for files containing some text. I might only want to look in app/ or spec/, certainly not wait and clutter my search with results under all of vendor/. </p><p>I could just go into a shell and do a grep.   </p><p>What I&#39;ve come up with is to create separate textmate projects that contain only the subdirs I want to search in. So basically I have one project for the full rails root, one with just app/ and lib/, and one with spec/ and stories/.</p><p>A nice feature of textmate is when a file is modified in one project window, and you have the same file opened in another project window, they both will contain the same current content, even as you edit. So if you edit in one &#39;project&#39;, but save in another, it wont stomp all over your changes. Rather &#39;both&#39; files get saved (since they&#39;re the same actually). That saves me a lot of heartache.</p><p>&nbsp;</p>",linoj,2368,"41,42","webdev,rails",,Find_in_textmate
174,"alias method chain in a module","There's a number of postings that explain how to use alias_method_chain, but it wasn't clear how to use it in a module.",3,1218115958,9,,2,"<p>alias_method_chain is a neat little method that lets you cleanly override a core method in Rails. But I ran into syntax problems using it in a module. Here&#39;s the solution. </p><p>Given:</p><p>file: models/foo.rb<br /></p><pre>class Foo &lt; ActiveRecord::Base</pre><pre>  include FooBar</pre><pre>end</pre><p><br />file: lib/foo_bar.rb<br /></p><pre>module FooBar</pre><pre>  module ClassMethods</pre><pre>    def find_with_bar( *args ) </pre><pre>      find_without_bar( *args )</pre><pre>      #...or whatever </pre><pre>    end</pre><pre>  end</pre><pre>  </pre><pre>  def self.included(base)</pre><pre>    base.class_eval do</pre><pre>      extend ClassMethods</pre><pre>      class &lt;&lt; self</pre><pre>        alias_method_chain :find, :bar</pre><pre>      end</pre><pre>    end</pre><pre>  end</pre><pre>  </pre><pre>end</pre><p>The alias_method_chain will alias the original find to find_without_bar, and will alias find_with_bar to find.</p><p>The self.included method is called when the module is included in the Foo class. It extends the class methods with those defined in module ClassMethods. And then it does the alias_method_chain, on the Foo class (class &lt;&lt; self).</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,13282,42,rails,,alias_method_chain_in_a_module
173,"WEB SERVICES",,3,1217364277,9,,0,<p>&nbsp;</p><p>http://railstips.org/2008/7/29/it-s-an-httparty-and-everyone-is-invited</p><p>&nbsp;</p>,linoj,0,42,rails,,WEB_SERVICES
172,"technorati spider hole","<a href=""http://technorati.com/claim/jgxtg7sc8b"" rel=""me"">Technorati Profile</a>",3,1216387388,9,,1,"<a rel=""me"" href=""http://technorati.com/claim/jgxtg7sc8b"">Technorati Profile</a>",linoj,0,,,,technorati_spider_hole
171,"book of life",,3,1216242403,9,,0,"<p>Hi family,<br /></p><p><br />I woke up yesterday thinking it was Yom Kippur. In the afternoon I had my one-month follow up doctor visit and blood test, revealing my PSA is virtually zero. Thus, the surgery was successful with no traces of prostate cancer detectable at this time.<br /><br />Thank you all for your wishes and prayers.<br /><br />Much love,<br /><br />Jon<br /></p><p>&nbsp;</p><hr /><p>&nbsp;</p><p><em>Jack Nicholson in &quot;The Bucket List&quot;</em></p><p>Three things to remember about getting old: Never pass up the opportunity to use a bathroom; Appreciate every erection; and Never trust a fart.</p><p>&nbsp;</p><hr /><br /><p><em>I came up with this macabre joke a couple weeks ago:</em></p><p>Q. What&#39;s the difference between a pessimist with cancer in his lymph nodes and an optimist with cancer in his lymph nodes? </p><p>A. One&#39;s half-dead; the other is half-alive</p><p>&nbsp;</p><hr /><p>&nbsp;</p><p><em>This has been so surreal, I was thinking, someone just a little bit more paranoid might imagine it all just a rueful conspiracy...</em><br /><br />What if the hospital has made up the PSA and pathology test results, I&#39;d never know, convincing me to go into surgery, bilking me and the insurance companies. A couple months later, everything is wrapped up nicely, got their success story and statistics. Who&#39;d be the wiser?<br /><br />Maybe I&#39;ll send the screenplay to Hollywood... &quot;Wag the Dog: Medical&quot;<br />:) <br /></p><p>&nbsp;</p><hr /><em><br />How about this for a new slogan for Cialis, or Viagra, etc:</em><p>Size doesn&#39;t matter; but stiffness does.</p><p>&nbsp;</p><hr /><br /><br /><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,0,39,musings,,book_of_life
170,"Surgery and prognosis","Ten days after my prostatecomy. (Follow up from <a href=""http://www.vaporbase.com/postings/prostate_cancer%21"">previous article</a>)",3,1213891030,9,,2,"<h3>Surgery </h3><p>Lying on the gurney, wheeled down a corridor, pausing for the elevator, in we go, doors close... Asleep... Awake, parked in a recovery room, hearing various electronic beeps, clicks, nurses voices. Look around, privacy curtains partially drawn. Intravenous tubes attached. I&#39;m not groggy, quite alert actually. I presume the surgery has been done,  more than six hours have passed, unnoticed.</p><p>Less than an hour later I&#39;m transported to my room. My wife Lisa is there to greet me. We exchange smiles.</p><p>She reports to me a quick summary: the &#39;radical prostatectomy&#39; was successful. My prostate, some surrounding tissue, and several lymph nodes on the left side were removed. I have not bled to death nor had other major complications. They unexpectedly found and repaired an old navel hernia. Visually, the lymph nodes appear clear of cancer. </p><p>This Monday (June 9th) started simple enough, albeit not real comfortable. Having followed the required instructions for &#39;bowel prep&#39; via laxatives the day before and no solids for 12 hours, not to mention general anxiety, I&#39;m pretty achy and cranky in the morning. Lisa and I left the house around 8 am, an hour-fifteen minute drive to the Dartmouth Hitchcock Medical Center hospital, checked in pre-admissions, and by 11:30am I was in my medical gown in a private pre-op room. My vital signs were measured. We met with the nurses, anesthesiologists, and doctors who would be with me during the operation. A little after 1pm I had my IV, and was ready to roll...</p><p>The procedure is performed using a laproscopic robot. Dr. Heaney and his team have been using the device since January (2008), and seem pretty proud of their state-of-the-art facilities. I haven&#39;t looked into it much, but my impression is this: with regular laproscopic procedures, they make several small incisions (&#39;ports&#39;) and insert prolonged instruments into you, including a camera, knife, and forecepts (or whatever), which the surgeon manipulates directly. With a robotic device, the surgeon&#39;s motions are first interpreted by the &#39;robot&#39; which in turn controls the instruments. This affords greater three-dimensional control, reduces any &#39;shakiness&#39; or other human hand errors, and delivers better results overall. However it does tend to require more time in the operating room. And certainly laproscopic methods, in general, are superior to out-dated open surgery which have significantly higher blood loss, other risks, and recovery time.</p><p>The tumor was known to be on the left side of the prostate. As planned, the surgeon removed the prostate, along with an extra swath of surrounding fatty tissue on the left side. But on the right side, he cut close along the edge of the prostate and spared the nerve bundle on that side. He also removed several lymph nodes on the left side (near the pelvis) for evaluation.</p><h3>Recovery </h3> <p>I stayed overnight at the hospital. Everyone was extremely attentive and competent. I never laid wanting. Remarkably I really had no pain, and just needed Ibuprofen to relieve discomfort. Well, except for one <em>extremely sharp</em> bladder spasm (perfectly normal, I was later told) which subsided after a few minutes. <br /></p><p>Released the next day, Tuesday, we headed home early afternoon. </p><p>For the next few days, I  basically just hung out, read a book, watched TV, and was fairly mobile enough to go for some short walks. I was given some prescription pain relievers which I used to help me sleep the first couple nights (and got a good buzz on).  </p><p>I adapted to the urinary &#39;indwelling catheter&#39; pretty readily.  I also came home with a drainage tube and bag on the side of my belly. Otherwise my surgical &#39;ports&#39; were stitched and ready to heal. I kind of felt like a Borg with all these tubes and things sticking out of me!  </p><p>Perhaps my scariest encounter, and a true test of my courage, occurred the next morning when I braved to take a shower! Hobbling into the stall, I set the water to lukewarm, and slowly immersed myself. I didn&#39;t recognize myself, especially my abdomen largely bloated and swollen. Stitches, tapes, tubes, weird. <br /></p><p>Everyone was happy to see me home. As John Lennon said, &quot;Life goes on within you, and without you.&quot; My kids were just starting summer vacation. Steven, graduating 8th grade, had a plethora of &quot;mandatory&quot; parties, including 20 or so kids <em>at our house</em> on Thursday. Hey, at least I had an excuse to stay out of their way and not have to help out. Lisa landed a string of media interviews and public presentations for her work as well during these days. No problem, everyone here was well behaved and self-sufficient.</p><p>My immediate and extended family, as expected, were warmly tracking my progress, yet respectful of my privacy. Lisa handled most of the calls. All were glad to hear I was progressing well.</p><p>The only complication had to do with my drainage, it was not letting up as expected. In fact, normally they remove the tube before you leave the hospital the day after surgery. On several return visits, they advanced the tube a couple inches at a time (<em>ouchers!</em>). A minor infection and fever were relieved with antibiotics. </p><p>The following Tuesday we met again with Dr. Heaney to finally remove my tubes, and more importantly, get the results of the laboratory biopsy of my extracted prostate and lymph nodes.</p><h3>Pathology report </h3><p>The pathology report confirmed there was no cancer in the the lymph nodes (<em>very good news</em>). Also none in the seminal vesicles (<em>also good news</em>). </p><p>Prior to surgery, the biopsy staged my cancer at T2a with Gleason 8 (4+4). The post-surgery biopsy staged it at T3a with Gleason 7 (4+3). The post-surgery biopsy is more accurate because it&#39;s determined from whole slices of the actual tissues rather than selective tiny core samples (as they took from me in April). </p><p>T2 means the cancer is completely contained within the prostate; T3 means it has breached the boundary and extends into the surrounding fatty tissue. The Gleason score is an indicator of the aggressiveness of the malignancy. So, the &quot;real&quot; findings (post-op) show my cancer has actually protruded outside the prostate (extracapsular extension, or ECE)  (<em>not good</em>), but is slightly less aggressive than thought.</p><p>The pathologist also tests the &quot;margins&quot; to determine whether the surgeon left any &#39;tentacles&#39; of the tumor behind. Fortunately that was negative. (A big <em>thumbs up</em> for Dr. Heaney!) </p><p>The biopsy also revealed additional previously undetected small &#39;tumor foci&#39; on the right side, one reason they always remove the whole prostate rather than part of it.</p><p>For the next couple weeks, my foci will be on fully recovering from the surgery. <br /></p><h3>Recurrence statistics </h3><p>It&#39;s been said, &quot;If you&#39;re going to get cancer, prostate cancer is the one to get,&quot; because it&#39;s relatively slow growing. Perhaps. But. When you&#39;re 85, five years is a lifetime; when you&#39;re 50, five years is just a snippet. </p><p>Next month I get my PSA checked again. We expect it to be zero (less than 0.02), meaning so far so good, we successfully removed the cancer. But in reality there&#39;s fair odds it could come back at some time in the future.</p><p>So, how do you measure those chances? You take all these findings, and plug them into a website (www.mskcc.org), and get back your chances of recurrence in some number of years. (<em>hurray for the web! Ugh</em>.) Assuming my PSA measures zero next month, my chances of having the cancer come back within 5 years is 15%, and 10 years is a whopping 24%. <em>Fuck you. </em>Pretty high odds given the severity of the risk. According to the calculator, if I remain cancer-free for two years, my chance of recurrence in 10 years drops to 18%.<br /></p><p>What can I do about it? Basically two courses of action are: A. wait and see if the PSA starts to rise and then deal with it, if necessary; or B. take preemptive radiation to reduce the chance of recurrence, but perhaps needlessly suffer side effects of this treatment (e.g. messy stuff including urinary, sexual, and/or digestive degeneration).</p><p>It&#39;s a bizarre numbers game. At this point if there&#39;s no evidence of cancer still inside, we&#39;re dealing with &quot;chances&quot; of recurrence. <em>A fuzzy concept in itself.</em> Then if we consider a preemptive treatment, we&#39;re compounding chances with chances of reducing the chances (by, say, 5 points). <em>Fuzzier. </em>Or if you wait until the PSA starts to rise, you run another calculator on the effectiveness of &quot;salvage radiation therapy&quot;. <em>The what-if&#39;s can go on forever. </em>  </p><p>At the same time, you have to wonder the accuracy of the data sets used in the calculators. Here&#39;s my non-professional impression. You&#39;d think the more specific your inputs to the calculator, the more accurate the predictions. But in fact, the more specific you are, the smaller the population of patients in these specific situations, so the statistical analysis become less reliable and more ambiguous. </p><p>And who knows what these calculators will spit out in a few years with the same inputs. Who knows what new treatment options may be available in 5 or 10 years making all this data moot anyway. And, are 10 year predictions based on people who were treated 10 years ago? I imagine surgical experience, knowledge, and techniques have improved over time. Finally, the MSKCC site has a note, &quot;some studies suggest that more experienced surgeons have better outcomes than do less experienced surgeons.&quot; I had a more experienced surgeon. <em>That&#39;s promising, and still fuzzy.</em></p><p>So to me, the bottom line is, preemptive radiation is treating a &#39;concept&#39;, a probability, not a specific condition. And the calculator does say chances are 76% I am (prostate) cancer-free for life.  <br /></p><p>Maybe I&#39;ll meet with a radiologist in a few months to hear his suggestions. Most likely we&#39;ll decide to just keep monitoring my PSA.</p><h3>Moving on </h3><p>OK, so what now? Start worrying about heart disease instead? Go for a colonoscopy? Fill my schedule with more doctor&#39;s appointments? <em>Bah! It never ends. </em></p> <p>Perhaps I should be grateful my lymph nodes came back clean. After all, everyone knows someone (or knows someone who knows someone) in that gravely unfortunate situation. </p><p>Perhaps I should be grateful for the medical establishment, and insurance industry, for making this whole process as remarkably painless, smooth going, and professional as it&#39;s been.  </p><p>Perhaps I should honor every moment I have now to spend with my family. </p><p>Perhaps I should regain my focus on work and other projects that have been left in limbo for the past month or so. </p><p>Perhaps it&#39;s time to get on with life, and stop obsessing... </p><p>&nbsp;</p><p><em>Comments should only further the discussion for others&#39; benefit. </em><em>Please do not leave personal comments here, this is not a &#39;guest book&#39;. </em><em>If you leave a comment that I consider too personal, I will read it and then delete it. Thank you.</em>   </p><p>&nbsp;</p>",linoj,3530,39,musings,,Surgery_and_prognosis
169,"prostate cancer!","This post was written May 28 but I delayed publishing it until now",3,1211974691,9,,2,"<p>Young at heart makes one young, not. Then again, prostrate problems are usually associated with retired old men, not someone like me. OK, in some circles I may be &quot;the old guy&quot;, like techie forums where many folks are half my age. But I&#39;m not <em>that old</em>...</p><h3>Joining the medical system </h3><p>In July 2007, I turned 50, and figured I ought to go for a &#39;regular&#39; doctor&#39;s checkup. It took a few months to finally get around to making the appointment. Actually I procrastinated &#39;til my wife Lisa finally made the call for me; and the next available slot wasn&#39;t for another couple months out, in December. </p><p>The last time I had a physical was when I turned 40; I figured at the time I&#39;d get a baseline into my medical records. Nothing significant came up, just some recommendations to watch my cholesterol and stress. <em>OK, sure, no problem.</em></p><p>During the ensuing decade nothing of any significance changed in my health. Sure, I gained some weight, but continued to eat fairly healthily: limited red meat, lots of pasta and legumes, fresh fruit and veggies, perhaps indulging in chips and desserts more than I should. I&#39;ve enjoyed an occasional beer or bottle of wine, even a pack of smokes now and then, but nothing too outrageous. Perhaps regular exercise lapsed from time to time, but generally I&#39;d walk, run, or hike at least 5 miles per week. </p><p>Lots of good things happened in my 40&#39;s too: raising my kids (4 in all), started and worked with numerous tech businesses and volunteer organizations, bought a farm and moved to the country, and generally enjoyed my wife, family, career, and sense of adventure.</p><p>I go to the dentist every 6 months, because I know my teeth can develop problems. But there never seemed a necessity to go for a medical checkup. After all, I&#39;m pretty self-aware and watchful of symptoms, so I would have certainly gotten checked should something come up.   </p><p>Now, 50 seemed like a good time. After all, chronologically I&#39;m at the crest of the hill, if not already over it. Isn&#39;t 50 that age where they recommend you start getting checked regularly for age-risk related problems? </p><p>So when I went to visit Dr. Preiss, an internist at the Dartmouth Hitchcock Medical Center on December 11, I didn&#39;t have any complaints, nor expect much. I figured the worst thing they might find (and did) were blood pressure and cholesterol issues. Pretty normal for someone my age and family history. My blood pressure was high and he put me on Lisinopril and aspirin for hypertension.</p><p>I had a follow up appointment on January 28, my blood pressure now under control. But a blood test revealed a PSA of 6.7. Prostate Specific Antigen is a substance produced by the prostate gland in men. I&#39;d never given much thought to PSA, nor my prostate either for that matter, as I&#39;ve never experienced any problems normally associated with an enlarged prostate (urinary or sexual dysfunction). A high PSA means your prostate cells are too active. Under 4.0 is OK; over 4.0 should probably be followed up; it can go as high as 20 or more.  </p><p>A next follow up appointment with Dr. Preiss on Feb 25, my PSA was again above 4, at 7.0. As far as I recall, he didn&#39;t notice a lump. But he did recommend I see a urologist. <em>Oh sure, no problem, I&#39;ll humor the doctors.</em> <em>Obviously I&#39;m &quot;in the system&quot; now and ought to play along.</em> Dr. Preiss looked me straight in the eye and said, &quot;Don&#39;t postpone scheduling the urologist, it&#39;s important.&quot; </p><p>I&#39;ll never forget that look. </p><h3>Biopsy </h3><p>I met with a urologist Dr. Bihrle, on March 21. He gave me a rectal exam, &#39;felt around&#39;, and told me I had a lump on the left side of the prostate. <em>Oy.</em> And he recommended I schedule a biopsy so they can see if it&#39;s cancerous. <em>Oh shit.</em> And I should do this as soon as possible. <em>Oh shit, oh shit.</em></p><p>I went in for the biopsy on April 21 (soonest they could schedule it). Dr. Seigne, head of urinary oncology, would do the procedure; we met at 9:30a for conversation, do the procedure and be out of there by noon. A simple outpatient thing, or so they say. <em>Yeah, right!</em> I found it to be <em>really fuckin&#39; intense</em>, or at least nerve-wracking. They stick this probe up your butt and fire little hollow needles into your prostate (through the large-intestine wall) to pull out core samples. I had 15 in all, up and down the prostate, on both sides. <br /></p><p>The prostate is a gland about the size of a walnut, only in males, located just under the bladder. Its primary function is to produce semen that carries sperm during sexual activity. The prostate often gets enlarged in older men, affecting the ability to urinate and/or get an erection. I&#39;ve had neither of those symptoms.  </p><p>It was a very long week waiting for Dr. Seigne to call with the results. He makes &#39;these calls&#39; once a week, on Monday evenings. The call came in. Lisa and I got on the phone, and he delivered the news: yes, the results are &#39;positive&#39;, there is a malignant cancer, and it&#39;s &#39;early stage&#39; yet &#39;aggressive&#39;. It&#39;s that lump on the left side. The right side appears clear. </p><p>One thing about prostate cancer, compared with cancers originating in other parts of the body, it grows fairly slowly so there&#39;s time learn about it and decide on a treatment, he says.</p><p><em>NO FUCKING WAY! Get this monster out of me, NOW!</em> </p><p>The good doctor instructed us to not panic and contact his assistant to schedule an appointment to discuss the findings in more detail and explore treatment options. I did. And a letter arrived in the mail with the prognosis details, including the bottom line: &quot;I have staged your prostate cancer as T2aN0M0 Gleason score 4+4=8&quot;. That means it&#39;s quite aggressive but there&#39;s a good chance it&#39;s still contained within the prostate and has not spread. </p><p>A large envelope also arrived with booklets, information fliers, and a DVD. And I was asked to fill out a (confidential) on-line questionnaire before the next visit. Lisa and I met with Dr. Seigne again on May 8th.</p><h3>Treatment discussions </h3><p>Basically treatment options fall into one of 3 categories (Disclaimer: this is totally my interpretation as it pertains to my situation, I am not a doctor nor do I play one on television). If the cancer is well contained in the prostate, you can go for radiation therapy where they nuke the gland every day for a couple months and hope to vaporize the bad cells. A side effect is it may/will damage some good cells too, causing other kinds of problems (just think about which basic bodily functions occur in the pelvic region).</p><p>If the cancer has a significant lump but is pretty much still contained within the prostate, they can surgically remove the gland, and some surrounding tissue as well. This is more radical but seems much more precise. Actually, statistics show that surgery may not be any more effective in the long run than radiation, depending on the details of the case. But for aggressive cancers, it&#39;s going to remove the tumor all at once, that&#39;s for sure. A possible side effect is ED (as defined on prime time TV these days), especially if they  remove the nerves adjacent to the gland.   </p><p>If the cancer has spread beyond the prostate, your treatment options are more systemic, like chemo or hormone therapy. And life expectancy is significantly diminished. </p><p>Having an early stage, aggressive cancer, I opted for the surgery, scheduled for June 9th (same as my wedding anniversary-- will be our 23nd this year), with the chief surgeon for prostatectomy at DHMC, Dr. Heaney, a leader in the field (with significant web presence as well). </p><p>Next up, I was asked to schedule a nuclear bone scan to check for any evidence the cancer had spread to an advanced stage. The test, taken on May 12, as expected, showed no signs. But a suspicious thing was found on my left kidney, probably a common cyst, that should be checked. A follow up ultrasound on May 23 showed no cancer there. <br /></p><p>Then we met with Dr. Heaney on May 27 to meet &quot;the man&quot; and get another perspective on all this.</p><p>He told a helpful analogy. Consider a fruit gift package from <em>Harry &amp; David</em>. The prostate is like a fruit. Surrounding it is a tissue paper (thin membrane), and that sits inside a foam filled box (fatty tissue). As the cancer becomes more aggressive it can push through the membrane into the fatty tissue. Eventually cells break loose and can spread into lymph nodes and beyond. </p><p>The cancer &quot;game&quot; is all about statistics. No one will tell you anything except in terms of probabilities, with lots of caveats. There&#39;s also a lot of &quot;controversy&quot; (a word that keeps coming up) about which numbers are significant, which treatments work better than others, and what&#39;s correlated with what, or not. And then they quote you the old cancer standby&#39;s - the 5-year and 10-year &quot;survival rates&quot;. </p><p>Lisa has joked that she&#39;s going to make me play in the traffic every day, which should lower my chances of dying from prostate cancer...</p><p>There are online calculators the doctors use, available to anyone (like www.mskcc.org ) where you punch in specs about your case and it spits back the chances of it spreading, and probabilities of your being free of it after 5 years etc. I won&#39;t share my numbers but I will say, they leave me hopeful. </p><p>The probabilities become increasingly accurate as more information is collected. The tissues removed during surgery are sent to the lab for a complete new biopsy work up. That will tell exactly where the cancer is (was) and whether (how much) it has spread beyond the gland itself.</p><p>In my case the plan is to remove the prostate, some surrounding tissue, including the left nerve, sparing the right side one <em>(Yipee!</em>). They&#39;ll also remove a couple lymph nodes (the closest ones to the prostate are near the pelvis) for testing. </p><p>A month after surgery they take my PSA again. Pray for zero (under 0.2), which means they got it all (for now). A PSA of 2.0 or higher indicates there&#39;s prostate cells elsewhere in the body (presumably cancerous) and further therapy will be recommended.  Or, I continue getting my PSA checked regularly looking for any signs of recurrence. </p><p>&quot;They&quot; say one out of 6 men get prostate cancer during their lifetime. They say &quot;most men die with prostate cancer, not from it&quot;, since it&#39;s slow growing they die of other causes. Somehow I&#39;m suspicious whether this idiom applies to someone my age, but only time will tell. </p><h3>Emotional Response</h3><p>For whatever reason, I have yet to respond to the news with much negative emotions -- fear, anger, nor depression. I believe everyone should ask themselves from time to time: If I were to learn I&#39;m going to die soon, what would I do differently with my life? Remarkably, my answer is &quot;Nothing&quot;. </p><p>Seriously, I have been blessed with a great life and freedom and opportunity and circumstances to carve out a lifestyle and environment that makes me happy. There isn&#39;t another place on this planet I&#39;d rather be living. There are no other people in the world I&#39;d rather be spending my time with. If anything, there are things I&#39;d like to get done quicker, as time becomes ever more precious, or better, as there&#39;s always room for improvement, but these pertain to simple things and projects. No profound regrets or anxiety. Thank God. And God Bless America.</p><p>My sister Sue died at age 38 of breast cancer 15 years ago, leaving a husband and two young children. It was a traumatic time in my family, she was the first (and still the only) one to die in my generation among 20 or so first cousins. My father passed away last year at age 90. </p><p>My greatest negative response to all of this is a sad fear of possibly getting shortchanged. In ten years my youngest daughter may be entering college. My oldest daughter may be wedding. I fully intend to be there with them, in sound health. I cannot imagine otherwise. </p><p>My greatest motivation now is to appreciate every day, to speak a little softer, to love a little more, to be less impatient, to smell the air, gaze the stars, and sow my garden (both literally and figuratively). After all, that&#39;s what life is about. </p><p>&nbsp;</p><p><em>Comments should only further the discussion for others&#39; benefit. </em><em>Please do not leave personal comments here, this is not a &#39;guest book&#39;. </em><em>If you leave a comment that I consider too personal, I will read it and then delete it. Thank you.</em> <br /></p><p>&nbsp;</p>",linoj,7449,39,musings,,prostate_cancer%21
168,"Nested Sets versus Trees","I had been using acts_as_tree and then switched over to acts_as_nested_set for managing parent-child relationships within a model. Now I'm having second thoughts and may switch back.",3,1205857595,9,,0,"<p>When model items can be arranged in a tree structure, you add a parent_id attribute that references the parent object in the same model. Two different ways to manage this are implemented with the Rails plug-ins acts_as_tree and acts_as_nested_set.</p><p>The conventional wisdom is that acts_as_nested_set is much faster on reading branches of the tree but slower on writing/updating items than acts_as_tree. This is true, in some circumstances, but that&#39;s not the whole story either. </p><h2>acts_as_tree </h2><p>With acts_as_tree, you simply including a column for parent_id, and when you want to nest an object, you assign the parent object. If you also use acts_as_list, and include a &quot;position&quot; column, then you have an ordered nested list. Generally I also add a column for the container of these items, so you can find all the items </p><p>example usage </p><p>example migration</p><p>example model declarations</p><p>&nbsp;</p><p>in model that has_many of the items, </p><pre>has_many :foos, :order =&gt; :position</pre><p>&nbsp;</p><h2>acts_as_nested_set</h2><p>For nested sets, I use the better_nested_set plug-in. Nested sets implement the XXXXXX algorithm.</p><p>&nbsp;</p><p>in model that has_many of the items, </p> <pre>has_many :foos, :order =&gt; :lft</pre> <p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,0,42,rails,"tree,acts_as_tree,nested set,acts_as_nested_set",Nested_Sets_versus_Trees
167,"Fat Model - Skinny Controller","This is the Rails way...",3,1204878190,9,,2,"<div style=""text-align: center""><img src=""var/uploads/Image/fat-skinny.jpg"" alt=""Fat model - Skinny controller"" title=""Fat model - Skinny controller"" width=""512"" height=""371"" /></div><div style=""text-align: center""> </div><div style=""text-align: center""> </div><div style=""text-align: center""> </div><div style=""text-align: center""> </div><div style=""text-align: center"">composition by linoj </div><div style=""text-align: center"">photos unabashedly lifted from a google images search </div>",linoj,129072,42,rails,,Fat_Model_-_Skinny_Controller
166,"HOSTING and MAINTENANCE",,3,1204749819,9,,0,"<h2>Managed Services</h2><p> http://www.mor.ph/  ROCKS!</p><p>&nbsp;</p><p>RightScale</p><p>EngineYard</p><p>&nbsp;</p><p>&nbsp;</p><h2>Hosting/Deployment</h2><p>hosted with rimu and hosting with Cari.net (great prices and service, nboth)</p><p>http://www.railshostinginfo.com/</p><p>use a frontend like nginx to proxy rails requests. is a lot faster at static content too (read: js, css, images) </p><p>http://www.hostingrails.com/forums/wiki_thread/1</p><p>http://wiki.slicehost.com/doku.php?id=automated_rails_install_and_deployment_with_deprec_capistrano </p><p>Reviews of Hosting</p><p>http://nubyonrails.com/articles/2007/02/24/the-host-with-the-most</p><p>&quot;Release It!&quot; book<br />http://pragmaticprogrammer.com/titles/mnee/ <br /></p><p>Deploying sites on local Mac</p><p>http://hivelogic.com/narrative/articles/ruby-rails-mongrel-mysql-osx<br />http://groups.google.com/group/rubyonrails-deployment/browse_thread/thread/dac09932004a9472?hl=en<br /> </p><p>I believe it is necessary to modify the config/envinronment.rb file by <br /> uncommenting &quot;ENV[&#39;RAILS_ENV&#39;] ||= &#39;production&#39;&quot; line, unless you use <br /> Webrick.  Then you can specify the environment by typing &quot;ruby/script <br /> server -e production&quot;.  </p><p>http://blog.codahale.com/2006/06/19/time-for-a-grown-up-server-rails-mongrel-apache-capistrano-and-you/</p><p>http://www.softiesonrails.com/2007/4/5/the-absolute-moron-s-guide-to-capistrano </p><p>http://joyent.com/accelerator/pricing/</p><p>&nbsp;</p><pre> wyhaines​​: ​linoj, convert to evented_mongrel or swiftiplied_mongrel first, before you throw more clusters at anything.  <br />​​[1:00p] ​linoj​​: ​• linoj fantasizes, my app is pre-alpha and has no users yet<br />​​[1:03p] ​ReinH​​: ​linoj: wyhaines is a server ninja <br />​[1:03p] ReinH: wyhaines: are you going to write a book?<br />​[1:03p] ReinH: &#39;cause I would buy it</pre><pre> </pre><p>TUTORIAL ON BUILDING FROM SCRATCH IN UBUNTU OR DEBIAN</p><p>http://ariejan.net/2007/06/20/rails-production-server-setup-and-deployment-on-ubuntudebian/</p><p>&nbsp;</p><pre> : ​debian</pre><pre>​​[8:30p] ​Lars_G​​: ​but in general, for dedicated servers I preffer gentoo</pre><pre>​[8:30p] Lars_G: for general servers, debian, or ubuntu lts</pre><p>&nbsp;</p><h4>capistrano </h4><p>Webistrano, a web-based wrapper for Capistrano</p><p>&nbsp;</p><h4>media storage</h4><p>Amazon S3 http://www.amazon.com/gp/browse.html?node=16427261</p><p>&nbsp;</p><h2>User Stats</h2><p>Mole: http://liquidrail.com/2007/4/15/mole-plugin-inspect-the-rails/</p><p>&nbsp;</p><h2>Desktop Integration</h2><p>Slingshot: http://www.joyent.com/developers/slingshot/</p><p>&nbsp;</p><h2>Site Maintenance</h2><p>Updating Rails</p><p>    $ gem update rails --include-dependencies</p><p>and its javascript, scripts, etc too: </p><p>    $ rake rails:update </p><p>Freeze rails for deployment (copies to vendor/rails)</p><p>    $ rake rails:freeze:gems </p><p>Linking to rails repo : edge, stable, or specific point<br /></p><p>    $  svn propset svn:externals &quot;rails http://dev.rubyonrails.org/svn/rails/trunk&quot; vendor <br />    $  svn propset svn:externals &quot;rails http://dev.rubyonrails.org/svn/rails/branches/1-2-stable&quot; vendor<br />    $  svn propset svn:externals &quot;rails http://dev.rubyonrails.org/svn/rails/tags/rel_1-2-1&quot; vendor </p><p>then </p><p>    $ svn up vendor </p><p>and if you went for edge, should rerun the rails command</p><p>    $ yes | rails .</p><p>and dont forget to commit (my repo)<br /></p><p>    $ svn commit --message=&quot;Living on the Edge - set svn:externals on vendor/ for Rails&quot;<br /> </p><h4>Session store</h4><p>Removing ruby_sess files: http://www.missiondata.com/blog/?p=58</p><p>Using DB: http://wiki.rubyonrails.com/rails/pages/HowtoChangeSessionStore </p><p><span class=""postbody""> Make sure you keep your site clean: flush out your logs and all your old sessions periodically. I do that with a script file I run from a cron job. My script looks something like this: <br />  <br /> </span></p><table border=""0"" cellspacing=""1"" cellpadding=""3"" width=""90%"" align=""center""><tbody><tr> 	  <td><span class=""genmed""><strong>Code:</strong></span></td>	</tr>	<tr>	  <td class=""code"">#!/bin/bash <br />  <br /> cd /home/username/sites/goldberg.240gl.org/ <br /> /usr/bin/rake clear_logs <br /> /usr/bin/find tmp/sessions -mtime +0 -name &quot;ruby_sess.*&quot; | /usr/bin/xargs /bin/rm <br />  <br /> exit 0 </td></tr></tbody></table><p>Session expiration equals session _cookie_ expiration. <br /> </p><p>By default the cookie has no expiration date, which means it expires   <br /> when the user closes the browser. You can set a fixed expiration   <br /> window with <br /> </p><p>   ActionController::Base.session_options[:session_expires] = something <br /> </p><p>and dynamic expiration with this plugin <br /> </p>   <a rel=""nofollow"" href=""http://agilewebdevelopment.com/plugins/dynamic_session_exp"" target=""_blank"">http://agilewebdevelopment.com/plugins/dynamic_session_exp</a> <p>&nbsp;</p><p>no cookie session support plugin http://www.edgesoft.ca/blog/read/2</p><p>&nbsp;</p>",linoj,0,42,rails,,HOSTING_and_MAINTENANCE
165,"WYSIWYG MARKUPDOWN",,3,1204749658,9,,0,"<h2>WYSIWYG/Markdown</h2><p><strong>TinyMCE</strong> </p><p>Manual TinyMCE<br /> http://www.busyashell.com/blog/articles/2006/06/23/using-tinymce-in-rails</p><p>TinyMCE Plugin<br />http://wiki.rubyonrails.org/rails/pages/HowToUseTinyMCE</p><p>GZIP plugin for TinyMCE (shrinks download by 75%)<br />http://garbageburrito.com/blog/entry/89 <br /></p><p>limit allowed html tags (since can&#39;t use h()) http://svn.techno-weenie.net/projects/plugins/white_list/README</p><p>TinyMCE inplace editing (edit this page), DK CMS (doodlekit)<br />http://garbageburrito.com/blog/entry/331</p><p><strong>Textile</strong> </p><p>Redcloth (textile editor)<br />http://rubyforge.org/projects/redcloth/<br />http://code.whytheluckystiff.net/redcloth/<br />http://wiki.rubyonrails.org/rails/pages/RedCloth</p><p>http://www.whytheluckystiff.net/ruby/redcloth/ </p><p>textile syntax: http://textile.thresholdstate.com/ <br />http://en.wikipedia.org/wiki/Textile_%28markup_language%29<br />http://redcloth.rubyforge.org/classes/RedCloth.html#attribute-list<br /></p><p>http://www.rubynaut.net/articles/2007/04/06/how-textilize-on-rails </p><p>SuperRedCloth<br />http://code.whytheluckystiff.net/redcloth/wiki/SuperRedCloth</p><p>latest? http://rubyforge.org/pipermail/redcloth-upwards/2007-February/000115.html</p><h4>Markdown</h4><p>http://www.deveiate.org/projects/BlueCloth</p><p>http://daringfireball.net/projects/markdown/syntax </p><p>&nbsp;</p><h4>bbcode</h4><p>(see snippet from joelmichael)</p><h4>liquid</h4><p>derived from django templates </p><p>http://www.liquidmarkup.org/</p><p>rdoc http://liquid.rubyforge.org/</p><p>howto http://code.google.com/p/liquid-markup/wiki/UsingLiquidTemplates </p><h4>limited HTML</h4><p>http://www.anyexample.com/webdev/rails/how_to_allow_some_safe_html_in_rails_projects.xml</p><p>&nbsp;</p><p><strong>Spellcheck</strong></p><p>http://sourceforge.net/projects/raspell/</p><p>&nbsp;</p><h4>code formatting</h4><p>nice example  http://www.paulsturgess.co.uk/articles/show/34-how-to-build-a-simple-ajax-search-in-ruby-on-rails</p><p>uses:</p><pre>&lt;<span class=""start-tag"">script</span><span class=""attribute-name""> src</span>=<span class=""attribute-value"">&quot;/javascripts/code_highlighter.js?1181824825&quot; </span><span class=""attribute-name"">type</span>=<span class=""attribute-value"">&quot;text/javascript&quot;</span>&gt;&lt;/<span class=""end-tag"">script</span>&gt;<br /></pre><pre>&lt;<span class=""start-tag"">script</span><span class=""attribute-name""> src</span>=<span class=""attribute-value"">&quot;/javascripts/ruby.js?1181824825&quot; </span><span class=""attribute-name"">type</span>=<span class=""attribute-value"">&quot;text/javascript&quot;</span>&gt;&lt;/<span class=""end-tag"">script</span>&gt;</pre><p>&nbsp;</p><p>ctags - <br /> </p><p>coderay - http://coderay.rubychan.de/</p><p>&nbsp;</p><h3>Sanitizing</h3><p>using h() http://wiki.rubyonrails.org/rails/pages/HowToEscapeHTML </p><p>xssterminate </p><p>http://code.google.com/p/xssterminate/ </p><p>http://railspikes.com/2008/1/28/auto-escaping-html-with-rails </p><p>html5lib </p><p>http://code.google.com/p/html5lib/wiki/UserDocumentation </p><p>http://wiki.whatwg.org/wiki/Sanitization_rules</p><p>&nbsp;</p>hatezilla, using rails&#39; WhiteListSanitizer  http://pastie.caboo.se/154662 ",linoj,0,42,rails,,WYSIWYG_MARKUPDOWN
164,ROUTING,,3,1204749526,9,,0,"<h2>Routing</h2><p>general explanation: http://weblog.jamisbuck.org/2006/10/2/under-the-hood-rails-routing-dsl</p><p>and http://weblog.jamisbuck.org/2006/10/4/under-the-hood-route-recognition-in-rails </p><p>debugging: http://svn.techno-weenie.net/projects/plugins/routing_navigator/ </p><p>    the default way<br /></p><pre>#posts/show/1<br />@post = Post.find(params[:id]) </pre><p>&nbsp;</p><pre>#posts/show/the_name<br />@post = Post.find_by_name(params[:id])<br /># ---<br />link_to @post.title, :action =&gt; &quot;show&quot;, :id =&gt; @post.name</pre><p>&nbsp;</p><h3>Friendly URLs / Permalinks </h3><p>very nice friendly id: http://github.com/norman/friendly_id/tree/master <br /></p><p>&nbsp;</p><p>http://dev.2750flesk.com/acts_as_sluggable/ </p><p>    http://svn.techno-weenie.net/projects/plugins/permalink_fu/<br /></p><p>&nbsp;</p><h3>Restful </h3><p>use routes to help distinguish admin vs end user REST actions:<br /> http://www.fallenrogue.com/articles/178-Creating-a-RESTful-admin-section-in-Rails </p><p>same with 2 controllers:<br />http://www.fallenrogue.com/articles/181-Creating-a-RESTful-admin-section-in-Rails-with-2-controllers <br /></p><p>not use id&#39;s in urls: http://railswatcher.com/past/2007/4/12/security_through_obscurity-and-seo-sef-urls/</p><p>using names instead of ids in REST http://blog.imperialdune.com/2007/2/13/pretty-urls-with-restful-rails</p><p>to_param: http://www.artima.com/forums/flat.jsp?forum=123&amp;thread=194141 (may be better links?)</p><p>2.0 RESTful routing: http://ryandaigle.com/articles/2007/5/6/what-s-new-in-edge-rails-restful-routing-updates</p><p>Magic Routing plugin : http://www.culann.com/2007/05/introducing</p><p>&nbsp;</p><h4>Subdomain routing</h4><p>http://www.railsdev.ws/blog/10/using-subdomains-in-rails-apps/ </p><p>http://agilewebdevelopment.com/plugins/request_routing </p><p>http://weblog.rubyonrails.org/2006/5/22/dan-webbs-request-routing-plugin</p><p>http://wiki.rubyonrails.org/rails/pages/Url+for+domain</p><p>http://svn.jamisbuck.org/rails-plugins/routing_tricks/</p><p>http://dev.rubyonrails.org/svn/rails/plugins/account_location/</p><p>discussion: http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/9c578165f1511cb3/?hl=en#</p><p>&nbsp;</p><p>On Sep 4, 2007, at 12:30 PM, Jeff Lindsay wrote:<br /><br />Hi Jonathan,<br /><br />First you setup a DNS record for *.yourdomain.com just like  you would<br />a normal domain only you want to have the wildcard (*) subdomain on<br />it. Then you have to setup your webserver to accept requests at<br />*.yourdomain.com usually by adding ServerAlias *.yourdomain.com to<br />your Apache virtual host configuration.<br /><br />From there you can do several things to catch the domain and do<br />various things based on that, such as change the root directory or<br />have your application behave differently. That&#39;s a little out of the<br />scope, but here&#39;s some more info regarding doing mass domain hosting<br />using a special feature of apache:<br />http://httpd.apache.org/docs/2.2/vhosts/mass.html<br /><br />Otherwise you&#39;ll have to use mod_rewrite or something at the<br />application level. Good luck!<br /><br />-jeff<br /><br /><br /><br />On 9/4/07, Jonathan Linowes &lt;jonathan@parkerhill.com&gt; wrote:<br />Hi,<br /><br />You dont have to answer this question :)<br />but I&#39;m implementing a site with project names,<br />and I&#39;m wondering how you are managing the subdomain setup? (e.g.<br />projectname.devjavu.com)<br /><br />thanks<br />linoj<br /><br /><br /><br /><br /><br />-- <br />Jeff Lindsay<br />http://devjavu.com  -- Free Trac and Subversion<br />http://blogrium.com -- A blog about things<br /> </p><h4>sitewide configuration</h4><p>single row db (a gem generator): http://rubyforge.org/projects/rconfig/ </p>",linoj,0,42,rails,,ROUTING
163,"MODELS and ACTIVE RECORD",,3,1204749330,9,,0,"<h2>Models</h2><p>polymorphic http://wiki.rubyonrails.org/rails/pages/UnderstandingPolymorphicAssociations</p><p>&nbsp;</p><p>http://agilewebdevelopment.com/plugins/activerecord_base_without_table</p><p>&nbsp;</p><p>acts_as_proxy - let attributes in association look like its part of model (only works with 1:1) [SMALL EXAMPLE OF META-PROGRAMMING] </p><p>http://code.google.com/p/actsasproxy/</p><p>http://codelevy.com/articles/2007/07/05/actsasproxy#comments </p><p>&nbsp;</p><p>generating a dot model schematic diagram </p><p>http://railroad.rubyforge.org/</p><p>http://www.pivotalblabs.com/articles/2007/10/15/dot-rake </p><p>&nbsp;</p><h2>ActiveRecord, Sorting etc</h2><p><strong>http://www.muermann.org/ruby/criteria_query/ </strong></p><p>&nbsp;</p><p>http://elctech.com/2007/5/8/sortable-column-headers</p><p>&nbsp;</p><p>http://agilewebdevelopment.com/plugins/searchablerecord </p><p>&nbsp;</p><h4>Nested Set </h4><p>http://wiki.rubyonrails.org/rails/pages/BetterNestedSet plugin <br /></p><p>nested set for ordered trees, better than acts_as_tree (faster on retrieve, slower on insert) <br />http://opensource.symetrie.com/trac/better_nested_set/</p><p>acts_as_ordered_tree http://agilewebdevelopment.com/plugins/acts_as_ordered_tree </p><p>&nbsp;</p><h4>paginate </h4><p>don&#39;t use the built in paginate<br />​[01:12a] lisa: use the paginating_find plugin<br />http://agilewebdevelopment.com/plugins/paginating_find<br />http://redhanded.hobix.com/inspect/aPaginationHelperForRails.html<br /></p><p>paginate() is fine for many purposes</p><p>will_paginate plugin </p><p>&nbsp;</p><p>Let Rails convert the time into the format your database expects... <br /> </p><p>:conditions =&gt; [&quot;posts.created_at &gt; ?&quot;, 1.day.ago] <br /> </p><p>&nbsp;</p><p>ActiveRecord Extensions, integrated :conditions, bulk adds, temporary tables, etc<br />http://www.continuousthinking.com/tags/arext </p><p>&nbsp;</p><p>ActiveRecord revision management<br />http://www.oneofthewolves.com/2007/04/02/acts-as-subversioned-01-released-on-rubyforge/</p><h4>Search</h4><p>http://blog.evanweaver.com/files/doc/fauna/ultrasphinx/files/README.html</p><p>acts_as_sphinx</p><p>sphincter</p><p>&nbsp;</p><p>acts_as_ferret : high performance text search engine (requires ferret gem)<br /></p><p>http://trac.poocs.net/plugins/wiki/acts_as_searchable (requires  HyperEstraier installed locally or remote)</p><p>Sphincter uses Dmytro Shteflyuk&#39;s sphinx Ruby API and automatic configuration to make totally rad ActiveRecord searching http://seattlerb.rubyforge.org/Sphincter/</p><p>http://agilewebdevelopment.com/plugins/ultrasphinx </p><p>http://agilewebdevelopment.com/plugins/simplysearchable (help you create a clean url to search)</p><p>&nbsp;</p><h4>Parsing query parameters</h4><p>http://agilewebdevelopment.com/plugins/searchablerecord</p><p>http://agilewebdevelopment.com/plugins/filter</p><p>&nbsp;</p><h3>Versioning / Undo</h3><p>Undo Redo for Rails  http://rur-demo.nanorails.com/ </p><p>&nbsp;</p><h4>revision control</h4><p>acts_as_trackable</p><p> <a href=""http://agilewebdevelopment.com/plugins/acts_as_trackable"" target=""_blank"">http://agilewebdevelopment.com/plugins/acts_as_trackable</a> </p><p>acts_as_audited</p><p>http://agilewebdevelopment.com/plugins/acts_as_audited </p><p>http://opensoul.org/2006/07/21/acts_as_audited</p><p>&nbsp;</p><h3>Column Sort/ Filter</h3><p>http://filtered-list.rubyforge.org/ <br />Implements a filter dropdown that works much like Excel where all unique values are in the dropdown (plus a few special values) </p><p>&nbsp;</p><p>http://agilewebdevelopment.com/plugins/filter</p><p>&nbsp;</p><p>http://elctech.com/2007/5/8/sortable-column-headers</p><p>&nbsp;</p><h4>JS Table Sorting</h4><p>http://mingyi.org/other/ts_demo.html</p><p>http://www.frequency-decoder.com/2006/09/16/unobtrusive-table-sort-script-revisited</p><p>http://javathehutt.blogspot.com/2006/11/rails-realities-part-20-sortable.html</p><p><br /> http://agilewebdevelopment.com/plugins/sortable_column_headers (non ajax but remembers when you return to the page)</p><p>&nbsp;</p><h2>Fixtures / Fake Data</h2><p>fowlduck: http://github.com/sevenwire/forgery/tree/master </p><p>&nbsp;</p><h3>File Upload</h3><p>Paperclip   http://giantrobots.thoughtbot.com/2008/3/18/for-attaching-files-use-paperclip</p><p>&nbsp;</p><p>file_column &quot;avoid file_column&quot; </p><p>&nbsp;</p><p>guys, I want to do a file upload without a page refresh, and I want to do it inside a form_for.. I was thinking I could do this with submit_to_remote Does anyone know if this is possible ? yes: <a href=""http://tom-eric.info/archive/2006/12/08/upload-files-to-database-in-rails"" target=""_blank"">http://tom-eric.info/archive/2006/12/08/upload-files-to-database-in-rails</a></p><p>tinyfile: &lt;span&gt;uploads, overwrite prevention, deleting, and renaming &lt;/span&gt;<br />http://www.hotscripts.com/Detailed/62962.html  </p><p>acts_as_attachment</p><p>attachment_fu : <a href=""http://clarkware.com/cgi/blosxom/2007/02/24"" target=""_blank"">http://clarkware.com/cgi/blosxom/2007/02/24</a> (better version of acts_as_attachment)<br /> </p><p>image resizing and attachment_fu: <a href=""http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/94d4ea3bd28187f3?hl=en"" target=""_blank"">http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/94d4ea3bd28187f3?hl=en</a></p><p>http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/c2088952326e3571/960d228b318593d2?hl=en#960d228b318593d2</p><p>&nbsp;</p><p>[lost references to Progress Meter helpers]</p><p>&nbsp;</p><h2>Storage</h2><p>Amazon S3 </p><p>tutorial: http://clarkware.com/cgi/blosxom/2007/02/01#RubyS3Library</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,0,42,rails,,MODELS_and_ACTIVE_RECORD
162,"List methods for nested sets","Unfortunately better_nested_set (and acts_as_nested_set) lacks the list methods provided by acts_as_list. Here's a module that provides them.",3,1203627300,9,,2,"<p>I had been using acts_as_tree together with acts_as_list to make ordered nested lists. Recently I replaced acts_as_tree with the better_nested_set plugin, a formidable replacement that is much more efficient in database queries (it pulls the whole tree from the database at once). The nested set is also ordered, so there&#39;s no need for acts_as_list.<br /> </p><p>Unfortunately better_nested_set lacks the list methods provided by acts_as_list. Here&#39;s a module that provides them. It treats each branch of a tree as its own list, thus these methods are scoped by the local root.<br /></p><p>I haven&#39;t bothered to make this a plugin. Just create a file lib/nested_set_list.rb and paste this code:</p><pre>module NestedSetList<br />  def first?<br />    parent.nil? or parent.lft==self.lft-1<br />  end<br />  def last?<br />    parent.nil? or parent.rgt==self.rgt+1<br />  end<br />  def higher_item<br />    list = self_and_siblings<br />    i = list.index(self)<br />    i==0 ? self : list[ i-1 ]<br />  end<br />  def lower_item<br />    list = self_and_siblings<br />    i = list.index(self)<br />    i==list.size-1 ? self : list[ i+1 ]<br />  end<br />  def move_higher<br />    move_to_left_of( higher_item ) if higher_item<br />  end<br />  def move_lower<br />    move_to_right_of( lower_item ) if lower_item<br />  end<br />  def move_to_top<br />    move_to_left_of( self_and_siblings.first )<br />  end<br />  def move_to_bottom<br />    move_to_right_of( self_and_siblings.last )<br />  end<br />end <br /></pre><p> In your model, be sure to include it</p><pre>  acts_as_nested_set</pre><pre>  include NestedSetList</pre><p>&nbsp;</p>",linoj,6367,42,rails,"acts_as_nested_set,acts_as_list",List_methods_for_nested_sets
161,"options for select with style","Here's a variant of Rails' options_for_select helper which lets you add styles to the options, such as for adding icons the the dropdown select.",3,1203559499,9,,2,"<p>The Rails&#39; built-in options_for_select helper doesnt let you put styles in the &lt;option&gt; tag. Here&#39;s a replacement that does. It assumes the collection is in array format, it respects the convention that option.first is the text, and option.last is the value. We specify that the 2nd item is the style string.</p><p>Thus, our choices might look like this:</p><pre>    @role_choices = [ <br />      [&#39;Anyone&#39;,      &#39;padding: 2px; padding-left: 20px; background: no-repeat url(/images/world.png)&#39;,       &#39;public&#39;], <br />      [&#39;Submitters&#39;,  &#39;padding: 2px; padding-left: 20px; background: no-repeat url(/images/user_green.png)&#39;,  &#39;submitter&#39;], <br />      [&#39;Screeners&#39;,   &#39;padding: 2px; padding-left: 20px; background: no-repeat url(/images/user_go.png)&#39;,     &#39;screener&#39;],<br />      [&#39;Reviewers&#39;,   &#39;padding: 2px; padding-left: 20px; background: no-repeat url(/images/user_comment.png)&#39;, &#39;reviewer&#39;], <br />      [&#39;Managers&#39;,    &#39;padding: 2px; padding-left: 20px; background: no-repeat url(/images/user_suit.png)&#39;,   &#39;manager&#39;] <br />    ]</pre><p>&nbsp;</p><p>The view template may contain</p><pre>  &lt;%= select_tag( :role, options_for_select_with_style(@role_choices) %&gt;<br /></pre><p>&nbsp;</p><p>This can go into helpers/application_helper.rb </p><pre>  def options_for_select_with_style( container, selected=nil )<br />    container = container.to_a if Hash === container<br />    options_for_select = container.inject([]) do |options, element|<br />      text, value = option_text_and_value(element)<br />      selected_attribute = &#39; selected=&quot;selected&quot;&#39; if option_value_selected?(value, selected)<br />      style = &quot; style=\&quot;#{element[1]}\&quot;&quot; if element[1] &amp;&amp; element[1]!=value<br />      options &lt;&lt; %(&lt;option value=&quot;#{html_escape(value.to_s)}&quot;#{selected_attribute}#{style}&gt;#{html_escape(text.to_s)}&lt;/option&gt;)<br />    end<br />    options_for_select.join(&quot;\n&quot;)<br />  end<br /></pre><p>&nbsp;</p><p>And you get something like this:</p><p><img style=""width: 426px; height: 416px"" src=""var/uploads/Image/select_with_style.gif"" alt="" "" width=""426"" height=""416"" /> <br /></p><p>&nbsp;</p><p>Thanks to http://technology.amis.nl/blog/?p=994 which I found on Google</p><p>&nbsp;</p>",linoj,3725,42,rails,"helpers,forms",options_for_select_with_style
160,"default value for","A little plugin for default model attribute values. Different than :default => in SQL database migrations.",3,1203232920,9,,0,"# usage<br /><br />default_value_for :name, :default =&gt; &quot;Foobar&quot;<br />default_value_for :title, :default =&gt; Proc.new { |f| f.name.capitalize } <br /><br />end<br /><br /># results in<br />def default_name<br />  &quot;Foo&quot;<br />end<br />def name=(value)<br />  write_attribute( :name, (value==default_name) ? nil : value )<br />end<br />def name<br />  read_attribute(:name) || default_name<br />end<br /><br /><br />",linoj,0,42,rails,"default_value_for,plugin",default_value_for
159,"link to tag current","A simple helper variant of link_to_unless_current which tags the current item.",3,1202834471,9,,2,"<p>I don&#39;t usually write about simple helpers that I make, but this one is more generally helpful and important, I think. </p><p>&quot;link_to_tag_current is a variant of link_to_unless_current which tags the current item. Whereas link_to_unless_current generates plain text when the link would be the current page, this new helper wraps the plain text in a different tag. Without it there&#39;s no easy way to distinguish the current item from the others in CSS.</p><p>&nbsp;</p><pre>  def link_to_tag_current( name, tag, options={}, html_options={}, &amp;block)<br />    content = link_to_unless_current(name, options, html_options, &amp;block)<br />    current_page?(options) ? content_tag(tag, content) : content<br />  end<br /></pre><p>&nbsp;</p><p>To use it, for example, here&#39;s a tabs partial:</p><pre>&lt;div class=&quot;simple-tabs&quot;&gt;</pre><pre>  &lt;ul&gt;</pre><pre>    &lt;li&gt;&lt;%= link_to_tag_current &quot;Foos&quot;, :span, foos_path %&gt;&lt;/li&gt;</pre><pre>    &lt;li&gt;&lt;%= link_to_tag_current &quot;Bars&quot;, :span, bars_path %&gt;&lt;/li&gt;</pre><pre>    &lt;li&gt;&lt;%= link_to_tag_current &quot;Baz&quot;, :span, bazs_path %&gt;&lt;/li&gt;<br />    &lt;li&gt;&lt;%= link_to_tag_current &quot;Burns&quot;, :span, burns_path %&gt;&lt;/li&gt;<br /></pre><pre>  &lt;/ul&gt;</pre><pre>&lt;/div&gt;</pre><p>&nbsp;</p><p>And an example corresponding CSS:</p><pre>.simple-tabs {</pre><pre>  margin:0; padding:0;</pre><pre>  margin-top: 10px;</pre><pre>  width:100%;</pre><pre>  line-height:normal;</pre><pre>  font-style: italic;</pre><pre>}</pre><pre><br />.simple-tabs ul {</pre><pre>  margin:0;</pre><pre>  float: left;</pre><pre>  padding:0 1em;</pre><pre>  list-style: none;</pre><pre>  list-style-image: none;</pre><pre>  border: 1px solid #888;</pre><pre>  border-width: 0 0 1px 0;</pre><pre>}</pre><pre><br />.simple-tabs li {</pre><pre>  display:block;</pre><pre>  float:left;</pre><pre>  margin: 0 0 0 1em;</pre><pre>  padding: 0;</pre><pre>  text-align: center;</pre><pre>}<br /><br /></pre><pre>.simple-tabs ul li span {</pre><pre>  padding:0 1em;</pre><pre>  border: 1px solid #888;</pre><pre>  border-bottom-color: #fff;</pre><pre>}<br /><br /></pre><pre>.simple-tabs ul li a {</pre><pre>  padding:0 1em;</pre><pre>  border: 1px solid #888;</pre><pre>  text-decoration:none;</pre><pre>  color:#410000;</pre><pre>}</pre><p><br />Produces something like this:</p><p><img style=""width: 309px; height: 43px"" src=""var/uploads/Image/simple-tabs.gif"" alt="" "" width=""309"" height=""43"" /> <br /></p><p>By the way, I did consider a slightly different approach, that&#39;d give the current &lt;li&gt; tag a &quot;class = &#39;current-item&#39;&quot;, but that would require the helper also generate the &lt;li&gt; tags along with the link_to, which is a little too app-specific. In the end I decided to keep in line with the existing link_to family of helpers.</p><p>&nbsp;</p>",linoj,2559,42,rails,"link_to,helpers,tabs",link_to_tag_current
158,"Restful In Place Editor","Here's a patch to the in_place_editor to work smoother with RESTful resources.",3,1202719213,9,,2,"<p>I was bothered that using the standard in_place_editor helpers for Rails required I add new actions to my controllers and corresponding routes in routes.rb.  </p><p>As of Rails 2.0  it&#39;s is now a plug-in rather than part of core. I should probably make my changes a separate plug-in, or better, submit this as a patch. Instead, for now, I suggest you install the plug-in and copy and hack the code.  </p><p>To install,</p><pre>$ script/plugin install http://svn.rubyonrails.org/rails/plugins/in_place_editing/ </pre><p>Open the file vendor/plugins/in_place_editing/lib/in_place_macros_helper.rb and copy the two methods, in_place_editor and in_place_editor_field to your app/helpers/application_helper.rb</p><h2>in_place_editor helper</h2><p>We add a new option to this helper:</p><pre>:as     Name of the param the value is returned into<br />        e.g. :as =&gt; &#39;foo[name]&#39; </pre><p>To the in_place_editor method, add the following line after the js_options[&#39;callback&#39;] = line:</p><pre>    js_options[&#39;callback&#39;]   = &quot;function(form) { return #{options[:with]} }&quot; if options[:with]<br />    <strong># this line is the only change<br />    js_options[&#39;callback&#39;]   = &quot;function(form,value) { return &#39;#{options[:as]}=&#39; + escape(value) }&quot; if options[:as]</strong><br /></pre><p>&nbsp;</p><h2>in_place_editor_field helper</h2><p>In this we make just 2 changes. First, the default :url will now be your standard :update action in the controller. And 2nd, the new value will be set using standard REST parameters, eg params[:foo =&gt; { attribute_name =&gt; value }]</p><br /><pre># Renders the value of the specified object and method with in-place editing capabilities.<br />def in_place_editor_field(object, method, tag_options = {}, in_place_editor_options = {}) tag = ::ActionView::Helpers::InstanceTag.new(object, method, self)<br />  tag_options = {:tag =&gt; &quot;span&quot;, :id =&gt; &quot;#{object}_#{method}_#{tag.object.id}_in_place_editor&quot;, :class =&gt; &quot;in_place_editor_field&quot;}.merge!(tag_options) <br /><strong>  in_place_editor_options[:url] ||= { :action =&gt; &quot;update&quot;, :id =&gt; tag.object.id, :method =&gt; :post, :_method =&gt; :put }<br />  in_place_editor_options[:as] = &quot;#{object}[#{method}]&quot;<br /></strong>  tag.to_content_tag(tag_options.delete(:tag), tag_options) + in_place_editor(tag_options[:id], in_place_editor_options)<br />end</pre><br /><br /><h2>Your controller</h2><p>Last but not least you do things differently in your controller than the standard in_place_editor. </p><p><em>You do not need to use &quot;in_place_edit_for&quot; at all!  </em>Forgetaboutit!!</p><p>Rather, you just change the #update action to respond to ajax calls, as follows:</p><pre>  # PUT /foo/1<br />  def update<br />    @foo = Foo.find(params[:id])<br />    success =  @foo.update_attributes(params[:foo])<br />    respond_to do |format|<br />      format.html do<br />        if success<br />          flash[:notice] = &#39;Foo was successfully updated.&#39;<br />          redirect_to(@foo) <br />        else<br />          render :action =&gt; &quot;edit&quot;<br />        end<br /> <strong>    format.js do<br />         # assume updating only one attribute<br />         attribute = params[:foo].keys.first.to_s<br />         render :text =&gt; self.class.attributes.include? attribute ? @foo[attribute] : &#39;(bad attribute)&#39;<br />     end</strong><br />   end<br /> end<br /></pre><p>Basically we update the attributes in params, as usual. Except when its an ajax call, we assume there&#39;s really only one attribute in the params being updated. And the ajax renders the new value for updating the page.</p><p>A bit unconventionally, I do the update_attributes first then respond based on format. That&#39;s because, as mentioned in other blogs, there&#39;s no easy way to handle validations when doing in_place_editing. But then again it can be done (google it), and change your #update action as needed.  </p><h2>Views</h2><p>There&#39;s nothing to change in the views, they work the same as the standard in_place_editor, for example</p><pre>&lt;%= in_place_editor_field &quot;foo&quot;, :title %&gt;</pre><p>&nbsp;</p><p>PS Thanks for the leethal comments... :)</p><p>&nbsp;</p><p>UPDATE  March 4, 2008</p><p>I found some views reference attributes better handled from a different controller than the current one, like associations of the current resource. I&#39;ve modified the in_place_editor_field to use a controller based on the resource object name rather than assume the current controller.</p><p>I also added support for a :formatter option, so you can run the content through a filter before updating the view. For example, I use BlueCloth formatting, and specify :formatter =&gt; &#39;markdown&#39; on my text attributes. </p><p>Here&#39;s the full helper: </p><pre>  def in_place_editor_rest(object, method, tag_options = {}, in_place_editor_options = {})<br />    tag = ::ActionView::Helpers::InstanceTag.new(object, method, self)<br />    tag_options = {:tag =&gt; &quot;span&quot;, :id =&gt; &quot;#{object}_#{method}_#{tag.object.id}_in_place_editor&quot;, :class =&gt; &quot;in_place_editor_field&quot;}.merge!(tag_options)<br />    in_place_editor_options[:url] ||= { <strong>:controller =&gt; object.pluralize, </strong>:action =&gt; &quot;update&quot;, :id =&gt; tag.object.id, :method =&gt; :post, :_method =&gt; :put }<br />    in_place_editor_options[:as] = &quot;#{object}[#{method}]&quot;<br />    <strong># changed to support inline formatter </strong><br /><strong>    if formatter = in_place_editor_options.delete(:formatter)</strong><br /><strong>      in_place_editor_options[:load_text_url] ||= { :controller =&gt; object.pluralize, :action =&gt; &#39;show&#39;, :id =&gt; tag.object.id, :attribute =&gt; method.to_s } </strong><br /><strong>      var = @template.instance_variable_get(&quot;@#{object}&quot;)</strong><br /><strong>      value = var.send(method)</strong><br /><strong>      content = content_tag(tag_options.delete(:tag), @template.send( formatter, value), tag_options)</strong><br /><strong>    else</strong><br />      content = tag.to_content_tag(tag_options.delete(:tag), tag_options)<br />    end<br />    content + in_place_editor(tag_options[:id], in_place_editor_options)<br />  end</pre><p>&nbsp;</p>",linoj,7671,42,rails,"in_place_editor,REST",Restful_In_Place_Editor
157,"Choosing a Schema for Dynamic Records","I want users to be able to design their own forms, and collect data submitted on those forms. An important decision is the design of how these custom dynamic records are stored and accessed.",3,1201483868,9,,2,"<p>I am developing a DynamicRecord module for Rail&#39;s ActiveRecord which lets users dynamically expand at runtime an ActiveRecord model&#39;s set of attributes. A goal is to make this feature completely transparent, so the dynamic model looks and quacks like a conventional ActiveRecord model. Other than aesthetics and my own coding preference, this is important so the DynamicRecord models can utilize ActiveRecord features (like validations), and use other Rails plug-ins. </p><p>This article reviews the various ways I considered for storing this dynamic data.</p><h2>Custom Tables for Each Form</h2><p>One approach might be to simply create a new database table for each unique form on the site. And then I could use meta-programming to dynamically create a Rails model (subclass of ActiveRecord::Base) on the fly based on what the current user is doing. (Cool idea). That&#39;d mean these dynamic records would build completely on top of Rail&#39;s ActiveRecord. I could add search indexes which are form-specific, as needed. And other goodies that come with AR.<br /> </p><p>What if I have thousands of users, there might be thousands of distinct tables? I&#39;m told that&#39;s not inherently a problem for modern database systems. But it could be a pain in the butt from an administration point of view.<br /></p><p>Aside from that, users would be creating, altering, and dropping database tables on the fly. SQL gurus (on #mysql and #sql) warned me that letting users do this is an indication of really bad schema design.  For one, databases are not optimized for these operations, so performance would suffer. </p><p>A more serious problem is I&#39;d need to give my app these permissions on database tables, which poses a significant security risk. And this approach is not very scalable (e.g. multi-server configurations).</p><p>A compromise would be, after users define or modify their form definition, then generate the custom table via a Rails migration, perhaps even as a background process. That starts to sound a bit kludgey to me and compromises my users&#39; experience. <br /> </p><h2>Entity-Attribute-Value</h2><p>Another approach is to think of the custom table and &#39;pivot&#39; it, so that column values are stored as rows in a values table. For example, if the custom table would have looked like this:</p><pre>                   foo        bar          baz</pre><pre>row 1:            &#39;aaa1&#39;     &#39;bbb1&#39;       &#39;ccc1&#39;</pre><pre>row 2:            &#39;aaa2&#39;     &#39;bbb2&#39;       &#39;ccc2&#39;</pre><p>Then instead, lets store each value in a values table, along with the attribute (column) name and row_id:</p><pre>                row          attribute     value<br /></pre><pre>value 1:        1            foo           &#39;aaa1&#39;</pre><pre>value 2:        1            bar           &#39;bbb1&#39;</pre><pre>value 3:        1            baz           &#39;ccc1&#39;</pre><pre>value 4:        2            foo           &#39;aaa2&#39;</pre><pre>value 5:        2            bar           &#39;bbb2&#39;</pre><pre>etc</pre><p>Now that&#39;s the ticket! And I&#39;ll keep track of each form&#39;s schema in a separate DynamicAttributes model. In Rails it might look something like this<br /></p><pre>DynamicModel</pre><pre>  has_many :dynamic_attributes</pre><pre>  has_many :dynamic_records</pre><pre> </pre><pre>DynamicAttribute</pre><pre>  belongs_to :dynamic_model  </pre><pre>  has_many :dynamic_values</pre><pre> </pre><pre>DynamicRecord</pre><pre>  belongs_to :dynamic_model</pre><pre>  has_many :dynamic_values</pre><pre> </pre><pre>DynamicValue</pre><pre>  belongs_to :dynamic_record</pre><pre>  belongs_to :dynamic_attribute</pre><pre>  # =&gt; value.<br /></pre><p>So that&#39;s what I implemented... up to a point. I succeeded in mapping dynamic attributes to dynamic values, creating new dynamic records, and  retrieving them (DynamicRecord.find).</p><p>The values table can get big. If my site has 1,000 forms, with 10 questions, with 1,000 responses each, that&#39;s a ten million row table. Better add indexes for queries by row_id, and by attribute. (But it cannot be indexed on a specific attribute, like indexing a column of a static table does). </p><p>While adding support for find conditions, the code started to get pretty ugly, especially the SQL being generated (watching my log file). <br /> </p><p>Consider DynamicRecord.find(:condition =&gt; { :foo =&gt; &#39;aaa&#39;, :bar =&gt; &#39;bbb&#39; }). With our schema, the query becomes &quot;find all the dynamic_values WHERE (attribute=foo AND value=&#39;aaa&#39;) AND (attribute=bar AND value=&#39;bbb&#39;) which itself is impossible because attribute cant be 2 things at the same time. We want the intersection of these conditions (nor the &#39;OR&#39; union of them). This requires generating SQL sub-queries, or doing special joins.</p><p>The sub-query approach looked something like this: http://pastie.caboo.se/143508 Then I learned that many database implementations do not optimize subqueries very well (google &quot;sql subquery optimize&quot;).<br /> </p><p>Or, use joins instead, I was told (by gnari on #mysql), </p><blockquote><p>&quot;join parts to things twice , each time with a different alias. For things that have parts with properties &#39;x&#39; and &#39;y&#39;: select things.* from things as t join parts as p1 on t.id=p1.tid join parts as p2 on t.id=p2.tid where p1.property=&#39;x&#39; and p2.property=&#39;y&#39; . </p></blockquote><p>Since Rails&#39; <em>find</em> does support custom :join options, it is <em>possible</em> to use ActiveRecord <em>find</em> to query the DynamicValues table for a set of conditions. Or even, inject all the SQL I need using :finder_sql in the association. Good.<br /></p><p>But wait. For the model we&#39;re extending, can we support <em>all the options to</em> <em>its</em> <em>find</em> method? That was the original goal - make the extended model behave like a standard ActiveRecord one. </p><p>Mapping the <em>find</em> options to multiple :join&#39;s and special :condition&#39;s quickly gets ugly and hairy (no offense to people who are that). For example, complex conditions passed to find as SQL strings, and with_scope, and :order, etc. I feared I&#39;d end up writing a whole custom <em>find</em> method for DynamicRecord, not a path I planned to go down. </p><p>Rails conventions aside, I then found out this idea actually has a acronym (EAV) , its own wikipedia article  (http://en.wikipedia.org/wiki/Entity-Attribute-Value_model ), and people on IRC asking &quot;why do newbies always gravitate towards EAV???&quot; If you&#39;re interested, read the article. Basically it says EAV is inefficient, not relational, hard to administrate, doesn&#39;t scale, and really only makes sense in data warehousing applications where a conventional table would end up with thousands of columns with only a few values used per row.<br /></p><p>Fine.</p><h2>Dynamic Rows</h2><p>The third approach is kind of obvious but always seemed overly simplistic and wasteful. Create a table with a preset number of reusable columns, like an empty spreadsheet with fixed width.</p><pre>                   string_0   string_1    string_2</pre><pre>row 1:            &#39;aaa1&#39;     &#39;bbb1&#39;       &#39;ccc1&#39;</pre><pre>row 2:            &#39;aaa2&#39;     &#39;bbb2&#39;       &#39;ccc2&#39;</pre><p>Then define DynamicAttributes to map attribute names to actual column names (&#39;foo&#39; =&gt; &#39;string_0&#39;, &#39;bar&#39; =&gt; &#39;string_1&#39;, &#39;baz&#39; =&gt; &#39;string_2&#39;)</p><p>The main trade off is that you provide a limited number of columns. So if the user tries to build a really big form, he&#39;ll run out of columns. But, I ask myself, if the rows table provides, say, 100 columns, how many forms have more than 100 questions? That&#39;s not such a big trade off, at least in my application. If it&#39;s a recurring problem I can always migrate to more columns.</p><p>A few of the columns can be indexed ones (although the user will need to tag which form questions belong in an indexed column, hmm...) <br /></p><p>What if most forms (and data submitted to these forms) are small, and only use a few of the columns, there&#39;ll be wasted space. That led to another IRC quip, &quot;Why are newbies always afraid of wide database tables???&quot; Memory is cheap, and queries on wide tables are as fast as anything. </p><p>It turns out this approach offers some wonderful advantages. I can use the full ActiveRecord finder&#39;s code, all the way down to the generated SQL. Provided I scope <em>find</em>s with :include =&gt; &quot;dynamic_rows&quot;, then in <em>find_by_sql</em>, I can process the SQL string substituting (e.g. gsub) the dynamic attribute names with &quot;dynamic_rows.#{column_name}&quot;  </p><p>Voila! </p><p>Now DynamicRecord supports any of the find condition formats (hash, string, array), as well as sort :order, :group, even :select. It also means that we can support any SQL the app passes, say via find_by_sql, and the app can use attribute names as though they&#39;re in the model&#39;s static table; we&#39;ll map them to the dynamic columns.</p><p>So, presently the architecture of my DynamicRecord roughly looks like this:</p><p align=""center"">-----------------------------------------<br />thin DynamicRecord layer<br />-----------------------------------------</p><p align=""center"">ActiveRecord base layer</p><p align=""center"">----------------------------------------</p><p align=""center"">thin intercept of generated SQL</p><p align=""center"">-----------------------------------------</p><p align=""center"">ActiveRecord connection layer </p><div align=""center"">-----------------------------------------</div><p align=""left"">&nbsp;</p><p align=""left"">&nbsp;</p>",linoj,7674,42,rails,"ActiveRecord,DynamicRecord",Choosing_a_Schema_for_Dynamic_Records
156,"Storing Lists in Models","Here's a way to let model attributes store an array or hash",3,1200688692,9,,1,"<p>Suppose you want to store an array or hash in a single database field.</p><h2>Table</h2><p>The database table field should be a :text type. (It could be :string but be very careful, the total size of the serialized list can&#39;t be more than 255 characters.) So the migration might look like</p><pre>create_table :foos do |t|</pre><pre>  t.column :list, :text</pre><pre>end</pre><p>And make a corresponding foo.rb ActiveRecord model </p><pre>class Foo &lt; ActiveRecord::Base</pre><pre>end </pre><h2>Save </h2><p> Now you can create instances of the model, and assign values to list. </p><pre>@foo = Foo.new</pre><pre>@foo.list = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</pre><pre>@foo.save </pre><p> If you look in the database, you&#39;ll see the AR has serialized it into a YAML string</p><pre>&quot;--- \n- a\n- b\n- c\n&quot;</pre><h2>Accessors</h2><p>When you find a Foo record, the list is still in yaml format.</p><pre>@bar = Foo.find(:first)</pre><pre>@bar.list # =&gt;  &quot;--- \n- a\n- b\n- c\n&quot;</pre><p>Thats not exactly what we want! So write an accessor in the model,</p><pre>def list</pre><pre>  if read_attribute(:list).is_a? String </pre><pre>    YAML.load(read_attribute(:list)</pre><pre>  else</pre><pre>    read_attribute(:list)</pre><pre>  end</pre><pre>end</pre><h2>Validation</h2><p>You also might want to validate the attribute is the proper type. So in the model you could add</p><pre>def validate</pre><pre>  unless list.is_a? Array</pre><pre>    errors.add(:list, &quot;must be an array&quot;)</pre><pre>  end</pre><pre>end</pre><p>&nbsp;</p><p>&nbsp;</p>",linoj,149,42,rails,ActiveRecord,Storing_Lists_in_Models
155,"Getting Started with Story Runner","Here's a short how-to, cobbled together from various other articles, emails, and generous help on #rspec. Consider this a stop-gap until documentation is up on the Rspec site.",3,1199718523,9,,2,"<h2>1. Decide a directory structure and fill out helper.rb<br /></h2><p>Presently there isn&#39;t a stories generator or established conventions for arranging your directories. I create a stories/ subfolder that contains subfolders for each set of features or parts of the site that I&#39;m storying.<br /><br />stories/<br />├─── steps/<br />│   └─── bar_steps.rb<br />├─── stories/<br />│   ├─── foo/<br />│   │  ├─── a_foo_story<br />│   │  ├─── a_foo_story.rb<br />│   │  ├─── another_foo_story<br />│   │  └─── another_foo_story.rb</p><p>├───  all.rb<br />└─── helper.rb<br /></p><p>The helper.rb file needs some help finding your stuff. Here&#39;s how I&#39;ve fleshed it out. </p><p><em>File: stories/helper.rb:</em><br /></p><pre>ENV[&quot;RAILS_ENV&quot;] = &quot;test&quot;<br />require File.expand_path(File.dirname(__FILE__) + &quot;/../config/environment&quot;)<br />require &#39;spec/rails/story_adapter&#39;</pre><pre>Dir[&#39;stories/steps/**/*.rb&#39;].each do |steps_file|<br />   require steps_file<br />end<br /><br /></pre><pre># add extra include&#39;s and helper methods here<br />include FixtureReplacement</pre><h2>2. Write a short text story</h2><p>This is just an example, of course. </p><p>File: stories/stories/users/a_user_logs_in<br /></p><pre>Story: a user logs in</pre><pre>    As a user on the site</pre><pre>    I log in</pre><pre>    So I can do cool stuff</pre><pre><br />Scenario: I log in and see a welcome message</pre><pre>    Given a registered user John</pre><pre>    When I log in as John</pre><pre>    Then the browser should show &quot;Welcome John!&quot;</pre><h2>3. Write an rb script for the story<br /></h2><p>File: stories/stories/users/a_user_logs_in.rb<br /></p><pre>require File.join(File.dirname(__FILE__), &quot;../../helper&quot;)</pre><pre><br />with_steps_for :misc do</pre><pre>   run File.expand_path(__FILE__).gsub(&quot;.rb&quot;,&quot;&quot;), :type =&gt; RailsStory</pre><pre>end<br /></pre><p>For other stories, just copy this file, and add/change the steps  <br />groups as required. The rest of the file is unchanged (it gets the  <br />text story filename from its own name.)<br /><br />And run it:<br /></p><pre>$ ruby stories/stories/users/a_user_logs_in.rb<br /></pre><p>should show 1 scenarios: 0 succeeded, 0 failed, 1 pending<br /></p><h2>4. Code the Steps<br /></h2><p>To start, I put all my steps into a &quot;miscellaneous&quot; steps file until  <br />patterns emerge when I&#39;ll separate them out into different steps files<br /><br />File: stores/steps/misc_steps.rb<br /></p><pre>steps_for(:misc) do</pre><pre>  Given &quot;a registered user $login&quot; do |login|</pre><pre>    @user = create_user( :login =&gt; login )</pre><pre>  end</pre><pre><br />  When &quot;I log in as $login&quot; do |login|</pre><pre>    post_via_redirect &#39;/login&#39;, :login =&gt; login, :password =&gt; &#39;secret&#39;</pre><pre>    response.should be_success</pre><pre>    session[:user].should == @user.id</pre><pre>  end</pre><pre><br />  Then &quot;the browser should show $text&quot; do |text|</pre><pre>    response.should have_text(text)</pre><pre>  end<br />end<br /></pre><p>And run it<br /></p><pre>$ ruby stories/stories/users/a_user_logs_in.rb<br /></pre><p>or<br /></p><pre>$ ruby stories/all.rb</pre><p>&nbsp;</p>",linoj,3717,42,rails,"story runner,rspec",Getting_Started_with_Story_Runner
154,"In-Memory Database for Testing Doesnt Buy Much","I'd read that I could expect significant speed improvements using Sqlite in-memory database during testing. But that's not what I found.",3,1198463684,9,,2,"<h2>Installation </h2><p>First, I&#39;ll walk through the installation steps. </p><p>My iMac with OSX 10.4 already has sqlite3 installed, although I appear to have installed it at some point with macports because doing &quot;which sqlite3&quot; tells me its in /opt/local/bin/sqlite3. If you don&#39;t have it, get it (see links in the references below).</p><p>Next install the sqlite3-ruby gem</p><pre>$ sudo gem install sqlite3-ruby</pre><p>and choose the most recent (2. sqlite3-ruby 1.2.1 (ruby))</p><p>Then, install the memory_test_fix plugin. This handy little beast builts the sql tables in your memory db based on your current schema.rb file </p><pre>$ script/plugin install http://topfunky.net/svn/plugins/memory_test_fix </pre><p>Lastly, edit the database.yml file so the test database uses the sqlite3 adapter:</p><pre>test:<br />  adapter: sqlite3<br />  database: &quot;:memory:&quot;<br />  #verbosity: quiet<br /></pre><p>You can uncomment the last line once you&#39;re sure things are working. </p><p>That&#39;s it. Run you tests, and they&#39;ll operate from the in-memory database.</p><h2>Results</h2><p>I use Rspec for my testing. My present test suite consists of 883 examples.  Here are the timing results:</p><table border=""1"" cellpadding=""3"" style=""border-width: 1px""><tbody><tr><td> </td><td> # Examples<br /></td><td> MySQL 5<br /></td><td>Sqlite3 :memory:<br /> </td></tr><tr><td>rake spec </td><td> 883</td><td>32.15 seconds </td><td> 32.05 seconds<br /></td></tr><tr><td>rake spec:models </td><td> 290</td><td>11.26 seconds </td><td> 11.22 seconds<br /></td></tr><tr><td>stories/all.rb </td><td>10 </td><td>9.16 seconds </td><td>9.53 seconds </td></tr></tbody></table><p>I only see 1/10th of a second difference! Actually, for the most part only my model specs use the database anyway. My controller specs all use mocks and stubs. With the Plain Text Stories, the in-memory db was actually slightly slower. Go figure.<br /></p><p>Furthermore, I got a couple of errors in my specs when running with sqlite that aren&#39;t there with mysql. I&#39;m not doing anything obviously database dependent (for example one of them is a validates_uniqueness_of with :case_sensitive =&gt; false). For the timing tests, I commented out the failing tests so that wouldn&#39;t be a factor. </p><h2>Conclusion</h2><p>As it was, I was hesitant to use a different database for testing than for development and production (in my case MySQL). Now I can just cross this idea off my list. </p><h2>References</h2><ul><li> http://nubyonrails.com/articles/san-francisco-sqlite3-memory-tests-asteroids </li><li> http://www.mathewabonyi.com/articles/2006/11/26/superfast-testing-how-to-in-memory-sqlite3  </li><li> http://topfunky.net/svn/plugins/memory_test_fix/README</li></ul><p>&nbsp;</p><p>&nbsp;</p>",linoj,3154,42,rails,"testing,sqlite3,database",In-Memory_Database_for_Testing_Doesnt_Buy_Much
153,"Url For Subdomains","You can override the url_for options to set subdomains in named routes.",3,1197413178,9,,2,"<p>Using subdomains to find objects in actions is as easy as nested resources. Whereas a nested resource might expect a path like &quot;/foo/:foo_name/bars/:id&quot; so in the BarsController you add a before_filter </p><pre>class BarsController &lt; ApplicationController<br /></pre><pre>  before_filter :find_foo</pre><pre>  def find_foo</pre><pre>    @foo = Foo.find_by_name(params[:foo_name]) if params[:foo_name]</pre><pre>  end</pre><pre>  ...</pre><p>But instead if you want to use a url like &quot;http://foodoo.mysite.com/bars/:id&quot;, you can rewrite find like so:</p>  <pre>  def find_foo</pre> <pre>    @foo = Foo.find_by_name( self.request.subdomains[0] ) </pre> <pre>  end</pre><p>Cool.</p><p>In the latter case, you don&#39;t need to specify a nested resource in routes.rb at all. That is, routes.rb doesn&#39;t need to know anything about the subdomain, you just map.resources :bar , giving you named routes like bar_url(@bar) (=&gt; http://www.mysite.com/bars/123) and bar_path(@bar) (=&gt; /bars/123).<br /></p><p>Now, how do you force the named routes to set the subdomain? Taken further, lets say some links in your app will use the foo.mysite.com host, and others should use www.mysite.com. Handle this by overriding the default_url_options to set the :host option. For example, in controllers/application.rb</p><pre>  def default_url_options( options={} )</pre><pre>    subdomain = (@foo.nil? or options[:controller] == &#39;pages&#39;) ? &#39;www&#39; : @foo.name</pre><pre>    { :host =&gt; &quot;#{subdomain}.#{request.domain}&quot; }</pre><pre>  end</pre><p>Now bar_url(@bar) will generate &quot;http://<em>fooname</em>.mysite.com/bars/123&quot;, provided you&#39;d defined an instance variable @foo beforehand. But pages_url(@page) will generate &quot;http://<em>www</em>.mysite.com/pages/456&quot;</p><p>Note bar_path (vs bar_url) is used for relative urls, and :host is ignored. So if you know a link can be relative to the host of the current page, use _path, but if you know it is different or unsure, use the _url version to include the host name in the generated url.</p><h2>Caveats</h2><p>After using this technique for a day or two I&#39;ve run into some problems. There appear to be cases where default_url_options is not used at all, so my subdomain was not getting set.</p><p>Usually it&#39;s fine calling foo_url from a view template or a controller; it did not work when calling foo_url from a helper method. Digging further I see there are two versions of url_for in rails:</p><p>In actionpack/lib/action_controller/url_rewriter.rb url_for does</p><pre>options = self.class.default_url_options.merge(options)</pre><p>In actionpack/lib/action_view/helpers/url_helper.rb does NOT call default_url_options</p><p>Thus depending where you call bar_url, you may or may not get the subdomain replaced. The risks of trying to play under the hood of a speeding locomotive...<br /></p><h2>Solution </h2><p>But, I also realized I usually need my links to be relative to the current subdomain, and only some very specific cases when it&#39;s changing. So, it&#39;d be ok to be explicit in these cases rather than the general url_for approach. Now, I just do this:</p><p>in application.rb</p><pre>  def www_url( path=&#39;&#39; )<br />    subdomain_url( &#39;www&#39;, path )<br />  end<br />  <br />  def subdomain_url( subdomain, path=&#39;&#39; )<br />    &quot;http://#{subdomain}.#{request.domain}#{request.port_string}#{path}&quot;<br />  end<br /></pre><p>&nbsp;</p><p>To force a link to be the www subdomain, </p><pre>&lt;%= link_to &quot;About this site&quot;, www_url( home_path )) %&gt;</pre><p>To link to a specific subdomain,</p><pre>&lt;%= link_to &quot;Your account&quot;, subdomain_url(@account.name, foo_path)) %&gt;</pre><p>Word. </p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,3783,42,rails,"subdomains,routes",Url_For_Subdomains
152,"Specing Shared Controller Methods","A way to isolate and spec methods that are shared by controllers, and live in application.rb.",3,1196407906,9,,0,"<p>When spec&#39;ing a controller you include examples for each of its behaviors. When controllers share behaviors, rspec provides a way to define <a href=""http://rspec.rubyforge.org/documentation/index.html"">shared-behaviors</a>. </p><p>It gets a little complicated how to write specs for non-action controller actions, like before_filters. Thanks to <strong>pergesu</strong> who created an example for me during our conversation about this in #rspec.  http://pastie.caboo.se/123626</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,0,42,rails,,Specing_Shared_Controller_Methods
151,"Running rspec after you deploy","How to configure Capistrano for running Rspec and Story Runner after a ""cap deploy""",3,1195592204,9,,2,"<p>OK, so you&#39;ve got Capistrano going for deploying you app to a server. Now you should also run your tests there just to ensure everything&#39;s A-OK. Here&#39;s what I did.</p><h2>deploy:spec task </h2><p>The first thing was to make server-specific versions of several files, namely:</p><ul><li>config/database.yml.deploy</li><li>config/environments/production.rb.deploy</li><li>config/environments/test.rb.deploy</li></ul><p>The database.yml.deploy is your server-side database.yml file. It just needs a production: and test:  configurations (not development:), with the database name and credentials for access on the server.</p><p>Optionally, you can also create server-specific environment files. I did this because, for example, my local dev machine uses smtp for email while the server I use sendmail.</p><p>Some people just make these in the shared/ directory on the server rather than deploy them, but I prefer to keep all my files in the Subversion repos, even these. </p><p><em>Note: I originally tried to avoid this multiple conf file thing by adding a new environment called &quot;staging&quot;, which would be my test environment on the server. But this ran into several issues, basically going against the grain where some plugins assumed just the 3 standard environment names (including rspec itself and fixture_replacement). Even as I worked through these issues making some custom changes, it still gave me problems so I backed out.</em></p><p>Next, we add a few custom tasks to the Capfile,</p><ul><li>task :after - copy the server-specific files</li><li>task :spec - run rake spec on the server</li><li>task :story - run stories/all.rb on the server</li></ul><p>Here&#39;s the code:</p><pre>namespace :deploy do</pre><pre>  task :after, :roles =&gt; :app do</pre><pre>    # config on server</pre><pre>    run &quot;cd #{release_path}/config              &amp;&amp; cp -f database.yml.deploy database.yml&quot;</pre><pre>    run &quot;cd #{release_path}/config/environments &amp;&amp; cp -f production.rb.deploy production.rb&quot;</pre><pre>    run &quot;cd #{release_path}/config/environments &amp;&amp; cp -f test.rb.deploy test.rb&quot;</pre><pre>  end</pre><pre>  </pre><pre>  task :spec, :roles =&gt; :app do</pre><pre>    run &quot;cd #{current_path} &amp;&amp; rake db:test:prepare RAILS_ENV=production&quot; # copy schema from production rather than development</pre><pre>    run &quot;cd #{current_path} &amp;&amp; rake spec RAILS_ENV=production&quot;</pre><pre>  end</pre><pre>  </pre><pre>  task :story, :roles =&gt; :app do</pre><pre>    run &quot;cd #{current_path} &amp;&amp; rake db:test:prepare RAILS_ENV=production&quot;</pre><pre>    run &quot;cd #{current_path} &amp;&amp; ruby stories/all.rb&quot;</pre><pre>  end</pre><pre>end</pre><pre><br />after &quot;deploy:finalize_update&quot;, &quot;deploy:after&quot;</pre><p> Note, with &quot;RAILS_ENV=production&quot; we tell rspec to setup the current db schema from the production environment, rather than the default development one. Its not actually running any tests against the production datatbase (although be sure you have backups till you know for sure!)</p><p>Now, when you &quot;cap deploy&quot; it&#39;ll copy the *.deploy files to their useful names. And you can run your specs with</p><pre>$ cap deploy:spec</pre><pre>$ cap deploy:story </pre><h2>Getting the Results</h2><p>The next step is to generate the output of the runs into a file that can be viewed in a browser.</p><p>There&#39;s probably a better way to do this but I just keep a server-side version of spec.opts</p><ul><li>spec/spec.opts.deploy</li></ul><p> In particular, my specifies html output format,</p><pre>--format<br />html<br />--loadby<br />mtime</pre><p>And when we run the tests, we&#39;ll pipe the output to files in a private directory. That directory should be protected from prying eyes. So we create a file in the shared directory, lets say app/shared/private.htaccess file like this:</p><pre>AuthUserFile /path/to/app/public/private/.htpasswd<br />AuthGroupFile /dev/null<br />AuthName &quot;Protected files&quot;<br />AuthType Basic<br /><br />&lt;Limit GET&gt;<br />require valid-user<br />&lt;/Limit&gt; </pre><p>(in my case its </p><pre>AuthUserFile /home/foobar/www/public/private/.htpasswd<br /></pre><p>where www is a symlink to ~/apps/myapp/current/public) </p> <p>And generate a .htpasswd file, something like this </p><pre>    $ cd ~/apps/myapp/shared</pre><pre>    $ htpasswd -c .htpasswd admin</pre><pre>    New password: </pre><pre>    Re-type new password: </pre><pre>    Adding password for user admin</pre><p>&nbsp;</p><p>Thus, the Capfile changes to</p><pre>namespace :deploy do</pre><pre>  task :after, :roles =&gt; :app do</pre><pre>    # config on server</pre><pre>    run &quot;cd #{release_path}/config              &amp;&amp; cp -f database.yml.deploy database.yml&quot;</pre><pre>    run &quot;cd #{release_path}/config/environments &amp;&amp; cp -f production.rb.deploy production.rb&quot;</pre><pre>    run &quot;cd #{release_path}/config/environments &amp;&amp; cp -f test.rb.deploy test.rb&quot;</pre><pre>    </pre><pre>    # spec on server</pre><pre>    run &quot;cd #{release_path}/spec &amp;&amp; cp -f spec.opts.deploy spec.opts&quot;</pre><pre>    run &quot;cd #{release_path} &amp;&amp; mkdir private&quot;</pre><pre>    run &quot;cd #{release_path} &amp;&amp; chmod 755 private&quot;</pre><pre>    run &quot;cd #{release_path}/private &amp;&amp; cp -f #{shared_path}/private.htaccess .htaccess&quot;</pre><pre>    run &quot;cd #{release_path}/private &amp;&amp; cp -f #{shared_path}/private.htpasswd .htpasswd&quot;    </pre><pre>    </pre><pre>    # symlink the ActiveScaffold frontend</pre><pre>    run &quot;cd #{release_path}/vendor/plugins/active_scaffold/frontends &amp;&amp; ln -s #{release_path}/app/views/a_s_frontends/tablenav .&quot; </pre><pre>  end</pre><pre>  </pre><pre>  task :spec, :roles =&gt; :app do</pre><pre>    run &quot;cd #{current_path} &amp;&amp; rake db:test:prepare RAILS_ENV=production&quot; # copy schema from production rather than development</pre><pre>    run &quot;cd #{current_path} &amp;&amp; rake spec RAILS_ENV=production &gt;public/private/specs.html&quot;</pre><pre>  end</pre><pre>  </pre><pre>  task :story, :roles =&gt; :app do</pre><pre>    run &quot;cd #{current_path} &amp;&amp; rake db:test:prepare RAILS_ENV=production&quot;</pre><pre>    run &quot;cd #{current_path} &amp;&amp; ruby stories/all.rb &gt;public/private/stories.txt&quot;</pre><pre>  end</pre><pre>end</pre><pre><br />after &quot;deploy:finalize_update&quot;, &quot;deploy:after&quot;</pre><p>Now when you run</p><pre>$ cap deploy:spec</pre> <pre>$ cap deploy:story </pre> <p>You can get the results by pointing your browser to </p><pre>http://www.yoursite.com/private/specs.html</pre><pre>http://www.yoursite.com/private/stories.txt </pre><p>NOTE, I believe html output is coming soon to story runner.</p><p>One more NOTE, I havent gotten the htpasswd to work under my mongrel server deployment. When I do I&#39;ll change this message and correct this article. </p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,4664,42,rails,"capistrano,rspec,story runner",Running_rspec_after_you_deploy
150,"Misc rails security notes",,3,1194289995,9,,0,"<p>&nbsp;</p><p>http://www.rorsecurity.info/ruby-on-rails-security-cheatsheet/</p><p>&nbsp;</p> <p>overview of security http://www.quarkruby.com/2007/9/20/ruby-on-rails-security-guide</p> <p>&nbsp;</p> <p>http://manuals.rubyonrails.com/read/chapter/40</p> <p>&nbsp;</p> <p>dont trust anything in params, or cookies</p> <p>can trust session</p> <h4>sql injection</h4>   <p>eg BAD: tasks = Task.find(:all, :condition =&gt; &quot;name LIKE &#39;%{params[:query]}%&#39;&quot;) </p> <pre>tasks = Task.find(:all, :condition =&gt; [&quot;name LIKE ?&quot;, &#39;%&#39; + params[:query] + &#39;%&#39;]) </pre> <h4>mass assignment</h4> <p> use this in model to deny assignment of some attribute<br /></p> <pre>attr_protected :admin</pre> <p>or better, say just which attributes are assignable<br /></p> <pre>attr_accessible :name </pre> <p>&nbsp;</p>  ",linoj,0,42,rails,,Misc_rails_security_notes
149,"git references","
",3,1194235739,9,,0,"<p>&nbsp;</p><p>Using Git to Manage and Deploy your Rails Apps, (git and capistrano screencast), http://jointheconversation.org/railsgit <br /></p><p>&nbsp;</p>",linoj,0,42,rails,,git_references
148,"Deploying with Capistrano from a local svn","A quick ""how-to"" deploy a Rails based site with Capistrano 2.0 from a local svn repository using the capistrano_rsync_with_remote_cache gem
",3,1193753286,9,,2,"<p><a href=""http://www.capify.org/"">Capistrano</a> is a Ruby (on Rails, but not necessarily) utility for deploying applications from development machines to servers. It&#39;s designed to check out the code from an online repository (normally Subversion - svn), and make a fresh production directory on the server and switch it live. </p><p>When your repos is local and not accessible from the server, Capistrano has limited support for this scenario. Using &quot;set :deploy_via, :copy&quot; checks out everything into a temporary directory, zips it up (tgz), and copies the entire thing every time you deploy. Not very nice, especially on my slow (satellite) connection, and especially if only a few files change from one deploy to the next.</p><p>There are a number of recipes written up to utilize <a href=""http://samba.anu.edu.au/rsync/"">rsync</a>  in conjunction with Capistrano for incremental deployments. rsync is a command-line file synchronization utility probably already distributed with your (*nix) US. (That&#39;s &quot;r&quot; as in &quot;remote&quot;, not &quot;Ruby&quot;, by the way).  (see the <a href=""http://groups.google.co.uk/group/capistrano"">Capistrano mailing list</a> ). </p><p>The best solution I&#39;ve found is the <a href=""http://trac.extendviget.com/lab/wiki/CapistranoRsyncWithRemoteCache"">capistrano_rsync_with_remote_cache</a>  gem written by Mark Cornick at Viget Labs.</p><p>With this gem, when you do &quot;cap deploy&quot; it will check out the latest version from svn into the .rsync_cache/ directory, and use rsync to copy only those  files that have changed over to the server. On the server side, a cache is maintained in the shared/ directory, which is then copied to the current production copy of your project. <br /></p><h2>Get Capistrano 2 Going with :copy</h2><p>From your Rails project root, </p><pre>  $ sudo gem install -y capistrano<br />  $ capify .<br /></pre><p>Edit config/deploy.rb, and set the variables as needed, including,</p><pre>set :application, &quot;myapp&quot;<br />set :domain, &quot;www.myapp.com&quot;<br />set :repository, &quot;file:///Users/myname/#{application}/trunk&quot;</pre><pre>set :deploy_via, :copy</pre><p>If necessary you may also need to add or modify tasks in the Capfile (perhaps as recommended by your hosting service). </p><p>To setup the directories on the server (needed once and only once):<br /></p><pre>  $ cap deploy:setup</pre><p>To deploy the entire project (eg first time): </p><pre>  $ cap deploy:cold</pre><p>And to deploy updates:<br /></p><pre>  $ cap deploy</pre><p>Unfortunately, as explained above, the deploy task is not much different from the deploy:cold one when using :copy </p><h2>Get Capistrano Going with :rsync_with_remote_cache</h2><h2> </h2><p>The gem&#39;s docs are pretty thin how to install and get it going. So here&#39;s some more details. Check out and build the gem locally, go to a temporary directory and,<br /></p><pre>  $ mkdir CapistranoRsyncWithRemoteCache</pre><pre>  $ svn co http://svn.extendviget.com/lab/trunk/gems/capistrano_rsync_with_remote_cache</pre><pre>  $ cd capistrano_rsync_with_remote_cache/</pre><pre>  $ rake package</pre><pre>  $ cd pkg</pre><pre>  $ sudo gem install capistrano_rsync_with_remote_cache-2.1</pre><p> Then edit your deploy.rb file, changing :deploy_via :copy to:</p><pre>set :deploy_via, :rsync_with_remote_cache</pre><p>It also make sense to (optionally) add this line so the .svn sub-directories are not deployed: </p><pre>set :rsync_options, &#39;-az --delete --exclude=.svn --delete-excluded&#39;</pre><p>Now, &quot;cap deploy&quot; checks out to .rsync_cache, and copies only the changed files over to the server. </p><p>&nbsp;</p>",linoj,6744,"41,42","webdev,rails",,Deploying_with_Capistrano_from_a_local_svn
147,"Rspec notes",,3,1192475749,9,,0,"<h2>To Mock or Not to Mock? </h2><p>I know there&#39;s debate about this, but in general I use the db in my model specs; mock in my controller specs; and the db in stories. As Pat Maddox said in a recent email, &quot;Code from one layer should depend only on the interface of objects in the lower layer. When you&#39;re dealing with objects in the same layer, it&#39;s useful to use real implementations because it aids refactoring a great deal.&quot;</p><p>On the other hand, mocking can get quite tedious, and to be honest, lately I&#39;ve found myself not mocking my controllers, and using object factories instead. srogers warns me don&#39;t do that, &quot;because it dorks up your rcov results, among other things, and it&#39;s much easier to fix things if you hold something constant, BDD isn&#39;t just about creating a series of test wickets to ram everything through&quot;. Am I a heretic or fool? </p><p>The fixture_replacement plugin is very handy for making object factories. See http://railsnewbie.com/files/fixture_replacement_demo.mov , and http://thmadb.com/public_svn/plugins/fixture_replacement which is based on this article http://www.dcmanges.com/blog/38</p><p>&nbsp;</p><p>&nbsp;</p><pre>proxie: you mock the association proxy<br />​​[11:05p] priidu joined the chat room.<br />[11:05p] ​pergesu​​: ​@comments_proxy = stub(&quot;comments_proxy&quot;, :build =&gt; @mock_comment)<br />​[11:05p] pergesu: @mock_post.stub!(:comments).and_return @comments_proxy<br />​[11:05p] pergesu: or you use luke redpath&#39;s new demeter&#39;s revenge plugin (which I haven&#39;t looked at)<br />​[11:06p] pergesu: or you don&#39;t use build at all, and instead move the method to the post class<br />​[11:06p] pergesu: comment = post.build_comment params[:comment]<br />​[11:06p] pergesu: comment.save </pre><pre> </pre><pre> </pre><p>TESTING CONTROLLER METHODS</p><p>http://pastie.caboo.se/123626</p><pre>## foo_controller_spec.rb<br />require File.dirname(__FILE__) + &#39;/../spec_helper&#39;<br /><br />describe FooController, &quot; filtering the bar parameter&quot; do<br />  before(:each) do<br />    FooController.class_eval do<br />      define_method(:foo) { render :text =&gt; &quot;Made it past the filter&quot; }<br />    end<br />  end<br />  <br />  it &quot;should pass when bar=2&quot; do<br />    get :foo, :bar =&gt; &quot;2&quot;<br />    response.should have_text(&quot;Made it past the filter&quot;)<br />  end<br />  <br />  it &quot;should not pass when bar=1&quot; do<br />    get :foo, :bar =&gt; &quot;1&quot;<br />    response.should have_text(&quot;Didn&#39;t pass the filter&quot;)<br />  end<br />  <br />  after(:each) do<br />    FooController.class_eval { undef_method :foo }<br />  end<br />end<br /><br />describe FooController, &quot; requesting / using GET&quot; do<br />  it &quot;should filter for bar&quot; do<br />    controller.should_receive(:check_for_bar)<br />    get :index<br />  end<br />  <br />  it &quot;should render &#39;this is the index&#39;&quot; do<br />    get :index<br />    response.should have_text(&quot;this is the index&quot;)<br />  end<br />end<br /><br />## foo_controller.rb<br />class FooController &lt; ApplicationController<br />  before_filter :check_for_bar<br />  <br />  def index<br />    render :text =&gt; &quot;this is the index&quot;<br />  end<br />  <br />  private<br />  def check_for_bar<br />    render :text =&gt; &quot;Didn&#39;t pass the filter&quot; if &quot;1&quot; == params[:bar]<br />  end<br />end<br /> </pre>",linoj,0,41,webdev,"rspec,mocks",Rspec_notes
146,"Misc Server and Optimization Notes",,3,1191962141,9,,0,"<p>&nbsp;</p><hr /><p>&nbsp;</p><p>Tuesday, October 9, 2007<br /><br />linojon<br />4:16<br />seen this plugin? http://developer.yahoo.com/yslow/<br />windaction feels freekin fast, but it gets an F :|<br />is there a lighty setting to gzip components?<br /><br />planting_bomb<br />4:22<br />lol an f<br /><br />linojon<br />4:22<br />actually a D, (after i logged out as admin)<br /><br />planting_bomb<br />4:24<br />go buy the book <br />stupid ads<br />your site IS fast, its just not optimized -<br />anyways the thing about compression is.... yes, lighty will compress static files<br /><br />linojon<br />4:24<br />lol yeah, i forgot theres a difference<br /><br />planting_bomb<br />4:24<br />js, css, etc<br />php is separate tho, cuz lighty hands it off to the fastcgi mod<br />you can enable compression in your php.ini for that but supposedly some old browsers wont deal with it right, not sure<br />in ini:<br />zlib.compression = On<br />zlib.output_handler = On<br />for lighty:<br /># compress.cache-dir = &quot;~/var/cache/www.foo.com/&quot;  <br /># compress.filetype = (&quot;text/plain&quot;,&quot;text/html&quot;,&quot;text/javascript&quot;,&quot;text/xml&quot;,&quot;text/css&quot;)<br />plus you&#39;ll need to load mod_compress at the top<br /><br />linojon<br />4:30<br />they also suggest adding an Expires header to all the images in my theme<br />??<br /><br />planting_bomb<br />4:31<br />hehe<br />there&#39;s also mod_expire<br /></p><hr /><br /><p><br /><br /></p>",linoj,0,38,xamp,,Misc_Server_and_Optimization_Notes
145,"Misc CSS and HTML and JS references",,3,1191958907,9,,0,"<p>&nbsp;</p><h2>Buttons</h2><p> http://particletree.com/features/rediscovering-the-button-element/</p><p> http://famfamfam.com/lab/icons/silk/</p><p>http://www.deepcalm.com/writing/real-buttons-in-rails-a-route-to-sexy-forms</p><p>&nbsp;</p><h2>Javascript Navigation</h2><h4>back </h4><pre>document.observe(&#39;contenloaded&#39;, function(){<br /> add_history(); <br /> alert(&#39;ok&#39;);<br />}); <br /><br /><br />function add_history(){<br />  var history = document.createElement(&#39;a&#39;);<br />  history.id = &#39;history&#39;;<br />  $(&#39;navigation&#39;).appendChild(history);<br />  $(&#39;history&#39;).setAttribute(&#39;href&#39;,&#39;javascript:history.back()&#39;);<br />  $(&#39;history&#39;).innerHTML = &#39;Back&#39;;<br />}</pre><p>&nbsp;</p><p>To replace target=&quot;_blank&quot; for validation, use javascript (ref http://www.texastar.com/tips/2004/target_blank.shtml) </p><p>&nbsp;</p><pre class=""specialBox"">    &lt;a href=&quot;http://www.TexaStar.com&quot; <br />       onclick=&quot;window.open(this.href); return false;&quot;<br />       onkeypress=&quot;window.open(this.href); return false;&quot;&gt;TexaStar&lt;/a&gt; </pre><p>&nbsp;</p><h3>Image Expander</h3><p>http://highslide.com/</p><p>&nbsp;</p>",linoj,0,41,webdev,,Misc_CSS_and_HTML_and_JS_references
144,"Can people with ADHD procrastinate?","An interesting question...",3,1191868126,9,,2,"<p>I don&#39;t have an answer. </p><p>But the fact that I&#39;m writing this when I should be working, what does that say?</p><p>&nbsp;</p>",linoj,2823,39,musings,,Can_people_with_ADHD_procrastinate%3F
142,"Beginners Guide to Rspec on Story Runner","I wished for a step by step How To get started with Story Runner, and had to write it myself.",3,1190736048,9,,2,"<p>Story Runner is a nice behavioral integration &quot;test&quot; (er, uh, spec) tool that been incorporated into Rspec and can be used in Ruby on Rail projects. Its not officially released with Rspec but is available in trunk.<br /></p><h4>References:</h4><p>    http://rspec.rubyforge.org - Rspec home</p><p>     http://rubyforge.org/pipermail/rspec-devel/2007-August/003756.html  - David Chelimsky&#39;s announcement </p><p>     http://evang.eli.st/blog/2007/9/1/user-stories-with-rspec-s-story-runner - good tutorial<br /></p><p>     http://www.nabble.com/Getting-Started-with-Story-Runner-t4485820.html - a helpful discussion thread </p><p>     http://dannorth.net/whats-in-a-story - explains the structure of a &quot;story&quot;<br /></p><p>     http://pastie.caboo.se/92472  - a famous pastie (fame is relative  :) </p><p>     http://dannorth.net/2007/06/introducing-rbehave - where it all started </p><h4>Installation </h4><p>Assuming you already have a Rails app going, install Rspec from trunk:</p><pre>$ ruby script/plugin install svn://rubyforge.org/var/svn/rspec/trunk/rspec<br />$ ruby script/plugin install svn://rubyforge.org/var/svn/rspec/trunk/rspec_on_rails <br />$ script/generate rspec <br /></pre><p>Create a directory in your web root named &quot;stories/&quot;</p><p>Create a file stories/story_helper.rb with the following:</p><pre>ENV[&quot;RAILS_ENV&quot;] = &quot;test&quot;<br />require File.expand_path(File.dirname(__FILE__) + &quot;/../config/environment&quot;)<br />require &#39;spec/rails/story_adapter&#39; <br /></pre><p>Each story script is an .rb file with the following as its first line:</p><pre>require File.join(File.dirname(__FILE__), &quot;story_helper&quot;) </pre><p>To run a story, just run it directly:</p><pre>$ ruby story/mystory.rb </pre><h4>Thinking</h4><p>From Dan North&#39;s article, the general idea is you spec out a conversation about a feature or requirement. There&#39;s an action title, a text narrative, and then a set of scenarios. The scenario should be described in terms of Givens, Events and Outcomes (given/when/then...) </p><p>The structure is basically like this: </p><pre>Title (one line describing the story)</pre><pre><br />Narrative:</pre><pre>As a [role]</pre><pre>I want [feature]</pre><pre>So that [benefit]</pre><pre><br />Acceptance Criteria: (presented as Scenarios)</pre><pre><br />Scenario 1: Title</pre><pre>Given [context]</pre><pre>  And [some more context]…</pre><pre>When  [event]</pre><pre>Then  [outcome]</pre><pre>  And [another outcome]…</pre><pre><br />Scenario 2: … </pre><h4>A very simple first story</h4><p>The first thing I do when describing a site to someone is go to the home page, and being exploring from there. So, that seems like a legitimate first story to spec out. I create a file stories/anonymous_visitor.rb </p><pre>require File.join(File.dirname(__FILE__), &quot;story_helper&quot;)</pre><pre><br />Story &quot;Anonymous visitor to the site&quot;, %{</pre><pre>  As an anonymous visitor</pre><pre>  I want to visit public pages</pre><pre>}, :type =&gt; RailsStory do</pre><pre>  </pre><pre>  Scenario &quot;Starts at home page and drills down&quot; do</pre><pre>    When &quot;visiting home page&quot; do</pre><pre>      get &quot;/&quot;</pre><pre>    end</pre><pre>    </pre><pre>    Then &quot;user should see home page&quot; do</pre><pre>      response.should render_template(&#39;base/home&#39;)</pre><pre>    end</pre><pre> </pre><pre>    When &quot;he clicks on the About link&quot; do<br />      get &quot;/about&quot;</pre><pre>    end</pre><pre> </pre><pre>    Then &quot;user should see the About page&quot; do </pre><pre>      response.should render_template(&#39;base/about&#39;)</pre><pre>    end </pre><pre>  end</pre><pre>end</pre><p> OK, maybe that&#39;s not so practical (and really should covered in the corresponding controller spec), at least you can make sure your stories are running and good to go. (And after all, Rails&#39; default unit test is simply <em>def test_truth; assert true;  end</em>)</p><p>But then I start building on that, either with more clauses, new scenarios, and/or starting another story file. What about a user logging in? then he should see different content. And when he creates a post, then... And... And, suddenly you&#39;re off and (story) running. </p><h4>Parameterized Scenario Clauses </h4><p>You can reuse scenario clauses, and pass parameters. For example, </p><pre>Scenario &quot;savings account is in credit&quot; do</pre><pre>    Given &quot;my savings account balance is&quot;, 100 do |balance|</pre><pre>      @savings_account = Account.new(balance)</pre><pre>    end</pre><pre>    And &quot;my cash account balance is&quot;, 10 do |balance|</pre><pre>      @cash_account = Account.new(balance)</pre><pre>    end</pre><p>Then the next scenario can reuse the Given clauses with different arguments,</p><pre>Scenario &quot;savings account is overdrawn&quot; do<br />    Given &quot;my savings account balance is&quot;, -20<br />    And &quot;my cash account balance is&quot;, 10</pre><p>Going one step further (as of today Oct  22 &#39;07), Rspec trunk introduces Plain Text Scenarios, which integrates parameters into the text. See http://blog.davidchelimsky.net/articles/2007/10/21/story-runner-in-plain-english  Doing so, stories become &quot;block-less&quot;-- it encourages you to put all your step clauses into separate Step Matcher methods, which means we can now eliminate all the quote and write truly plain text stories (!!). It&#39;s still experimental, but given the pace this stuff is moving, it may be mainstream by the time you read this!</p><pre>Scenario: savings account is in credit<br />    Given my savings account balance is 100<br />    And my cash account balance is 10</pre> <h4>Working with Stories </h4> <p>I&#39;ve found that writing stories (and their multiple scenarios) helps me think through how things should work (and not work) on the site. </p><p>When I implement a scenario, the &quot;Given&quot; clauses often correspond to models, which leads me to write a model spec, and then implement the model methods.</p><p>And perhaps some actions (especially POSTs that affect models or the session), so I spec their views and controllers. And implement them. </p><p>Usually by then I&#39;ve lost my context so I&#39;ll go back to the current story and see where I&#39;m at in the scenario. </p><p>The last Given is often a GET action (which provides visual context for the  upcoming When clause), so I go ahead and do its view and controller specs.</p><p>The &quot;When&quot; clause is the meat of the scenario. It is a controller action, and its spec gets done next, which often requires drilling down into other models, views, and helper methods.<br /></p><p>Then, the &quot;Then&quot; clauses tend to assert the response in a view. They&#39;ll probably also call model methods to check for results. They get spec&#39;d and implemented, and so on. </p><p>As the stories grow more complex, previously spec&#39;ed scenarios might be stuffed into the Given section of the next story. At that point I write reusable helper methods, which pulls the preconditions together, such as </p> <pre>Given &quot;a user is logged in and has created a post&quot; do<br />  user_is_logged_in_and_has_created_a_post<br />end  <br /></pre> <p>In stories, don&#39;t use mocks, stubs, or fixtures, as you want to exercise the whole stack. Instead I found the <a href=""http://thmadb.com/public_svn/plugins/fixture_replacement"">fixture_replacement plugin</a>  to be an extremely handy model factory. </p><p>One other thing, the clauses in a scenario may be in a specific order that makes sense from a story point of view, but not necessarily the order I want to implement. But (presently) story-runner just stops when it encounters a  pending (unimplemented) clause. I&#39;ve added this little method to my story_helper.rb</p><pre>def skip_pending(text=&#39;&#39;)<br />  puts &quot;    SKIP PENDING #{text}&quot;<br />end<br /></pre><p> which might be used like this:</p><pre>    And &quot;a welcome message is sent to user&quot; do</pre><pre>      skip_pending &quot;email notifications&quot;</pre><pre>    end</pre><p>&nbsp;</p> <p>&nbsp;</p>",linoj,13987,42,rails,"rspec,story runner",Beginners_Guide_to_Rspec_on_Story_Runner
141,"stateful authentication","I wanted user records in my app to have various statuses. Here's how I modified restful_authentication with acts_as_state_machine to accomplish this. I'll call it stateful_authentication",3,1190392818,9,,2,"<h4>Overview </h4><p>The idea is to enhance restful_authentication with additional user statuses.</p><ul><li>:passive - not authorized to log in, but known to the system, such as for mailing lists</li><li>:pending - user has registered but has not activated his account yet<br /></li><li>:active - user account is active, user can log in<br /></li><li>:suspended - user account suspended, not allowed to log in, can be re-enabled</li><li>:deleted - user id remains valid but account deleted, login name and email can be reused </li></ul><p>Passive users may have signed up on the system, given their email and name or whatever, but don&#39;t have the right to log in. Passive users can register later with login privileges.</p><p>An active user can log in. (As for roles, authorization is handled separately from authentication, see <a href=""postings/Authorization_in_Rails"">my earlier post</a> ). </p><p>Any user can be suspended by the administrator, for whatever reason. Suspended accounts can be re-enabled (un-suspended). </p><p>Keeping deleted user records is handy, for example, if some other objects such as a Comment references this user id, you can still retrieve some info about the poster even if he&#39;s no longer around. (A separate admin purge action can actually call destroy on deleted users). A deleted user will have its login and email changed with the string &quot;[DELETED <em>datetime</em>]&quot; appended, so they can be reused in a new user record. </p><pre>&quot;john@gmail.com [DELETED Fri Sep 21 13:35:07 -0400 2007]&quot; </pre><p>In restful_authentication, the User model includes columns for <em>login</em> name, <em>email</em>, <em>crypted_password</em>, <em>activation_code</em> (allows user to active the account), and <em>activated_at</em> date (once account is activated). You could say an :active status is implied when <em>activated_at</em> is not blank?; and a :pending status is implied when <em>activation_code</em> is not blank?.  </p><p>Our case extends this. You could say a :passive status is when both <em>activated_at</em> and <em>activation_code</em> are nil. But any user can be suspended or deleted regardless of these attribute values.</p><h4>Setup </h4><p>This article assumes you have installed the restful_authentication plugin and the acts_as_state_machine plugin. Note, I generated RA to require user activation (--include-activation).</p><pre>  $ script/plugin source http://svn.techno-weenie.net/projects/plugins</pre><pre>  $ script/plugin install restful_authentication</pre><pre>  $ script/generate authenticated user sessions --include-activation</pre><pre>  $ rake db:migrate </pre><pre>add observer to environment.rb </pre><pre>add named routes to routes.rb</pre><pre>move lines from users_controller.rb to application.rb</pre><pre>edit user_notifier.rb as needed </pre><pre>  $ script/plugin install http://elitists.textdriven.com/svn/plugins/acts_as_state_machine/trunk/ </pre><p>I&#39;ll leave other details to others, e.g.</p><p>  http://svn.techno-weenie.net/projects/plugins/restful_authentication/README </p><p>  http://weblog.techno-weenie.net/2006/8/1/restful-authentication-plugin</p><p>  http://agilewebdevelopment.com/plugins/restful_authentication</p><p>    http://www.urbanpuddle.com/articles/2007/03/05/restful-authentication-for-ruby-on-rails-apps</p><p>  http://elitists.textdriven.com/svn/plugins/acts_as_state_machine/trunk/README </p><p>  http://rails.aizatto.com/2007/05/24/ruby-on-rails-finite-state-machine-plugin-acts_as_state_machine/</p><p>  http://www.slideshare.net/dhpeterson/a-simple-workflow-system-using-state-machines </p><p>  http://iamruinous.com/2007/3/6/automatically-calling-acts_as_state_machine-events-on-update <br /><br /></p><p>Maybe I should consider making this a whole new plugin, but for now here&#39;s instructions to DIY (do it yourself).</p><h4>User model</h4><p>Make the User a state-machine. First, add a status attribute to the User model (we&#39;ll call it <em>status</em> rather than <em>state</em>)<br /></p><pre>$ script/generate migration add_status_to_users</pre><p>edit with</p><pre>add_column :users, :status, :string, :null =&gt; :no, :default =&gt; &quot;passive&quot; </pre><p>and then<br /></p><pre>$ rake db:migrate </pre><p>&nbsp;</p><p>To models/user.rb, add:</p><pre>  acts_as_state_machine :initial =&gt; :passive, :column =&gt; :status<br />  state :passive<br />  state :pending, :enter =&gt; :make_activation_code<br />  state :active, :enter =&gt; :do_activate<br />  state :suspended<br />  state :deleted, :enter =&gt; :do_delete<br /></pre><p>Add the state machine transition events:</p><pre>  event :register do<br />    transitions :from =&gt; :passive, :to =&gt; :pending, :guard =&gt; Proc.new {|u| !u.crypted_password.blank? }<br />  end<br />  <br />  event :activate do<br />    transitions :from =&gt; :pending, :to =&gt; :active <br />  end<br />  <br />  event :suspend do<br />    transitions :from =&gt; [:passive, :pending, :active], :to =&gt; :suspended<br />  end<br />  <br />  event :delete do<br />    transitions :from =&gt; [:passive, :pending, :active, :suspended], :to =&gt; :deleted<br />  end<br /><br />  event :unsuspend do<br />    transitions :from =&gt; :suspended, :to =&gt; :active, :guard =&gt; Proc.new {|u| !u.activated_at.blank? }<br />    transitions :from =&gt; :suspended, :to =&gt; :pending, :guard =&gt; Proc.new {|u| !u.activation_code.blank? }<br />    transitions :from =&gt; :suspended, :to =&gt; :passive<br />  end<br /> </pre><pre> </pre><p>Thus when a new user is created, it&#39;s :passive. Then, user.register! will move a user from :passive to :pending (provided it has a password), and an activation_code is generated). </p><p>user.activate! will activate the account. To avoid confusion with the original #activate method, rename the old one to #do_activate. And make a small change to preserve the activated_at date (like when transitioning from suspended back to active). <br /> </p><pre>  # rename old activate to do_activate<br />  def do_activate</pre><pre>    @activated = true</pre><pre><em>    self.activated_at ||= Time.now.utc</em></pre><pre><em>    self.activation_code = nil</em><br /> end</pre><p>Also, now the activated? method is handled by our new active? method: <br /></p><pre>  # retain for compatibility, redundant with active?</pre><pre>  def activated?<br />    <em>active?</em></pre><pre>  end</pre><br /><p>Add a do_delete method (can be in protected)</p><pre>    def do_delete<br />      t = Time.now.to_s </pre><pre>      self.login += &quot; [DELETED #{t}]&quot;</pre><pre>      self.email += &quot; [DELETED #{t}]&quot;</pre><pre>    end</pre><p>Comment out the following because a new passive user doesn&#39;t need an activation code. Rather, this gets called in the :pending <em>:enter</em> callback: </p><pre>#before_create :make_activation_code</pre><p>When is password required? In original RA, it was always required if the crypted_password attribute is blank (new user) or if the password is being changed. Now, users don&#39;t need a password unless they&#39;re going to be activating an account, and guard that in the :register event transition. So the password (and password_confirmation) is validated only if it is present, thus, change password_required to</p><pre>    def password_required?</pre><pre>      <em>!password.blank?</em></pre><pre>    end </pre><p>One last thing, we only want to authenticate users who are active. Change self.authenticate to check:</p><pre>  def self.authenticate(login, password)</pre><pre>    <em>u = find :first, :conditions =&gt; [&#39;login = ? and status = &quot;active&quot;&#39;, login]</em></pre><pre>    u &amp;&amp; u.authenticated?(password) ? u : nil</pre><pre>  end</pre><p> Note that anywhere in your code that you do a Users.find, you now need to scope that by the requested state, such as</p><pre>users = User.find_all_by_status(:active)</pre><p>&nbsp;</p><h4>UsersController </h4><p>Okeydokey, next is the controller... </p><p>In users_controller.rb, the create action can now create either a passive or pending user. We&#39;ll use the presence of a password field to signal a new registration otherwise its a passive signup. Note, create does double duty, if the user exists as passive, it still moves ahead (or you could add an update action if this disturbs your REST, see <a href=""http://iamruinous.com/2007/3/6/automatically-calling-acts_as_state_machine-events-on-update"">this</a> ).  </p><pre>  def create</pre><pre>    @user = User.find_by_email_and_status(params[:user][:email], :passive) if params[:user][:email]</pre><pre>    if @user.nil?</pre><pre>      @user = User.new(params[:user])</pre><pre>      @user.save!</pre><pre>    end</pre><pre>    @user.register! if params[:password]</pre><pre>    self.current_user = @user if @user.pending? # lets user be logged in before activating</pre><pre>    redirect_back_or_default(&#39;/&#39;)</pre><pre>    flash[:notice] = &quot;Thanks for signing up!&quot;</pre><pre>  rescue ActiveRecord::RecordInvalid</pre><pre>    render :action =&gt; &#39;new&#39;</pre><pre>  end</pre><p>(Notes: I decided to key off a unique email rather than login name, seems more intuitive. Could be either. #create must fail if there&#39;s no params[:email]; we let the User.new handle that validation and rescue). </p><p>In the activate action, the only change is call the new <em>#activate!</em> rather than <em>#activate</em></p><pre>  def activate</pre><pre>    self.current_user = User.find_by_activation_code(params[:activation_code])</pre><pre>    if logged_in? &amp;&amp; !current_user.activated?</pre><pre>      <em>current_user.activate!</em></pre><pre>      flash[:notice] = &quot;Signup complete!&quot;</pre><pre>    end</pre><pre>    redirect_back_or_default(&#39;/&#39;)</pre><pre>  end</pre><p> If you&#39;ve included the <a href=""http://technoweenie.stikipad.com/plugins/show/Allow+users+to+edit+reset+and+change+passwords"">forgot password stuff</a>  then in #forgot_password, change this line:</p><pre>    #if @user = User.find_by_email(params[:user][:email])</pre><pre>    if @user = User.find_by_email_and_status(params[:user][:email], &quot;active&quot;) </pre><p>Finally, we can add #suspend, #unsuspend, #destroy and #purge actions (which should be available only to authorized admin users-- you&#39;ll need your own :admin_required helper for this). <br /> </p><pre>before_filter :admin_required, :only =&gt; [:suspend, :unsuspend, :destroy, :purge]<br /></pre><pre> </pre><pre>  # PUT /users/1/suspend<br />  def suspend<br />    @user = User.find(params[:id])<br />    @user.suspend! <br />    redirect_to(users_url)<br />  end<br /><br />  # PUT /users/1/unsuspend<br />  def unsuspend<br />    @user = User.find(params[:id])<br />    @user.unsuspend! <br />    redirect_to(users_url)<br />  end<br /><br />  # DELETE /users/1<br />  def destroy<br />    @user = User.find(params[:id])<br />    @user.delete!<br />    redirect_to(users_url)<br />  end<br /><br />  # DELETE /users/1/purge<br />  def purge<br />    @user = User.find(params[:id])<br />    @user.destroy<br />    redirect_to(users_url)<br />  end<br /></pre><pre> </pre>Make sure the corresponding routes are mapped in routes.rb. This is how I&#39;m doing it,<pre>    map.resources :users, <br />                :member =&gt; { :suspend =&gt; :put,<br />                             :unsuspend =&gt; :put,<br />                             :purge =&gt; :delete }<br /><br /></pre><p>along with all the other named routes for the RA plugin (e.g. map.signup, map.activate, etc). </p><h4>Observer / Notifier</h4><p>The signup notification email (with activation_code) should be sent only when the user is pending. In user_observer.rb, remove the entire after_create method and add the following line to after_save</p><pre>UserNotifier.deliver_signup_notification(user) if user.pending?</pre><h4>Views </h4><p>You could also adjust your views, but basically now a user can sign up with or without a password. When password is omitted, a passive user is captured (say, for subscription to a newsletter). When password is provided, he goes through full registration. Passive users can register later by supplying his email and a new password.  <br /></p><h4>Tests</h4><p>To get the restful_authentication tests to work with our changes, do the following:</p><p>in users.yml, </p><blockquote><p>    add &quot;status: active&quot; to the quentin user record</p><p>    add &quot;status: pending&quot; to the aaron user record</p></blockquote><p>in user_test.rb:</p><blockquote><p>remove the test_should_require_password, since its not required </p></blockquote><p>in users_controller_test.rb: </p><blockquote><p>    remove the test_should_require_password_on_signup, since its not required </p></blockquote><p>To extend the tests for our new features... well, yes you should do that. Here&#39;s a handful that&#39;d go into user_test.rb, certainly not full coverage.</p><pre>    def test_should_create_passive_user</pre><pre>      assert_difference User, :count do</pre><pre>        user = create_user(:password =&gt; nil, :password_confirmation =&gt; nil)</pre><pre>        assert !user.new_record?, &quot;#{user.errors.full_messages.to_sentence}&quot;</pre><pre>        assert user.passive?</pre><pre>      end</pre><pre>    end     </pre><pre>    def test_should_register_passive_user</pre><pre>        user = create_user(:password =&gt; nil, :password_confirmation =&gt; nil)</pre><pre>        assert user.passive?</pre><pre>        user.update_attributes(:password =&gt; &#39;new password&#39;, :password_confirmation =&gt; &#39;new password&#39;)</pre><pre>        user.register!</pre><pre>        assert user.pending?</pre><pre>    end  </pre><pre>    def test_should_suspend_user</pre><pre>      users(:quentin).suspend!</pre><pre>      assert users(:quentin).suspended?</pre><pre>    end   </pre><pre>    def test_suspended_user_should_not_authenticate</pre><pre>      users(:quentin).suspend!</pre><pre>      assert_not_equal users(:quentin), User.authenticate(&#39;quentin&#39;, &#39;test&#39;)</pre><pre>    end   </pre><pre>    def test_should_unsuspend_user</pre><pre>      users(:quentin).suspend!</pre><pre>      assert users(:quentin).suspended?</pre><pre>      users(:quentin).unsuspend!</pre><pre>      assert users(:quentin).active?</pre><pre>    end   </pre><pre>    def test_should_delete_user</pre><pre>      users(:quentin).delete!</pre><pre>      assert_not_equal users(:quentin).login, &#39;quentin&#39;</pre><pre>      assert_not_equal users(:quentin).email, &#39;quentin@example.com&#39;</pre><pre>      assert users(:quentin).deleted?</pre><pre>    end</pre><p>&nbsp;</p><p>&nbsp;</p>",linoj,34965,42,rails,"restful authentication,acts as state machine",stateful_authentication
140,"Wildcard subdomains in rails",,3,1190340254,9,,0,"<p>I guess it starts with this:</p><p>http://wiki.rubyonrails.org/rails/pages/HowToUseSubdomainsAsAccountKeys </p><p>but dont really need the plugin: </p><p>From http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/2604d2241f7f488e<br /> </p><p>the subdomain can be extracted in the controller simply with &quot;request.subdomains[0]&quot;.</p><p>From why:<br /></p><p>http://redhanded.hobix.com/bits/dynamicVhostsOneLinerForRails.html</p><p>Drop this in ApplicationController:   </p><pre> before_filter { |c| c.account =<br />   Account.find_by_subdomain(c.request.subdomains.first) }<br /></pre>  	Bravo.  Requires a ServerName *.tadalist.com in the Apache VHost configuration and an accounts table with a subdomain field.<p>c.account sets a instance variable &quot;account&quot; in the current controller. Be sure to have “attr_writer :account”  so it can be assigned.</p><p>&nbsp;</p><p>&nbsp;</p><p>P LUG INS</p><p>account_domain</p><p>assumes Account model, see below for customizing</p><p>&nbsp;</p><p> request_routing:</p><p>http://wiki.rubyonrails.com/rails/pages/Request+Routing</p><p>&nbsp;</p><p>&nbsp;</p><p>both work fine. </p><p>Don&#39;t  forget to add ServerAlias *.mydomain.com in your virtual host   <br /> definition as well as add the wildcard domain to your dns. <br /> Apache rewrites can be very useful, e.g. if you want to run a   <br /> separate mongrel for some or all customers. It has quite a few other   <br /> uses too, but these are out of the scope of this thread.  <br /></p><blockquote><p>Thanks both of you. I&#39;m a little slow but now I understand :) I became so fixated on getting the urls rewritten I wasn&#39;t &quot;getting&quot; the easy solution. I think I&#39;ll use the request_routing plugin&#39;s conditions to cleanly seperate between normal requests and subdomain requests and then just use the request.subdomain as you guys suggested to do the lookup where subdomains are involved. doh!</p></blockquote><p>account_location plugin: </p><p>From http://cleanair.highgroove.com/articles/2006/08/14/simplied-subdomain-authentication-in-ruby-on-rails</p><p> Modify the plugin to your needs, describes changes, and testing on mac</p><br /><p>&nbsp;</p>",linoj,0,42,rails,,Wildcard_subdomains_in_rails
139,"Processing the Chickens","This morning at 7am, my neighbor Brian called to ask what time I'd like to get started. He arrived at 7:45, and in no time I lost my virginity, so to speak. We did 8 of them, now in my fridge/freezer, and left the other 4 for another day. It actually wasn't nearly as bad as I had feared. And my family's having chicken for dinner tonight!",3,1189632802,9,,2,"<p>Last spring we bought a dozen little &quot;broiler&quot; chicks and raised them through the summer. All the while I knew we&#39;d have to butcher them after ten weeks or so. That&#39;s because they&#39;re bred to basically just eat and grow, and after a time they can get so big they can&#39;t even walk. So if you don&#39;t &quot;process&quot; them they&#39;ll suffer and die anyway.</p><p>I like the idea of knowing where my meat is coming from, that it was raised humanely, organically even, and pretty much had a good life. Not that I (or my wife) pay much attention to this when we shop at the super market. But then again, I have watched &quot;The Meatrix&quot; videos. (<a href=""http://www.themeatrix.com/"">http://www.themeatrix.com/</a> )</p><p>I can&#39;t think of any time in my little life that I&#39;ve intentionally killed anything bigger than a spider or a mouse. Well, maybe a fish or two from time to time. Not that I&#39;m against hunting or the like, I just haven&#39;t done it (yet).  </p><p>But since we bought our farmhouse a few years ago, I&#39;ve had my mind set upon raising chickens, among other animals. We&#39;ve had layers (hens) for a couple years and they keep us in full supply of eggs.</p><p>So the birds grew up and the time came to process them. I was given the name of a guy, Ray, at Cabin View Farms who does this for you. He has a mobile trailer and will come out to your house and do it. I don&#39;t know why I didn&#39;t call him sooner, it&#39;s been a busy summer. When I finally did get around to it though, I found out he charges a minimum of $110 just to show up. Well, maybe if I had 110 chickens it&#39;d be worth it, but not for just twelve of them.</p><p>I called around and posted on a few email lists that I subscribe to. Apparently Ray is the only guy for about 100 miles around who does this. I got a few other names 2+ hours drive, in southern New Hampshire, Mass, and Maine. But that kind of drive just seems overkill (no pun intended). </p><p>What now? </p><p>I called a neighbor, a lifelong farmer to see what he suggests. It wasn&#39;t hard to guess his advice, &quot;Just do it yourself&quot;. He offered to come by and help. Now I had to decide what to do, and get up the nerve.</p><p>All along I had assumed I would &quot;outsource&quot; this process, at least this year; maybe next year I&#39;d take on the thrill of doing it myself. But now, here I was, assessing whether I had it in me to take on this deed. </p><p><em>Alfred Hitchcock once said, &quot;There is no terror in a bang, only in the anticipation of it.&quot;</em> </p><p>Terror is a strong word. I didn&#39;t feel terror. Although the thought of beheading my chickens did (for a moment) give me flashes of Daniel Pearl (<a href=""http://en.wikipedia.org/wiki/Daniel_Pearl"">http://en.wikipedia.org/wiki/Daniel_Pearl</a> ) the Jewish WSJ journalist who was beheaded by Islamic assholes in Pakistan in 2002. (Forgive me, but yesterday was September 11th). I don&#39;t mean to be so dramatic, but from a strategic point of view, since 9/11/2001 I have asked myself if given the circumstances, would I have the nerve to kill if I had to? This is a pretty measly test, but a test nonetheless.<br /></p><p>Alright, I accepted Brian&#39;s offer.</p><p>This morning he called at 7am to ask if today would be OK, and what time could we get started? I told him I was flexible. He said he just wanted to get some breakfast and would be over soon.</p><p>Thus the day began.  </p><p>Here is the step-by-step procedure: </p><p>SETUP</p><p>- Find a beam or something to hang the birds from. Best not inside the barn so the blood can drain etc. We ended up using a long metal pipe behind the barn, suspended about 7 feet off the ground</p><p>- Heat a pot of water, about 3 gallons, to a boil. I started this up indoors on the stove.</p><p>- Get several 5 gallon pails. One for the hot water. One for the birds when they&#39;re done. And one for the throwaway parts.</p><p>- Other items needed: twine, a sharp knife, lopper garden shears, and a blow torch (optional but recommended)</p><p>KILL AND BLEED</p><p>- Catch the chickens. Tie their feet together and hang them upside down from the beam. Hanging there they didn&#39;t squirm much nor squawk at all. <br /></p><p>- There are many ways to kill the birds. The method Brian showed me seems quite humane and the birds didn&#39;t get very upset. With one hand grab it by the comb at the top of the head, tilt back, insert knife into the open mouth, slice behind the palette at the roof of the mouth from one side to the other, about 3/4&quot; to 1&quot; deep. That severs a main artery and also a main nerve. </p><p>- The blood should drain in a steady stream. If you don&#39;t cut it good enough, you might need to go in again once or twice.<br /> </p><p>- Let the bird bleed out. It doesn&#39;t move much at all, just hangs there really, and it&#39;s not that messy. But after a couple of minutes there&#39;s a very brief flurry of fluttering (about 1 or 2 seconds), an autonomous nervous spasm just before it dies.  </p><p>PLUCKING</p><p>- The pail of hot water should be ready and nearby, about 2/3rds full </p><p>- Untie the dead bird from the pole, and immerse it thoroughly in the hot water for about a minute or so. The heat loosens the feathers from the skin.<br /></p><p>- Then hang the bird up again, from just one foot</p><p>- Remove the big feathers from the wings and tail first, since they&#39;re the hardest to remove as it cools. </p><p>- Then pull out all the other feathers. Including the short pin feathers. Clean it as best you can, especially if you plan to cook it with the skin on, you dont want to gross out your family or guests with feathery food.</p><p>- Once it&#39;s picked clean, there will be some hair-like strands left. Fire up the blow torch and gently burn them off.</p><p>There are quicker more mechanized ways to pluck chickens, e.g. you can spend hundreds of dollars on spinning bins with little rubber &quot;fingers&quot;. And if you had hundreds of birds to process it&#39;d make sense. But for this few, it really wasn&#39;t that much work to do it by hand. </p><p>GUTTING</p><p>I had a work table setup outdoors, a water hose, and a sharp hunting knife.</p><p>- Lay the bird on its back. At the tail end, make an incision above the anus and slice along the belly several inches. Then from the same starting point, cut a &quot;Y&quot; shape down on either side of the anus, without cutting through the intestines. That should create a hole into the body cavity big enough to insert your hand, so be sure to cut deep enough, past the fatty tissue.</p><p>- At the neck, slice the skin from the top of the ribs up along the neck, find the crop (a roundish organ containing recently eaten grain), and separate it  from the skin tissue. It needs to be free enough so you can pull it through the body cavity along with the other plumbing.</p><p>- Reach in the bottom and first, pull out the liver, gizzard, and heart. You can save these for dinner. (I gave mine to Brian). On the liver, cut off the green gallbladder, you dont want to taste that (if it breaks, throw the whole liver out). For the gizzard, slice along the edge about 1/2&quot; deep, gently pull it apart and separate the inner sack, remove and discard. </p><p>- Then pull the intestines out of there. I discovered that they&#39;re pretty hardy, can handle fairly strong pulling without tearing. As you pull, the crop should come through too; if not remove it through the top (neck side). Also be sure to remove the windpipe. If it was a rooster, you might also find a couple of pit shaped testicles. Discard the innards.<br /></p><p>- With the garden loppers, cut off the head, wherever you want but probably as close to the body as you can.  Discard.</p><p>- As for the feet, bend them back at the &quot;knee&quot; joint and slice between the cartilage with a sharp knife (just like you would any chicken bones). Discard.<br /></p><p>- Rinse with the hose.</p><p>That&#39;s it.</p><p>CLEAN UP </p><p>When done, rinse the area with a hose, etc. I decided to bury the guts and stuff so my dog won&#39;t go after it.</p><p>DINNER</p><p>In the kitchen I put the chickens into ziploc baggies. Some whole, for broilers, some I quartered into breasts and thighs, and some I cut into smaller parts. Then put the bags in the fridge and freezer.</p><p>A few hours later, I put one whole chicken in a broiler pan, stuffed it with sliced vegetables (from my garden) including a couple apples from my apple tree, baked it for about 2 hours and served it for dinner. Can&#39;t get fresher than that!</p><p>It tasted great! The meat was a bit tougher than Purdue&#39;s, and more gamey than store-bought, almost like turkey but not quite. </p><p>HOW&#39;D IT FEEL?</p><p>I surprised myself that I did not feel squeamish or remorseful at any point. It was all very matter of fact, and, actually, felt very natural. I know it&#39;s only relatively recently (50 years of so) that so many of us have become so far removed from our food source, but this wasn&#39;t something I grew up with either. I now feel more connected with humanity and history.</p><p>Still, this was just a dim-eyed dumb chicken, arguably a soul-less animal. Not a goat, lamb or cow; nor a deer, moose or bear (and certainly not a pet or companion). So we may need to leave my aspiration to connect with Biblical sacrifices and such to some future circumstances.<br /></p><p>Finally, in hindsight, I cannot say this experience has given me any insight into my ability to perform in a battlefield or on a hijacked airplane. But at least I now know I can feed my family without going to the grocery store.   </p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,3694,39,musings,,Processing_the_Chickens
138,"Login with your email address","Modifications to restful_authentication plug which allows users to log in using their email address.",3,1187643915,9,,2,"<p>The restful_authentication plugin (as well as acts_as_authenticated) setup a user registration with login name, password, email adress, etc. And then prompt the user to log in using the login name and password. </p><p>I prefer to let people use just their email address (and password) for logging in rather than login name. </p><h2>Log in with login name or email </h2><p>Assuming you still require the user to register a login name, but want to let them log in with either the login name or email address, the change is simple. Edit the models/users.rb file and add the following line to self.authenticate method:</p><pre>  def self.authenticate(login, password)<br />    u = find :first, :conditions =&gt; [&#39;login = ? and activated_at IS NOT NULL&#39;, login] # need to get the salt<br />    <strong>u ||= find :first, :conditions =&gt; [&#39;email = ? and activated_at IS NOT NULL&#39;, login]<br /></strong>    u &amp;&amp; u.authenticated?(password) ? u : nil<br />  end <br /></pre><p>Then you can change views/sessions/_new.rthml to prompt for &quot;Login name or email address&quot;</p><p>&nbsp;</p><h2>Use email only (eliminate login name)</h2><p>Actually, I prefer to let users register with just their email address and a password, and not even bother with a login name.<br /> </p><p>(However, I do require the provide their full name, which is used for display purposes when I dont want to disclose their email to other users). </p><p>Here&#39;s the changes needed to implement:</p><p>First, edit the models/users.rb file as follows:</p><ul><li>remove validates_presence_of :login</li><li>remove validates_length_of :login</li><li>remove validates_uniqueness_of :login </li></ul><p>in self.authenticate method , replace<br /></p><pre>#u = find :first, :conditions =&gt; [&#39;login = ? and activated_at IS NOT NULL&#39;, login] # need to get the salt<br />u = find :first, :conditions =&gt; [&#39;email = ? and activated_at IS NOT NULL&#39;, login] </pre><p> in encrypt_password method, replace<br /></p><pre>#self.salt = Digest::SHA1.hexdigest(&quot;--#{Time.now.to_s}--#{login}--&quot;) if new_record?<br />self.salt = Digest::SHA1.hexdigest(&quot;--#{Time.now.to_s}--#{email}--&quot;) if new_record?</pre><br /><p>Next, edit controllers/users_controller.rb as follows:</p><p> in change_password method, replace</p><pre> #if User.authenticate(current_user.login, params[:old_password])<br />if User.authenticate(current_user.email, params[:old_password])</pre><p>As for the views, modify the views removing any reference to the :login field as follows:</p><p>login.rhtml : change prompt for &quot;Email&quot; (Note, I&#39;ve kept the field name &quot;login&quot; in the form so that the sessions_controller doesnt need to change)</p><pre>&lt;p&gt;&lt;label for=&quot;login&quot;&gt;Your Email&lt;/label&gt;&lt;br/&gt;<br />&lt;%%= text_field_tag &#39;login&#39; %&gt;&lt;/p&gt; <br /></pre><p>signup.rhtml : remove label and field for :login</p><p>signup_notification.rhtml : remove   </p><pre>Username: &lt;%%= @&lt;%= file_name %&gt;.login %&gt;</pre><p>Finally, it would be prudent to update the tests. In file test/functional/sessions_controller_test.rb, change login to pass email rather than login name in several places as follows:</p><pre>post :create, :login =&gt; &#39;quentin@example.com&#39;, :password =&gt; &#39;test&#39;</pre><p>Optionally you could also remove the login value from the fixtures (users.yml), or even create a migration that removes the login column from the users table altogether.     </p><h2>Email Confirmation</h2><p>A bit of candy, I also added an email_confirmation field to the registration form. To handle this, I added to models/user.rb</p><pre>acts_as_modified </pre><pre>validates_presence_of :email_confirmation, :if =&gt; :email_modified?</pre><pre>validates_confirmation_of :email, :if =&gt; :email_modified?</pre><p>The :email_modified? method is provided by acts_as_modified plugin (http://svn.viney.net.nz/things/rails/plugins/acts_as_modified/) <br /></p><p>&nbsp;</p>",linoj,4782,42,rails,"restful authentication",Login_with_your_email_address
137,"flex on rails","extreme flashy user interfaces",3,1186465126,9,,0,"<p>&nbsp;</p><p>http://www.adobe.com/devnet/flex/articles/flex2_rails_04.html</p><p>&nbsp;</p><p>you need Flex Builder, which can be a plugin for Eclipse or a stand-alone product has a really cool Design mode</p><p>Flex is a wrapper for ActionScript stuff</p><p>you can create a flash button by &lt;mx:Button etc etc /&gt; </p><p>&nbsp;</p><p>dirtyhand​​: ​yep<br />​[01:27a] dirtyhand: i just use Flex for the views, displaying and entering data, and some simple form validation<br />​[01:27a] dirtyhand: and then Rails does all the business logic</p><p>I&#39;d suggest the Lynda.com tutorials </p><p>does the Flex on rails need the Flex compiler? I think so </p><p>if you looking to use Flex on Rails, use WebOrb for now... the other option RubyAMF is still young and buggy</p><p> Flex is just a big swf movie</p><p>&nbsp;</p><p>dirtyhand​​: ​Yeah, im using a RESTful rails app as a backend<br />​[01:37a] dirtyhand: only problem is that WebOrb, the plugin i use for Flex-&gt;Rails connectivity, doesnt support respond_to<br />​[01:37a] dirtyhand: but, RubyAMF, its competition, supports that, but it currently a little buggy</p><p>and another problem is that RESTful controller methods use the params array as parameters, but I need to send actual parameters in Flex.. so I gotta fix the functino definition to take either none or 1+ parameters<br />​[01:42a] dirtyhand: but if you use WebOrb you can send anything between flex and rails, even typed VO&#39;s <br /></p><p>&nbsp;</p>",linoj,0,42,rails,,flex_on_rails
136,"A tab helper that works for me","I loved the recent Tab Helper discussion on TheRailsWay.com, and this is what I ended up doing for my project.",3,1186038476,9,,2,"<p>I&#39;m referring to this original post ( http://www.therailsway.com/2007/6/4/free-for-all-tab-helper ), all the comments therein, and the followup summary article ( http://www.therailsway.com/2007/6/28/free-for-all-tab-helper-summary )</p><p>While the pure css solution is elegant, it doesnt work so well for me because I need my tabs to be dynamic and decoupled from the controller.</p><p>Thus, Koz&#39;s Take is where I headed, although his answer is pretty sparse. </p><p>This is what I ended up with.</p><p>The following helper goes into application_helper.rb: </p><pre> # helper</pre><pre>  def tab_for(tab, link, label=nil)<br />    content_tag :li, link_to(label||tab.to_s.titleize, link), :class =&gt; (&quot;current_tab&quot; if @current_tab == tab)<br />  end<br /></pre><p>The helper is called in your view templates to render the tabs, perhaps as a _tabs partial called from a layout, as follows </p><pre># _tabs partial</pre><pre>&lt;div id=&quot;tabs&quot;&gt;<br />  &lt;ul&gt;<br />    &lt;%# tab_for TAB_SYM, LINK [, TEXT] %&gt; <br />    &lt;%= tab_for :projects, projects_path %&gt;<br />    &lt;%= tab_for :user, user_path(current_user), &quot;Contact&quot; %&gt;<br />  &lt;/ul&gt;<br />&lt;/div&gt;</pre><p>The instance variable @current_tab is set by any action to make one of the tabs current. This could be done in a before_filter, </p><pre># users_controller</pre><pre>before_filter :set_current_tab, :only =&gt; :show</pre><pre>  def set_current_tab<br />    @current_tab = :user<br />  end<br /></pre><p>Finally, css is used to make the &lt;ul&gt; and &lt;li&gt; tags into tabs: </p><pre># css based on http://www.alistapart.com/articles/slidingdoors2/</pre><pre>#tabs {<br />  margin-top: 10px;<br />  float:left;<br />  width:100%;<br />  background:#fff url(&quot;/images/tabs/tab2_bg.png&quot;) repeat-x bottom;<br />}<br />#tabs ul {<br />  margin:0;<br />  padding:10px 10px 0 10px;<br />  list-style:none;<br />}<br />#tabs li {<br />  float:left;<br />  background:url(&quot;/images/tabs/tab2_left.png&quot;) no-repeat left top;<br />  margin:0;<br />  padding:0 0 0 9px;<br />}<br />#tabs a {<br />  display:block;<br />  background:url(&quot;/images/tabs/tab2_right.png&quot;) no-repeat right top;<br />  padding:5px 35px 2px 6px; <br />  text-decoration:none;<br />}<br />#tabs a:hover {<br />  text-decoration: underline;<br />}<br />#tabs li.current_tab {<br />  background-image:url(&quot;/images/tabs/tab2_left_on.png&quot;);<br />}<br />#tabs li.current_tab a {<br />  background-image: url(&quot;/images/tabs/tab2_right_on.png&quot;);<br />  padding-bottom:3px; <br />  color:#fff;<br />}<br /> </pre><p>&nbsp;</p>",linoj,4479,42,rails,"tabs,helper",A_tab_helper_that_works_for_me
135,"My timestamp holy grail","In response to <a href=""http://www.almosteffortless.com/2007/07/29/the-perfect-timestamp/"">""The Perfect Timestamp""</a> ... here's what I really want (and did).",3,1185846088,9,,2,"<p>One problem in calculating &quot;1 day ago&quot; is it&#39;s based on hours, not date. I think of days as calendar dates rather than strict 24 hours ago.</p><p>Another problem is while I like the narrative way of describing &quot;ago&quot;, I still want to show the actual time, thus &quot;about 3 hours ago at 4:31PM&quot; suits me.</p><p>As we go further back in time, the amount of detail changes. Any date this year, don&#39;t need the year. Within the past week, say something like &quot;Last Tuesday&quot;<br /></p><p>My algorithm: </p><blockquote><p>If not the same year, show &quot;dd-mmm-yyyy hh:mm&quot; (full date and time, no day of week)<br /></p><p>If today, </p><blockquote><p>    if &lt;4 minutes, show &quot;About xx minutes ago&quot;</p><p>else if &lt;4 hours ago, show &quot;About xx [hours|minutes] ago at hh:mm&quot; </p><p>    else &quot;Today at hh:mm&quot;<br /> </p></blockquote><p>if yesterday, show &quot;Yesterday at hh:mm&quot;</p><p>if 2 to 6 days ago, &quot;Last [dayofweek], dd-mmm at hh:mm&quot; </p><p>else &quot;[dayofweek], dd-mmm hh:mm&quot; (no year)<br /></p></blockquote><p>Here&#39;s some example output:</p><blockquote><p>&quot;less than a minute ago&quot; </p><p>&quot;about 42 minutes ago at 7:31PM&quot; </p><p>&quot;Today at 1:20PM&quot; </p><p>&quot;Yesterday at 7:31PM&quot; </p><p>&quot;Last Wed, 18-Jul at 7:31PM&quot;</p><p>&quot;Sat, 28-Jun at 7:31PM&quot; </p><p>&quot;28-Jul-2006 at 7:31PM&quot; </p></blockquote><p>Here&#39;s the helper code (btw, I left the timezone stuff in for spice)</p><p>&nbsp;</p><pre>  def smart_time_ago( was, is = TzTime.now )</pre><pre>    was = tz_convert( was )</pre><pre>    was = was.to_time if was.respond_to?(:to_time)</pre><pre>    is = tz_convert( is )</pre><pre>    if (was.year != is.year) # not this year</pre><pre>                    time = was.strftime(&quot;%d-%b-%Y %l:%M%p&quot;)</pre><pre>    else </pre><pre>      case (is.yday - was.yday)</pre><pre>        when 0 # today           </pre><pre>          if (is - was &lt; 4.minutes)</pre><pre>                    time = distance_of_time_in_words(was,is) + &quot; ago&quot; </pre><pre>          elsif (is - was &lt; 4.hours)</pre><pre>                    time = distance_of_time_in_words(was,is) + was.strftime(&quot; ago at %l:%M%p&quot;)     </pre><pre>          else</pre><pre>                    time = was.strftime(&quot;Today at %l:%M%p&quot;)</pre><pre>          end</pre><pre>        when 1 # yesterday</pre><pre>                    time = was.strftime(&quot;Yesterday at %l:%M%p&quot;)</pre><pre>        when 2..6 # past week </pre><pre>                    time = was.strftime(&quot;Last %a, %d-%b at %l:%M%p&quot;)</pre><pre>        else # this year</pre><pre>                    time = was.strftime(&quot;%a, %d-%b at %l:%M%p&quot;)</pre><pre>      end</pre><pre>    end</pre><pre>    return time.squeeze(&#39; &#39;)</pre><pre>  end</pre><br /><p>&nbsp;</p><p>&nbsp;</p>",linoj,3065,42,rails,"date,time,helper",My_timestamp_holy_grail
134,"Rails: Common programming problems",,3,1184143574,9,,0,"<p>&nbsp;</p><h2>Routes</h2><p>&quot;no route matches&quot; in a url helper:</p><p>look in routes.rb, there has to be a map.resource or similar for the controller+action(+id). Possibly not passing the id. Use console (or rake task) to see list of routes available.</p><p>&nbsp;</p>",linoj,0,42,rails,,Rails%3A_Common_programming_problems
133,"make-resourceful and nested polymorphic associations","Here's a patch that enables make_resourceful to handle polymorphic resources with nested routes.",3,1183307862,9,,2,"<h2>polymorphic resources<br /></h2><p>A polymorphic model can belong to more than one parent model class. For example, Comments can belong to both Articles and Documents. The Rails idiom for setting this up is like this:</p><p>comments table schema includes:</p><pre>commentable_id:integer</pre><pre>commentable_type:string </pre><p>models/comment.rb contains<br /></p><pre>belongs_to :commentable, :polymorphic =&gt; true</pre><p>then both the models/article.rb and document.rb contains</p><pre>has_many :comments, :as =&gt; :commentable</pre><p>In this way, you can reference article.comments and document.comments for an Article and Document object, respectively. With RESTful resource routes, you can have url&#39;s  and named routes like</p><pre>article_comment_path(@article,@comment) # =&gt; /articles/1/comments/22</pre><pre>article_new_comment_path(@article)     # =&gt; /articles/1/comments/new</pre><h2>make_resourceful</h2><p>The make_resourceful (&quot;mr&quot;) plugin (ver 0.1.0) automatically creates typical RESTful actions in controllers, but does not presently support these associations.</p><p>Although mr supports has_many nested resources (and multiple levels of them at that), it assumes that a child resource has just one kind of parent.</p><p>I&#39;ve submitted this patch to the authors but its not tightly integrated. So if you use this, consider it a temporary patch until the plugin authors integrate it or come up with their own (better) solution.</p><p>Most of the code can be put in application.rb. There are a few other methods that go into the controller for the polymorphic resource. </p><h2>multiple parents</h2><p>Important: When using polymorphic resources, I&#39;ve changed the meaning of <em>parents</em> from the standard mr convention. Normally, mr&#39;s parents is a list of models in a nested resource chain, such as /projects/3/articles/4/comments/5, then parents contains [&quot;project&quot;,&quot;article&quot;]. </p> <p>In the polymorphic case, we can have several alternative parents. Thus, I use <em>parents</em> to represent the list of possible parent resources, one level up. </p><p>This also means that in the polymorphic case, we only handle one level of nesting. That&#39;s not so bad because that&#39;s being strongly recommended by the Rails core team.  See <a href=""http://weblog.jamisbuck.org/2007/2/5/nesting-resource"">http://weblog.jamisbuck.org/2007/2/5/nesting-resource</a> </p><h2>URL helpers </h2><p>As a sidebar, I want to mention an undocumented feature: mr has a number of very handy URL generator methods, only you need to expose them as helpers to use them in views. They are :object_path, :objects_path, :new_object_path, and :edit_object_path. </p><p>You can use these instead of the built-in RESTful named routes. If your resources are nested the nested paths will be generated. My patch now lets them support polymorphic nesting too. </p><p>I&#39;ve also added a new helper, parent_path, that can be used for example in a &quot;Back&quot; link. Thus, for example:</p><pre>object_path(item) # =&gt; /articles/1/comments/22 <br /></pre><pre>object_path       # assumes current_object </pre><pre>edit_object_path  # =&gt; /articles/1/comments/22/edit</pre><pre>parent_path       # =&gt; /articles/1 </pre><h2>application.rb<br /></h2><p>Add the following to your application.rb to extend the make_resourceful library:<br /></p><p>&nbsp;</p><pre>  # make_resourceful fixes for polymorphic models</pre><pre>  # use this to override parent_objects method </pre><pre>  # def parent_objects</pre><pre>  #   parent_objects_poly</pre><pre>  # end</pre><pre>  def parent_objects_poly</pre><pre>    return [] if parents.empty?</pre><pre>    return @parent_objects if @parent_objects</pre><pre>    # find index of first (and only) non-zero parent_param </pre><pre>    parent_i = parent_params.index( parent_params.find { |el| el != 0 })</pre><pre>    return @parent_objects = [] unless parent_i</pre><pre>    model = parent_models[ parent_i ]</pre><pre>    @parent_objects= [model.find(parent_params[parent_i])]</pre><pre>  end</pre><pre>  </pre><pre>  # parent object helper</pre><pre>  def parent_object</pre><pre>    parent_objects[0] unless parent_objects.empty?</pre><pre>  end</pre><pre>  helper_method(:parent_object)</pre><pre>  </pre><pre>  def parent_path</pre><pre>    send(&quot;#{namespace_prefix}path&quot;, *parent_objects)</pre><pre>  end</pre><pre>  helper_method(:parent_path) </pre><pre>   </pre><pre>  # expose the url methods as helpers</pre><pre>  helper_method(:object_path, :objects_path, :new_object_path, :edit_object_path)</pre><p>&nbsp;</p><p>The first method, <em>parent_objects_poly</em>, is the body of the override of the parent_object method.</p><p>I introduce a new <em>parent_object</em> helper that returns the parent of the current_object. Related to this, I&#39;ve also added a parent_path URL helper.</p><p>The last line exposes the built-in mr URL generators as helpers.</p><p>You can keep this code in application.rb. Normally these will not affect make_resourceful controllers, unless you add the following code to the controller to make it a polymorphic resource.<br /></p><h2>your_controller.rb</h2><p>The second part of the implementation requires adding a few methods to your controller. </p><p>If this part looks a little kludgey, its because I&#39;m trying to avoid editing the plugin code directly, to force the order of method overrides (internally, make_resourceful method calls load_parent_objects in base from kontroller.before_filter).</p><p>&nbsp;</p><pre>  make_resourceful do</pre><pre>    actions: all</pre><pre>  end</pre><pre> </pre><pre>  # add the following to make this controller for a polymorphic resource </pre><pre>  def parents</pre><pre>    <strong>[&quot;article&quot;,&quot;document&quot;] </strong>#this is the only line specific to this resource</pre><pre>  end</pre><pre>  </pre><pre>  def parent_objects</pre><pre>    parent_objects_poly</pre><pre>  end</pre><pre>  </pre><pre>  def namespaces</pre><pre>    parent_i = parent_params.index( parent_params.find { |p| p != 0 })</pre><pre>    [parents[parent_i]]</pre><pre>  end</pre><br /><p>(Note, we do not use the belongs_to declaration, rather we override the parents method directly.)  </p><p>As noted above, <em>parents</em> returns the list of possible parents, one level up. <em>You need to insert your own parents array there.</em><br /></p><p><em>parent_objects</em> is overriden using the body we put in application.rb. It still returns an array, but it will have no more than one element.</p><p>Finally, the internal method for generating namespaces is also overridden for the URL helper methods (again, this didn&#39;t work when I put it in application.rb)</p><p>&nbsp;</p><p>That it. It seems to be working fine for me. I hope it helps you too. </p><p>&nbsp;</p>",linoj,43108,42,rails,"make_resourceful,polymorphic",make-resourceful_and_nested_polymorphic_associations
130,"make_resourceful notes","I've been using the make_resourceful plugin for several weeks and will never go back to the default rails scaffolds. (Update: Added caveats) ",3,1182852253,9,,2,"<p>&quot;make_resourceful is a plugin that allows you to factor out all the repetitive REST code that clutters up the controller a surprising amount. It manages this by automatically creating typical RESTful actions, while allowing plenty of room for user customization.&quot; <br /></p><p>My bet is this code will make its way into Rails core one day. </p><p>Here are some useful links: </p><p>Slides from Hampton&#39;s presentation at RailConf&#39;07, providesa a great simple overview: <a href=""http://www.hamptoncatlin.com/assets/2007/5/21/make_resourceful.pdf"">http://www.hamptoncatlin.com/assets/2007/5/21/make_resourceful.pdf</a></p><p>This is an excellent overview of make_resourceful. Actually, its the only realy documentation I&#39;ve found, other than the source code and rdocs. (Thanks Nathan!) Overview of 0.1.0: <a href=""http://nex3.leeweiz.net/posts/7"">http://nex3.leeweiz.net/posts/7</a> </p><p>This is Hampton&#39;s home page  which actually doesnt say much about make_resourceful <a href=""http://hamptoncatlin.com/"">http://hamptoncatlin.com</a> </p><p>Here&#39;s the SVN trunk: <a rel=""nofollow"" href=""http://svn.hamptoncatlin.com/make_resourceful/trunk"" target=""_blank"">http://svn.hamptoncatlin.com/make_resourceful/trunk</a></p><h2>Cool Named URLs</h2><p>make_resourceful has a bunch of handy named url&#39;s that are not exposed as helper methods by default. But I&#39;ve been using them by adding this to application.rb</p><pre>helper_method(:object_path, :objects_path, :new_object_path, :edit_object_path)</pre><p>Examples:</p><pre>&lt;%= link_to &#39;New item&#39;, new_object_path %&gt;</pre><pre>&lt;%= link_to &#39;Show&#39;, object_path(item) %&gt; </pre><pre>&lt;%= link_to &#39;Edit&#39;, edit_object_path(item) %&gt;</pre><p>edit: </p><pre>form_for(current_object, :url =&gt; object_path)</pre><p>new: </p><pre>form_for(current_object, :url =&gt; objects_path)</pre><h2>Caveats</h2><p>OK, so make_resourceful is the greatest thing since sliced bread. Well, almost. Problems start to creep up on nested resources. And it doesnt support polymorphic models at all.</p><h4>has_one associations</h4><p>make_resourceful works fine when your model has_many :things, but it breaks when it has_one :thing</p><p>In this case i get </p><pre>undefined method `things&#39; for #&lt;Article:0x31be538&gt;</pre><p>because its looking for the pluralized model name as the parent&#39;s accessor, and assumes that accessor is a model class (eg it tries to call parent.things.find(id) to get the scoped current_object rather than simply, parent.thing).</p><p>I tried to work through a patch or workaround but it started to touch too much of the existing library. </p><h4>singleton resource routes</h4><p>since has_one associations aren&#39;t supported, it make sense neither are nested singleton routes, using map.resource (versu map.resource), or the :has_one declaration in Edge). I mention it because its possible to support the former without the latter. </p><h4>Polymorphic models </h4><p>Controllers for polymorphic models are not supported. Polymorphic models are ones declared with something like Comment model belongs_to :commentable, :polymorphic =&gt; true , and then in the Article model, you say, has_many :comments, :as =&gt; :commentable . </p><p>Actually make_resourceful is fine as long as you only use the model with one parent. Which of course defeats the purpose of making it polymorphic in the first place. This is because the current code assumes the controller can be nested below just one parent.</p><p><a href=""postings/make-resourceful_and_nested_polymorphic_associations"">I&#39;ve implemented a workaround</a> </p><p>&nbsp;</p><h4>Parent controllers that use different model names<br /> </h4><p>m_r assumes that the model resource for a controller is the same name as in the controller. That is, ThingsController assumes Thing model. If the controller references a different model name, you can change it by redefining current_model, as in ThingsController,<br /></p><pre>def current_model</pre><pre>  Other</pre><pre>end</pre><p>But in a nested resource, if the parent controller has a different model than the controller name implies m_r won&#39;t find it, it assumes the name relationship. </p><p>Suppose you have a controller CarsController that actually references Auto model, and there is no Car model. Thus, when you do &quot;/cars/1/parts/2&quot; and have PartsController:<br /></p><pre>  make_resourceful do</pre><pre>     belongs_to :auto</pre><p>you get an error you get an error (0 id in Car.find) since there is no param[:car_id]. But if instead you try:  </p><pre>    belongs_to :car</pre><p>you get an error &quot;uninitialized constant Car&quot; (as load_parent_objects tries to find a model named Car)</p><p>My workaround is to fake out m_r by providing the param it wants, e.g.</p><pre>  before_filter :get_parent_param</pre><pre>  def get_parent_param</pre><pre>    param[:auto_id] ||= param[:car_id]</pre><pre>  end</pre><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,4325,42,rails,"make_resourceful,REST",make_resourceful%20notes
132,"acts as ruby","A quick and dirty, dangerous and dumb, funny  and very unsecure debugging idea for Rails controllers.",3,1181792255,9,,2,"<p>Lets say you want to be able to arbitrarily see the value of a variable in your controller action without going into the debugger or changing your templates. What if you just passed some ruby code in the url?</p><p>asdfs_controller.rb</p><pre> def show<br />    @asdf = Asdf.find(params[:id])<br />    <strong>if (params[:ruby])<br />      return( render :text =&gt; eval(params[:ruby]) )<br />    end</strong></pre><pre>    respond_to do |format|</pre><pre>      format.html # show.html.erb</pre><pre>      format.xml  { render :xml =&gt; @asdf }</pre><pre>    end</pre><pre>  end</pre><p>Then you could put in your url things like:</p><pre>http://0.0.0.0:3000/asdfs/1?ruby=@asdf.name</pre><pre>http://0.0.0.0:3000/asdfs/1?ruby=@asdf.class</pre><pre>http://0.0.0.0:3000/asdfs/1?ruby=self.inspect</pre><pre>http://0.0.0.0:3000/asdfs/1?ruby=Asdf.find(:all).size.to_s </pre><pre> </pre><p>&nbsp;</p>",linoj,2901,42,rails,,acts_as_ruby
131,"Rspec example for nested resource index action","A nice clean example, posted by Martin Emde on rspec-users list",3,1180920186,9,,2,"Here is the correct spec for this index action:<br /><br /><pre>def index</pre><pre>  if params[:user_id]</pre><pre>    @user = User.find(params[:user_id])</pre><pre>    @messages = @user.messages</pre><pre>  end</pre><pre>end</pre><p>Here&#39;s the spec: </p><pre>describe MessagesController, &quot; handling GET /messages for a user&quot; do<br /><br />before do<br />   @user = mock_model(User) <br />   @messages = mock(&quot;messages&quot;)<br />   @user.stub!(:messages).and_return(@messages)<br />   User.stub!(:find).and_return(@user)<br />end<br /><br />def do_get <br />   get :index, :user_id =&gt; 1<br />end<br /><br />it &quot;should render index template&quot; do<br />   do_get<br />   response.should render_template(&#39;index&#39;)<br />end<br /><br />it &quot;should find user with params[:user_id]&quot; do <br />   User.should_receive(:find).with(1).and_return(@user)<br />   do_get<br />end<br /><br />it &quot;should get user&#39;s messages&quot; do<br />   @user.should_receive(:messages).and_return(@messages)<br />   do_get<br />end<br /><br />it &quot;should assign the found messages for the view&quot; do<br />   do_get<br />   assigns[:messages].should be(@messages)<br />end<br />end<br /></pre>",linoj,6472,42,rails,rspec,Rspec_example_for_nested_resource_index_action
129,"template info helper","Here's a neat little helper you might like which displays the name of the current template file and other information, especially for development and debugging.",3,1180765333,9,,2,"<p>&nbsp;</p><p>I wanted to show the template names for a given page. The template code could look something like this:</p><pre>&lt;%= template_info %&gt;</pre><p>or</p><pre>&lt;%= template_info @page.updated_at %&gt;</pre><p>or even</p><pre>&lt;%= template_info @page.updated_at, &quot;by #{@page.author.name}&quot; %&gt;</pre><p>The last example would generate something like this html:</p><pre>&lt;div class=&quot;template_info&quot;&gt;<br />  Template: pages/show.html.erb&lt;br /&gt;<br />  Data updated: 31 May 16:31&lt;br /&gt;<br />  by Jonathan<br />&lt;/div&gt;  </pre><p>Here it is. Just add this to application_helper.rb. Note, the file name is always displayed. If a date or time is provided (update arg) it will be shown. Then you can add any number of additional strings to also be shown. </p><p>&nbsp;</p><pre>  def template_info( update = nil, *info )</pre><pre>    if RAILS_ENV == &quot;development&quot;</pre><pre>      info.insert(0, &quot;Data updated: &quot; + update.to_s(:short)) if update</pre><pre>      f = caller[0]</pre><pre>      f = f[0,f.index(&#39;:&#39;)]</pre><pre>      f = f.split(&quot;/&quot;).last(2).join(&quot;/&quot;)</pre><pre>      info.insert(0, &quot;Template: #{f}&quot;)</pre><pre>      content_tag(&quot;div&quot;, info.join(&quot;&lt;br /&gt;&quot;), :class =&gt; &quot;template_info&quot; )</pre><pre>    end</pre><pre>  end</pre><p>A couple of changes I might make. Instead of keying directly off RAILS_ENV, I&#39;ve setup a constant hash in environment.rb with some options including</p><pre>SITE_OPTIONS = { &quot;template_info&quot; =&gt; true }</pre><p>Then the &quot;if&quot; is more like </p><pre>if SITE_OPTIONS.fetch(&#39;template_info&#39;, false) </pre><p>(using fetch allows the hash key to be undefined and then default to false).</p><p>Also, instead of contact_tag(&quot;div&quot;, it may be better to embed the info in html comments &lt;!--  --&gt; so its only visible in source view. In fact, maybe the value of &#39;template_info&#39; could be &quot;div&quot;, &quot;comment&quot;, or false and do a case switch (I don&#39;t think content_tag lets you specify &quot;&lt;!--&quot;).</p><p>Finally I&#39;d prefer if this were injected into the render method, so all templates would display their name when enabled. Xaraya framework has that and I miss it.</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,2198,42,rails,"helpers,templates",template_info_helper
128,"Mental Transactions","Integrated design, spec, implement, test cycles in mental bite-sized chunks",3,1180640828,9,,0,,linoj,0,,,,Mental_Transactions
127,"Using Rspec on Controllers","Here's a simple example of using Rspec with a controller.",3,1180587518,9,,2,"<p>&nbsp;</p><p>We&#39;ll create a controller called Sandbox, and write some specs, including stubs for instance methods and filters. Let&#39;s begin.</p><h4>Basic Test Rig </h4><p>Create a file /spec/controllers/sandbox_controller_spec.rb, with</p><pre>require File.dirname(__FILE__) + &#39;/../spec_helper&#39;</pre><pre><br />describe SandboxController, &quot; handling someaction&quot; do  <br />  it &quot;should get real value 10&quot; do</pre><pre>    get :someaction</pre><pre>    assigns[:value].should equal(10)</pre><pre>  end</pre><p>Then create a file /app/controllers/sandbox_controller.rb, with</p><pre>class SandboxController &lt; ApplicationController</pre><pre> </pre><pre>  def someaction<br />    @value = somemethod</pre><pre>  end</pre><pre> </pre><pre>  protected<br />  <br />  def somemethod<br />    return 10<br />  end<br /></pre><pre>end</pre><p>And give it a run,</p><pre>$ script/spec spec/controllers/sandbox_controller_spec.rb --color --format specdoc</pre><pre><br />SandboxController handling someaction</pre><pre>- should get real value 10</pre><pre><br />Finished in 0.134328 seconds</pre><pre><br />1 example, 0 failures</pre><h4>Stub the Method</h4><p>Now we&#39;ll stub the somemethod. In the spec file add</p><pre>  it &quot;should get stubbed value 99&quot; do</pre><pre>    controller.stub!(:somemethod).and_return(99)</pre><pre>    get :someaction</pre><pre>    assigns[:value].should equal(99)</pre><pre>  end</pre><p> and run again,</p><pre>SandboxController handling someaction<br />- should get real value 10<br />- should get stubbed value 99</pre><p>Alternatively, you could mock it and be more specific, such as</p><pre>    #controller.stub!(:somemethod).and_return(99)</pre><pre>    controller.should_receive(:somemethod).and_return(99)</pre><h4>Spec a Filter </h4><p>Next we&#39;ll setup a little filter in the controller. Add this spec,</p><pre>describe SandboxController, &quot; handling filteredaction&quot; do  </pre><pre>  it &quot;should be filtered&quot; do</pre><pre>    get :filteredaction</pre><pre>    assigns[:value].should be_nil</pre><pre>  end</pre><h4>Create the Filter</h4><p>  Add to the controller,</p><pre>  before_filter :myfilter, :only =&gt; :filteredaction</pre><pre>  def filteredaction</pre><pre>    @value = 123</pre><pre>  end</pre><p>and in the protected section,</p><pre>  def myfilter</pre><pre>    false</pre><pre>  end</pre><p>And give it a run,</p><pre>SandboxController handling filteredaction</pre><pre>- should be filtered</pre><h4>Stub the Filter</h4><p>Add this to the spec, </p><pre>  it &quot;should get unfiltered 123&quot; do<br />    controller.stub!(:myfilter).and_return(true)<br />    get :filteredaction<br />    assigns[:value].should equal(123)<br />  end</pre><p>and give this one a run, </p><pre>SandboxController handling filteredaction<br />- should be filtered<br />- should get unfiltered 123</pre><p>Again, alternatively you could mock it,</p><pre>    #controller.stub!(:myfilter).and_return(true)<br />    controller.should_receive(:myfilter).with(:no_args).once.and_return(true) <br /></pre><p>There you go :) </p><p>And this should still work if you move the protected methods out of the controller into, say, ApplicationController class (controllers/application.rb), or into a module in /lib/ that&#39;s included in your controller class(es).</p><p>&nbsp;</p>",linoj,12856,42,rails,"rspec,stubs",Using_Rspec_on_Controllers
126,"Rspec 1.0 and Restful Authentication","Here are specs for the restful_authentication plugin that work with Rspec on Rails 1.03",3,1180491386,9,,2,"<p>I&#39;ve started using RSpec on Rails for spec&#39;ing (aka testing). More about that in a separate post (I haven&#39;t had time to write up a walkthrough of my great experience with it).</p><p>Anyway, my project uses <a href=""http://svn.techno-weenie.net/projects/plugins/restful_authentication"">restful_authentication plugin</a>  so I started looking around and found a set of spec files for it on <a href=""http://jonathan.tron.name/articles/2007/01/02/rspec-on-rails-restful-authentication"">Jonathan.inspect blog</a> but they&#39;re out of date with regard to the the Rspec 1.03 API. </p><p>I&#39;ve updated the files. I didnt make any changes to the code except what was needed to make it work with the current API. (In fact, for example, I did not change &quot;context&quot; to &quot;describe&quot; or &quot;specify&quot; to &quot;it&quot;). Here they are: </p><p align=""center""><a href=""var/uploads/File/ra%20spec.zip"">Download ra spec.zip</a>  </p><p>The zip includes the files</p><ul><li>user_spec.rb : User model specs</li><li>user_notifier_spec.rb : UserNotifier model specs</li><li>user_observer_spec.rb : UserObserver model specs</li><li>users_controller_spec.rb : Users controller specs</li><li>sessions_controller_spec.rb : Sessions controller specs</li></ul><p>Per Jonathan,</p><p>You should also add :</p>                                 <div class=""textmate-source twilight"">                      <pre>def set_mailer_in_test<br />  ActionMailer::Base.delivery_method = :test<br />  ActionMailer::Base.perform_deliveries = true<br />  ActionMailer::Base.deliveries = []<br />end                                           </pre>                      </div>                      	<p>to Spec::Rails::EvalContext class in your spec_helper.rb.</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,13967,42,rails,"rspec,restful authentication",Rspec_1.0_and_Restful_Authentication
125,"Test Driven Rails Apps",,3,1180411381,9,,0,"<p>&nbsp;</p><h1>RSPEC</h1><h2>Example apps</h2><p>&gt; I&#39;ve just started DatedBackup (an rsnapshot-like utility), which has <br />&gt; about 500 LOC at the moment.  It is licensed under the GPL, and has<br />&gt; 190 example specs.  If you are interested, download the trunk from<br />&gt; Rubyforge:<br />&gt;<br />&gt; svn checkout svn://rubyforge.org/var/svn/datedbackup/trunk/ <br />&gt; svn checkout http://datedbackup.rubyforge.org/svn/trunk/<br />&gt;<br />&gt; It has a DSL baked in, which I know is up your alley.<br />&gt;<br />&gt; Of course, Rspec itself would probably be the model if you needed to <br />&gt; look at specs. <br /></p><p>Merb writes it&#39;s spec in rspec.  merb.devjavu.com </p><p>Check out Rubinius and Gecode/R (and RSpec hehe)<br />I would second Rubinius, because it would considerably lessen the  <br />learning curve for some one new to RSpec. <br /></p><p>&nbsp;</p><h1>Rspec Snippets</h1><pre>describe &quot;/users/create&quot; do<br />  before(:each) do<br />    User.stub!(:new).and_return(@user = mock_model(User))<br />  end<br /><br />  it &quot;should redirect to show on successful save&quot; do<br />    @user.should_receive(:save!)<br />    post :create<br />    response.should redirect_to(user_path(@user))<br />  end<br /><br />  it &quot;should re-render new on failed save&quot; do<br />    @user.should_receive(:save!).and_raise(ActiveRecord::RecordInvalid.new(@user))<br />    post :create<br />    response.should render_template(&#39;new&#39;)<br />  end<br />end<br /></pre><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><h1>Unit Test Snippets</h1><p>&nbsp;</p><p>To test if a specific item has been deleted:</p><pre>assert_raise(ActiveRecord::RecordNotFound){ Original.find(original.id) }</pre><p>&nbsp;</p><p>In general, to test if an item was added or deleted from a model, use assert_difference with Thing.count</p><pre>assert_difference Thing, :count do</pre><pre> post/create/whatever</pre><pre>end</pre><p>&nbsp;</p><p>&nbsp;</p><h1>NOTES</h1><p>when rails tacks on the asset id (e.g. from image_tag), turn it off in environments/test.rb</p><p>ENV[&quot;RAILS_ASSET_ID&quot;] = &#39;&#39; </p><p>&nbsp;</p><h1>Story Runner</h1><p>http://evang.eli.st/blog/2007/9/1/user-stories-with-rspec-s-story-runner</p><p>http://www.nabble.com/Getting-Started-with-Story-Runner-t4485820.html </p><p>http://dannorth.net/whats-in-a-story </p><p>http://pastie.caboo.se/92472 </p><p>&nbsp;</p><p>&nbsp;</p>",linoj,0,42,rails,,Test_Driven_Rails_Apps
143,"Geeky tattoo","This makes me laugh",3,1178606482,9,,2,"<p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div style=""text-align: center""><img style=""width: 238px; height: 321px"" src=""var/uploads/Image/geek-tattoo.jpg"" alt="" "" width=""238"" height=""321"" /></div><div style=""text-align: center""> </div> <p>&nbsp;</p><p>Without the end tag, this guy&#39;s a no-body...</p><p>:)</p><p>&nbsp;</p><p>http://www.flickr.com/photos/methodshop/411932018/</p><p>&nbsp;</p>",linoj,3299,39,musings,,Geeky_tattoo
124,"Authorization in Rails","Here's a review of several authorization add-on's for Rails. Whereas ""authentication"" refers to managing user login credentials, ""authorization"" is about managing role-based permissions to access specific areas of your site.  [May 15, added Super Simple Authorization to the list]",3,1178313491,9,,2,"<p>Not everyone is clear on the distinction between &quot;authentication&quot; and &quot;authorization&quot;. Basically <em>authentication</em> manages a list of users and their sessions, handles the login process by checking credentials (e.g. password), and registration. You can then restrict access to areas of your site based on whether a user is logged in or not. For Ruby on Rails applications, you can get authentication with the ActsAsAuthenticated (&quot;AAA&quot;) or RestfulAuthentication plug-ins (among others), or build your own. </p><p><em>Authorization</em> adds granularity. In addition to simply asking if you&#39;re logged in, different users can have different permissions , or &quot;roles&quot;. Thus normal Users may be able to post comments,  Moderators may be able to edit/delete comments, and Administrators may have full admin capability such as the ability to modify/remove users. <br /> </p><p>Here is a survey of a number of authorization add-ons available.</p><h2>Super Simple Authorization</h2><p>I recently watched the <a href=""http://www.railscasts.com/episodes/20"">RailsCast #20 &quot;Restricting Access&quot;</a> and decided to add it to this article. So here it is, at the top of our list.</p><p>If you have a User table (using AAA or RA) you can extend the table with an &quot;admin&quot; attribute, and then query current_user.admin? to test for authorization. Simple enough. You could extend this idea by having different booleans for editor, moderator and other roles you may require. </p><p>The screencast goes even simpler. If you really only want to restrict access to specific admin functions on an otherwise public site, you may not even need a Users table and registration at all. Instead your login page just asks the user for a password, which you store in the current session. Then you use an admin? method (to the application controller) which compares this against a hardcoded password.</p><h2>Authorization Recipe</h2><p>&quot;Authorizing Users with Roles&quot;, Recipe 32 in <em>Rails Recipes</em> by Chad Fowler. (Published June 2006).<br /></p><p>Builds from an existing User model, as described in Recipe 31 &quot;Authenticating Your Users&quot;, or generated with AAA.  </p><p>This recipe builds two new models for Roles and Rights, such that Users have Roles, Roles have Rights: (HABTM = has_and_belongs_to_many)<br /></p><ul><li>User HABTM roles</li><li>Role HABTM users</li><li>Role HABTM rights</li><li>Right HABTM roles</li></ul><p>A <em>right</em> specifies a Controller name and Action name. Add a before_filter in your controllers to check_authorization, which determines whether the current user has rights to the incoming action call. If not he&#39;s redirected to an error page. </p><p>Simple enough, and bare bones. The implementation is not RESTful but that wouldn&#39;t be hard to change. More complexity is left as an exercise to the reader.</p><h2>Simple_access_control</h2><p><a href=""http://opensvn.csie.org/mabs29/plugins/simple_access_control"">http://opensvn.csie.org/mabs29/plugins/simple_access_control</a>   </p><p>The simple_access_control plugin is basically the same as described above by Chad Fowler, offered in a plug-in, if you prefer. Tests are provided.  </p><h2>acl_system2</h2><p><a href=""http://prometheus.hki.uni-koeln.de/pandora-doc/plugins/acl_system2/"">http://prometheus.hki.uni-koeln.de/pandora-doc/plugins/acl_system2/</a>  </p><p><a href=""http://opensvn.csie.org/ezra/rails/plugins/dev/acl_system2/"">http://opensvn.csie.org/ezra/rails/plugins/dev/acl_system2/</a></p><p>(Revision 146, February 2006, very low activity, no forum) </p><p>Like the aforementioned, the acl_system2 plugin provides simple declarative authorization for protecting controller/actions using roles. It provides a flexible permissions string parser that appears quite convenient. For example, a controller can declare:</p><pre>access_control [:new, :create, :update, :edit] =&gt; &#39;(admin | user | moderator)&#39;,<br />                 :delete =&gt; &#39;admin&#39;</pre><p> while allows users, moderators, and admins to create and update items, but only admins to delete items. You can specify callback methods for redirecting or doing other stuff (e.g. setting flash messages) when access is permitted or denied. A helper method, restrict_to, is provided for views, e.g.</p><pre>&lt;% restrict_to &quot;(admin | moderator) &amp; !blacklist&quot; do %&gt;</pre><pre>  &lt;%= link_to &quot;Admin &amp; Moderator only link&quot;, :action =&gt;&#39;foo&#39; %&gt;</pre><pre>&lt;% end %&gt; </pre><h2>ActiveACL Plugin</h2><p><a href=""http://activeacl.rubyforge.org/"">http://activeacl.rubyforge.org/</a>  </p><p><a href=""http://rubyforge.org/projects/activeacl"">http://rubyforge.org/projects/activeacl</a> </p><p><a href=""http://phpgacl.sourceforge.net/demo/phpgacl/docs/manual.html"">http://phpgacl.sourceforge.net/demo/phpgacl/docs/manual.html</a> </p><p>(Release 0.2.1, December 2006, very low activity) </p><p>ActiveACL (as in <em>active control lists</em>) is based on PhpGacl and claims to be highly scalable, having optimized database access and caching. Permissions range from simple (controller/action) to object level, are assigned at runtime, and may be grouped and inherited.</p><p>To me, the documentation and implementation seems overly complicated and confusing. ActiveACL creates and manages ten (10) tables in the database. The <a href=""http://phpgacl.sourceforge.net/demo/phpgacl/docs/manual.html"">phpgacl manual</a>  is helpful though. Here&#39;s how I think it works (mapping their terminology to more common words):<br /> </p><p>Let&#39;s say we group our users (&quot;requesters&quot;) into roles (&quot;groups&quot;). Each user may or may not access different objects (&quot;targets&quot;) on the site. Targets can be models, individual objects in a model, controllers, and individual actions in a controller. </p><p>We assign access restrictions to each role group, and/or to individual requesters; those lower in the  tree override permissions higher up. So if &quot;John&quot; is an &quot;Moderator&quot; with access to all Articles, we can  keep him from accessing a specific article (e.g. &quot;Privacy Policy&quot;) by creating an access-denied for that one instance. </p><p>ActiveACL adds another table, called Section which is simply a way of categorizing access objects for the user interface (e.g. &quot;Rooms&quot;, &quot;Floors&quot;, &quot;People&quot;) but have nothing to do with actual groups in the tree. (This seems to add unnecessary complexity because our models most likely already have attributes for organizing large data sets). </p><p>ActiveACL can be used not just for managing user groups/roles, but other application domains like  server permissions, or maybe even modeling of engineering constraints. </p><h2>Authorization Plugin</h2><p><a href=""http://www.writertopia.com/developers/authorization"">http://www.writertopia.com/developers/authorization</a>  </p><p><a href=""http://rubyforge.org/projects/authorization/"">http://rubyforge.org/projects/authorization/</a> </p><p>(Version 1.0, September, 2006, low activity) </p><p>The Authorization plug-in provides role based authorization, along with a number of Railsey sugar like dynamic methods and a little grammer parser that potentially enhances the programming experience and readability of your code (a la domain specific languages, DSL). It is compatible with ActsAsAuthenticated plugin out of the box. Documentation is comprehensible, and good test coverage is provided.<br /></p><p>User objects just need to implement a <em>has_role?</em> method, using the provided <em>acts_as_authorized_user</em>. And models then use <em>acts_as_authorizable</em>. </p><p>Roles can be authorized for the entire application, a model class, or a specific object. The plugin provides a way of checking authorization at the class or instance method level using <em>permit</em> and <em>permit?</em> methods. It also provides english-like dynamic methods like &quot;user.is_manager_of project&quot; (where &quot;user&quot; acts as authorized, &quot;manager&quot; is a role, and &quot;project&quot; is an authorizable model). You can specify how control is redirected if authorization is denied. </p><p>Roles are set by <em>has_role</em> and <em>accepts_role</em> methods, with optional scope (such as <em>user.has_role &#39;site_admin&#39;</em> , or <em>user.has_role &#39;moderator&#39;, group</em>).  Models set roles for specific users (such as <em>project.accepts_role &#39;manager&#39;, user</em>). Then, dynamic methods let you say things like <em>user.is_manager_of? project</em>     </p><p>Cool! </p><h2>Goldberg</h2><p><a href=""http://goldberg.240gl.org/"">http://goldberg.240gl.org/</a> </p><p><a href=""http://rubyforge.org/projects/goldberg/"">http://rubyforge.org/projects/goldberg/</a> </p><p>(Version 0.2.0, April 2007, active) </p><p>The Goldberg plugin is an example of a high level generator that includes both authorization and authentication. It&#39;s like a framework built on top of the Rails framework, but actually sits beside it because you continue to develop your Rails app as usual, Goldberg does not interfere. You don&#39;t have to write any Goldberg-specific code in your application or use its API.</p><p>You define Roles (which can be has subgroup hierarchy), and assign permissions to the roles. A permssion is a controller/action that the role may access. Then you assign users to roles.  </p><p>Goldberg installs as application-wide before-filters (if not exactly, at least conceptually) that examines the routed controller/action against its database of permissions (&quot;credentials&quot;) for the current logged in user. Credentials are stored in the current session minimizing the need for database access between page loads.  </p><p>That&#39;s just the beginning. Goldberg also provides a little hierarchical page manager (approaching a CMS) for static content; a menu manager for redirecting to pages or any arbitrary controller/action; and a theme system for dynamically re-skinning your application. It does not impose a specific markup on you, however. Finally there is an API for custom access control within your application.   </p><h2>Defense in Depth -- Model Level Security </h2><p><a href=""http://www.perens.com/FreeSoftware/ModelSecurity/Tutorial.html"">http://www.perens.com/FreeSoftware/ModelSecurity/Tutorial.html</a>  </p><p><a href=""http://rubyforge.org/projects/model-security/"">http://rubyforge.org/projects/model-security/</a> </p><p>(Release 0.0.9 November, 2005, inactive)<br /></p><p>Second level of defense. You still use your views to hide links to unauthorized actions, and set before_filter&#39;s in controllers to prevent unauthorized action methods from executing. But should someone get through, the model can also provide security.</p><p>The <em>ModelSecurity</em> gem is a generator. It provides for example <em>let_read, let_write</em>, and <em>let_access</em> added to model declarations, allow fine grained permissions to a whole model or separate attributes.</p><p>Includes a user model and UserSuport mixin. (Seems to been written before AAA so integration with AAA requires investigation). </p><p>Includes a ModelSecurityHelper which makes fields conform to the model security settings (eg makes form fields hidden or read-only).</p><p>Looks like a well thought-out generalized solution. My concern is the performance overhead this generalization requires, whether it plays well with various other helpers, AJAX, etc. Maybe its too scaffold oriented,  and simply just overkill.  </p><h2>Conclusions</h2><p>If your requirements are pretty simple, just a few roles like Visitor, User, and Admin, and don&#39;t need a lot of granularity (just control access to specific controller/actions) then you could use the convenient acl_system2, or just roll your own.</p><p>If you&#39;re looking for a high level, well designed tool to build fairly conventional sites quickly in Rails, then Goldberg is a good shot. It has a lot of commonly needed features built in. Why rebuild it yourself each time? </p><p>On the other hand, if you&#39;re building an application with more complex authorization requirements, the Authorization plugin seems a very good bet. For most people it may be overkill. But any kind of groupware or social networking site may benefit from this one.<br /></p><p>&nbsp;</p>",linoj,68903,42,rails,,Authorization_in_Rails
123,"Debugging Rails Apps",,3,1178213972,9,,0,"<p>&nbsp;</p><p>&lt;%= debug @project %&gt;</p><p>&lt;%= @project.inspect %&gt;</p><p>&nbsp;</p><p>&nbsp;</p><p>flash[:debug] = &quot;Debug: #{self.action_name}&quot;</p><p>flash[:debug] = &quot;array: &quot; + foo.join(&quot; &quot;)<br /></p><p>flash[:debug] = &quot;params: &quot; + params.to_yaml </p><p>&nbsp;</p><p>&nbsp;</p><p>in script/console</p><p>&gt;&gt; reload!</p><p>&nbsp;</p><h4>model</h4><p>output to webrick/mogrel console</p><pre>puts varname </pre><p>or</p><pre>view puts varname</pre><p>or use RAILS_DEFAULT_LOGGER (if I remember correctly) and the output goes to log/production or log/development,  </p><pre>logger.debug</pre><p>&nbsp;</p><h4> routes</h4><p>http://svn.techno-weenie.net/projects/plugins/routing_navigator/</p><p>DEBUGGING ROUTES in console<br /></p><pre>  &gt;&gt; rs = ActionController::Routing::Routes </pre><pre>  &gt;&gt; puts rs.routes</pre><pre>  &gt;&gt; rs.recognize_path &quot;/project&quot;, :method =&gt; :get</pre><pre>  &gt;&gt; rs.generate :controller =&gt; &quot;projects&quot;</pre><p> named routes</p><pre>&gt;&gt; app.project_url(&quot;1&quot;)</pre><p>&nbsp;</p><p>or,</p><pre>$ ./script/console <br />  &gt;&gt; a = ApplicationController.new <br />  &gt;&gt; a.methods.sort.select {|m| m =~ /url$/ } </pre><p>&nbsp;</p>You can play with the regexp in the select block to filter to exactly   <br /> what you&#39;re looking for, but trying it should be illustrative. <h4>commandline </h4><pre>rake routes</pre><pre>rake routes CONTROLLER=posts</pre><pre>rake routes ACTION=show </pre><h4>comments in code</h4><p>http://dev.rubyonrails.org/changeset/6229</p><p>add FIXME, OPTIMIZE, and TODO comments to your source code that can then be extracted in concert with rake notes (shows all), rake notes:fixme, rake notes:optimize and rake notes:todo.  </p><p>&nbsp;</p><h4>in controllers</h4><p>render :text =&gt; params.inspect</p><p>&nbsp;</p><h4>ruby-debug</h4><p>add to bottom of environment.rb</p><pre># debugger</pre><pre>require &quot;ruby-debug&quot;</pre><pre>Debugger.start </pre><p>then put in your code</p><pre>debugger</pre><p>&nbsp;</p><h4>helpers</h4><p>dont know how to call helpers from console. So what I do is put a debugger call in a view template, then I can call any helpers accessible from that view.</p><p>&nbsp;</p><h2>know what you have</h2><p>rails</p><pre>$ gem list --local<br /> </pre><p>or if on edge</p><pre>$ svn info vendor/rails</pre><p>&nbsp;</p><p>&nbsp;</p><h2>Adding stuff to production logs</h2><pre>class ApplicationController &lt; ActionController::Base<br /> <br /> <br />  private  <br /> <br />    # Override exception handling to provide more information<br />    # in the log files.<br />    def rescue_action_locally(exception)<br />      cashboard_rescue_exception()<br />      super(exception)<br />    end<br /> <br />    def rescue_action_in_public(exception)<br />      cashboard_rescue_exception()<br />      super(exception)<br />    end<br /> <br />    # Adds extra shit to our error log so we can tell wtf<br />    # is going on when bad things happen.<br />    def cashboard_rescue_exception<br />      logger.error &#39;^^^ CASHBOARD SPECIFIC INFO FOR ABOVE ERROR&#39;<br />      logger.error &#39;--------------------------------------------------------------------------------&#39;<br />      begin<br />        logger.error &quot;URL    : #{request.env[&#39;PATH_INFO&#39;]}&quot;<br />        logger.error &quot;BROWSER: #{request.env[&#39;HTTP_USER_AGENT&#39;]}&quot;<br />        logger.error &quot;IP ADDR: #{request.env[&#39;REMOTE_ADDR&#39;]}&quot;<br />        # Try to find account if it&#39;s not set<br />        @account ||= Account.find_by_subdomain(account_subdomain)<br />        if @account<br />          logger.error &quot;ACCOUNT: #{@account.subdomain}&quot;<br />        end<br />        if @user<br />          logger.error &quot;USER   : #{@user.inspect}\n&quot;<br />        end<br />      rescue<br />        logger.error &#39;...An error happend logging specific errors...wtf?&#39;<br />      end<br />      logger.error &#39;--------------------------------------------------------------------------------&#39;<br />      logger.error &#39;&#39;<br />    end<br /> <br />end</pre><p>&nbsp;</p><p>&nbsp;</p>",linoj,0,42,rails,,Debugging_Rails_Apps
122,"When to use 'has one'","Why/when would you use has_one versus extend the model with more fields?",3,1177867076,9,,2,"<p>In designing my models I sometimes get confused if and when to break out fields into a separate model. I posted this question in the #rubonrails irc channel, here&#39;s some thoughts based on the comments. </p><p>Models (db tables) have attributes (columns). An attribute can be a string, integer, etc type. Or it can be a foreign-key, an ID of a row in another table.</p><p>In Rails, the child model has an item ID of its parent (it belongs_to the parent). And then you specify the relation in the parent model as either has_one or has_many.</p><h4>Use has_many for 1:N relations</h4><p>Sometimes the relations (and sematics) gets reversed, and become confusing. Consider a model (parent) that can have just one child, but the child can belong to multiple parents. (I&#39;m intentionally reversing the Rails terminology here to make a point in plain english).</p><p>This is NOT a has_one relation, and you must reverse the sematics. The parent has a foreign ID to a child record, and the child has_many parents. The parent belongs_to the child. <br /></p><p>For example, lets say our model of a PC says it has one operating system. But the OS can reside on many PC&#39;s. No, the PC does NOT &quot;has_one&quot; OS. Rather, the PC has a foreign ID of an OS item. Thus, the PC belongs_to the OS, and the OS has_many PC&#39;s. </p><h4>When has_one isn&#39;t needed in 1:1 </h4><p>Apart from 1:N relations, what if the parent only has only one child and the child has only one parent, why bother modeling the child as a separate table? Why not just include those child fields in the parent model in the first place?</p><p>Let&#39;s say I have a User model, and want to add options for preferences like avatar, homepage, etc. Should these be in a separate UserPreferences model? In this case the additional attributes just extend the User model,  and I&#39;d just add these columns to the existing User model.</p><p>So when do you need a separate model and a has_one relation? It depends on what you&#39;re modeling, it&#39;s a way of keeping things that are conceptually separate separated.</p><h4>Representing &quot;optional&quot; at a course level </h4><p>Contrary to what I just said above, consider the case of a set of user preferences that are completely optional. It could be handy to move them into their own model. Then you can test for the presence of a UserPreferences record for that user, as needed. Then the UserPreferences (child) would have an user_id attribute (belongs_to user), and the User model has_one user_preference.</p><h4>Treating the child as an object in itself</h4><p>A more significant example is when you need to separately manage objects in child model. For example, lets say each User on your system can have only one credit card. Yes, you could extend the User model with credit card information.</p><p>But lets also say you have some backend administrative tools for processing, managing, and reporting on credit cards. In that context, the credit card is an object on its own and may be should be managed in a separate model. Each creditcard has a user_id attribute pointing back to the User record, and the User has_one creditcard.  </p><h4>Reusing the child model</h4><p>Even if you don&#39;t need to track the child objects, there still can be alot of value in re-using the child model. </p><p>Let&#39;s say your Users can have only one address. But elsewhere in your app, other things have addresses, like Companies. Using a has_one relation lets you factor out the Address fields, and corresponding methods, DRYing up your code and models. Once you have an Address model, you can add useful stuff to it like formatting the strings, validations, testing, etc  </p><p>Thus, even though (presumably) no one shares a given Address record in your app (e.g. there&#39;s a unique 1:1 relation where each Address item is used only once), other parent models can share the db schema, model, and methods.<br /></p><br /><br /><p>&nbsp;</p>",linoj,3251,42,rails,,When_to_use_%27has_one%27
121,"Micro-CMS: Page Content using Model Methods","Often a page needs to contain a list of items maintained in a different model. This little enhancement to our <a href=""postings/A_Micro-CMS_in_Rails"">Micro-CMS</a> facilitates these content pages with minimal effort. ",3,1176686295,9,,2,"<p>This article is an enhancement to the Micro-CMS developed in these tutorials, <a href=""postings/A_Micro-CMS_in_Rails"">A Micro-CMS in Rails</a> , and <a href=""postings/Enhancements_to_Micro-CMS"">Enhancements to Micro-CMS</a> .</p>  <p>What we&#39;ll do is add a field to our pages that specifies a Model, Method, and Partial name, delimited by &#39;|&#39;. For example, if you had a model &quot;member&quot; for staff members, you might say &quot;Member|get_list|members_list&quot;. The page will then display the &quot;body&quot; field, followed by the list of Members. </p><br />First add the modelmethod attribute to the <em>page</em> model:<br /><pre>$ script/generate migration page_add_modelmethod</pre><p>Edit 003_page_add_modelmethod.rb<br /></p><pre>    def self.up</pre><pre>      <strong>add_column :pages, :modelmethod,    :string</strong></pre><pre>    end</pre><pre><br />    def self.down</pre><pre>      <strong>remove_column :pages, :modelmethod</strong></pre><pre>    end</pre><p>Then,    <br /></p><pre>$ rake db:migrate </pre><p>Next, lets handle this new model attribute. Edit controllers/pages_controller.rb in <em>def show</em> before the responds_to:</p><pre>    unless @page.modelmethod.nil?</pre><pre>      data_model, data_method, @data_partial = @page.modelmethod.split(/\s*\|\s*/) </pre><pre>      data_method ||= &#39;get_list&#39; </pre><pre>      @data_partial ||= data_model.downcase.pluralize + &#39;_list&#39;</pre><pre>      @data = Object.const_get(data_model).send(data_method)</pre><pre>    end<br /></pre><p>And edit views/pages/show.rhtml, insert this content after the @page.body,</p><pre>&lt;div&gt;</pre><pre>  &lt;%= @page.body %&gt;</pre><pre>  <strong>&lt;% unless @data.nil? %&gt;</strong></pre><pre><strong>    &lt;%= render :partial =&gt; @data_partial, :object =&gt; @data %&gt;</strong></pre><pre><strong>  &lt;% end %&gt;</strong></pre><pre>&lt;/div&gt;<br /></pre><p>OK. Now, a usage example. Since we already have a User model, lets just use that (rather than, say, creating a Member model for staff members as suggested in the beginning). Add to file models/user.rb</p><pre>    def self.get_list</pre><pre>      find(:all, :order =&gt; &quot;login&quot;)</pre><pre>    end</pre><p>Create a partial file view/pages/_users_list.rhtml<br /></p><pre>    &lt;table&gt;</pre><pre>      &lt;tr&gt;</pre><pre>        &lt;th&gt;User&lt;/th&gt;</pre><pre>        &lt;th&gt;Email&lt;/th&gt;</pre><pre>        &lt;th&gt;Joined&lt;/th&gt;</pre><pre>      &lt;/tr&gt;</pre><pre><br />    &lt;% for user in users_list %&gt;</pre><pre>      &lt;tr&gt;</pre><pre>        &lt;td&gt;&lt;%=h user.login %&gt;&lt;/td&gt;</pre><pre>        &lt;td&gt;&lt;%=h user.email %&gt;&lt;/td</pre><pre>        &lt;td&gt;&lt;%=h user.created_at %&gt;&lt;/td&gt;</pre><pre>      &lt;/tr&gt;</pre><pre>    &lt;% end %&gt;</pre><pre>    &lt;/table&gt;</pre><p>Create a new page named &quot;staff&quot;, with body like &quot;&lt;h2&gt;Meet our Staff&lt;/h2&gt;&quot;, and in the &quot;modelmethod&quot; field add:</p><pre>User|get_list|users_list</pre><p>where &quot;User&quot; is the model name, &quot;get_list&quot; is the method that returns a list of users, and &quot;users_list&quot; is the partial (file name pages/_users_list.rhtml). </p><p>The last two parts of the field are optional, and per our code, defaults to &quot;get_list&quot; and {model.downcase.pluralized + &#39;_list&#39;}, so in this case it would be sufficient to write</p><pre>User</pre><p>Note, you may need to add the modelmethod field to view/pages/new.rhtml and edit.rhml as follows:</p><pre>  &lt;p&gt;</pre><pre>    &lt;b&gt;Data Model|Method|Partial&lt;/b&gt;&lt;br /&gt;</pre><pre>    &lt;%= f.text_field :modelmethod %&gt;</pre><pre>  &lt;/p&gt;</pre><pre> </pre><p>(I welcome suggestions how to make this more Rails-way). </p><p>&nbsp;</p>",linoj,3591,42,rails,,Micro-CMS%3A_Page_Content_using_Model_Methods
120,"Enhancements to Micro-CMS","Here's some enhancements to my <a href=""postings/A_Micro-CMS_in_Rails"">Micro-CMS tutorial</a>, including adding an HTML editor (TinyMCE), authentication (with acts_as_authenticated), and email notifications.
",3,1176676922,9,,2,"<p>At the end of the first &quot;<a href=""postings/A_Micro-CMS_in_Rails"">A Micro-CMS in Rails</a> &quot; article I suggested some enhancements. Here&#39;s an implementation for some of them. </p><h2>TinyMCE Editor</h2><p>Lets add an HTML visual editor to our edit page screens. I&#39;ll use a popular one called TinyMCE.</p><p>Install the editor by downloading it from http://tinymce.moxiecode.com/download.php </p><p>and put it under your project&#39;s public/javascripts directory. As a shortcut, I keep one copy and symlink it:</p><pre>$ cd public/javascripts </pre><pre>$ ln -s ~/rails/plugins/tinymce/jscripts/tiny_mce .</pre><p>In both the pages/edit.rhtml and pages/new/rhtml, add the following lines:<br /> </p><pre>&lt;%= javascript_include_tag &quot;tiny_mce/tiny_mce&quot; %&gt;</pre><pre> </pre><pre>&lt;script type=&quot;text/javascript&quot; &gt;<br />  tinyMCE.init({<br />    mode:&quot;textareas&quot;, editor_selector : &quot;tiny_mce&quot;<br />  });<br />&lt;/script&gt; </pre><p>and replace</p><pre>&lt;%#= f.text_area :body %&gt;</pre><p>with<br /></p><pre>&lt;%= text_area &#39;page&#39;, &#39;body&#39; , :cols =&gt; &quot;60&quot;, :rows =&gt; &quot;20&quot;, :class =&gt; &#39;tiny_mce&#39; %&gt;</pre><p>That&#39;s all there is to it. Actually the javascript_include_tag could/should go into the &lt;head&gt; section of your layout, but that&#39;s only slow down loading other pages that don&#39;t use TinyMCE.</p><p>Read the TinyMCE docs to see customizations. For example, add the following to your tinyMCE.init line:</p><pre>&lt;script type=&quot;text/javascript&quot; &gt;</pre><pre><strong>  theme_advanced_toolbar_location : &quot;top&quot;,<br />  theme_advanced_toolbar_align : &quot;left&quot;,</strong><br />  tinyMCE.init({<br />    mode:&quot;textareas&quot;, editor_selector : &quot;tiny_mce&quot;<br />  });<br />&lt;/script&gt;  <br /></pre><h2>Authentication with acts_as_authenticated</h2><p>You probably want to restrict access to the create, update, and delete actions on your pages to only people who are authorized. Let&#39;s use the acts_as_authenticated plugin.</p><p>Install</p><pre>$ script/plugin install http://svn.techno-weenie.net/projects/plugins/acts_as_authenticated</pre><p>Generate basic user model</p><pre>$ script/generate authenticated user account</pre><pre>$ rake db:migrate </pre><p>Move this line from account_controller.rb to application.rb</p><pre> include AuthenticatedSystem </pre><p>Start your web server (script/server) and go to http://localhost:3000/account, that should redirect you to http://localhost:3000/account/signup . Add an account.</p><p>(Note, if you get an error it may be it can&#39;t find the controller from the &quot;any named page&quot; feature added in Part 1. Try commenting out the following lines in routes.rb:</p><pre># any named page</pre><pre>#map.connect &quot;:id&quot;, :controller =&gt; &quot;pages&quot;, :action =&gt; &quot;show&quot;</pre><pre>#map.connect &quot;:id.html&quot;, :controller =&gt; &quot;pages&quot;, :action =&gt; &quot;show&quot;</pre><p>Then add a before_filter to any controllers that you want to restrict access. Add this line to pages_controller.rb</p><pre>before_filter :login_required, :only =&gt; [ :edit, :update, :destroy ] <br /></pre><h2>Keep Sessions in the Database</h2><p>Sessions are stored on disk (by default), you can clean them out by deleting the session files under tmp/sessions/ <br /></p><p>If you prefer to keep sessions in the database,<br /></p><pre>$ rake db:sessions:create</pre><pre>$ rake db:migrate</pre><p>Then edit config/environment.rb, uncomment the following line<br /></p><pre>config.action_controller.session_store = :active_record_store</pre><p>Restart the server. Note, to clear sessions, run </p><pre>$ rake db:sessions:clear</pre><h2>Email Notifications when a Page is Edited</h2><p>Let&#39;s say there are multiple users with editing privileges and you want to receive email notices when a page is edited. We can do that with action_mailer. </p><pre>$ script/generate mailer AdminNotify itemcreated itemupdated itemdeleted</pre><p>Define an itemupdated message, edit models/admin_notify.rb</p><pre>   def itemupdated(page, sent_at = Time.now)<br />      @subject    = &#39;AdminNotify#itemupdated&#39;<br />      @body       = { :page =&gt; page }<br />      @recipients = &#39;linojon@gmail.com&#39;<br />      @from       = &#39;jonathan@linowes.com&#39;<br />      @sent_on    = sent_at<br />      @headers    = {}<br />    end</pre><p>and its template, views/admin_notify/itemupdated.rhtml<br /></p><pre>    AdminNotify#itemupdated</pre><pre><br />    A new item was Updated:</pre><pre>    Type: &lt;%= @page.class %&gt;</pre><pre>    Name: &lt;%= @page.title %&gt;</pre><p>I needed to setup the outgoing mailer in environments/development.rb, with something like:</p><pre>    config.action_mailer.server_settings = {<br />      :address      =&gt; &quot;smtp.myisp.net&quot;,<br />      :port         =&gt; 25,<br />      :domain       =&gt; &quot;www.mydomain.com&quot;,<br />      :authentication =&gt; :login,<br />      :user_name    =&gt; &quot;myaccount@myisp.net&quot;,<br />      :password     =&gt; &quot;mypassword&quot;<br />    } </pre><p>In pages_controller.rb, add this before the respond_to (or redirect) call in def update:</p><pre>AdminNotify.deliver_itemupdated(@page)</pre><p>Do the same for create and destroy actions. Note, for the destroy action, you need a local copy of page to avoid an error:<br /></p><pre>  def destroy</pre><pre>    @page = Pages.find(params[:id])</pre><pre>    Page.find(params[:id]).destroy</pre><pre>    AdminNotify.deliver_itemdeleted(@page)</pre><pre>    redirect_to :action =&gt; &#39;list&#39;</pre><pre>  end </pre><br /><p>&nbsp;</p>",linoj,4491,42,rails,,Enhancements_to_Micro-CMS
119,"Restful Authentication Notes",,3,1176536533,9,,0,"<p>&nbsp;</p><p>To examine many of the callable methods, see lib/authenticated_system.rb</p><h2>Install Notes (from Comments) </h2><p>If using &quot;singular resources&quot; (eg SessionController vs SessionsController), need to use map.resource(:session) rather than map.resources(:session) ,  and change sessionspath to sessionpath eg in app/views/session/new.rhtml</p>  <p>In authenticated.rb there is one instance of redirect_to_url , change to redirect_to</p> <p>It seems if you want to use the default activation code and templates you will need to add this to config/routes.rb</p>  <pre>map.activate &#39;/activate/:activation_code&#39;, :controller =&gt; &#39;users&#39;, :action =&gt; &#39;activate&#39;</pre> <p>&nbsp;</p><p>&nbsp;</p><p> http://www.rorsecurity.info/2007/10/28/restful_authentication-login-security/</p><p>&nbsp;</p>",linoj,0,42,rails,,Restful_Authentication_Notes
118,"Free Credit Card Numbers","I'm really happy I found this site. Now I can get rich, buy shoes for my bare feet, go to college, view porn, and get a new kidney for my dying friend.",3,1176533684,9,,0,"<p>Here&#39;s a site that contains valid-looking credit card numbers, and even has a downloadable program so you can generate your own. It&#39;s for people who are developing e-commerce web sites and want to test their credit card authentication procedures. Of course, the numbers are fake and can&#39;t be used to purchase stuff. But that didn&#39;t stop people from asking and <em>begging</em> for usable credit card numbers. Take a look at the comments on this site. Very funny. And pretty sad.</p><blockquote><p><a href=""http://www.darkcoding.net/credit-card-numbers/"">http://www.darkcoding.net/credit-card-numbers/</a> </p></blockquote><p>And, before you go, read this one last page. It&#39;s a classic:</p><blockquote><p><a href=""http://www.darkcoding.net/credit-card/free-credit-cards"">http://www.darkcoding.net/credit-card/free-credit-cards</a> </p></blockquote><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,28523,39,musings,,Free_Credit_Card_Numbers
117,"Misc rails snippets and idioms",,3,1176521839,9,,0,"<p>&nbsp;</p><h2>Pluralization</h2><ul><li>script/generate model thing </li><li>Model is singular (models/thing.rb)</li><li>DB table is plural (things)</li><li>Controller is plural (ThingsController)</li><li>URL is plural mysite.com/things/3</li></ul><p>&nbsp;</p><h2>Refactoring</h2><pre>[first_name, middle_initial_with_period, last_name].compact.join(&#39; &#39;)</pre><pre>def middle_initial_with_period</pre><pre>  &quot;#{middle_initial}.&quot; unless middle_initial.blank? # check for nil or empty string</pre><pre>end</pre><p>&nbsp;</p><p>&nbsp;</p><h2>Collections</h2><p>instead of </p><pre>&lt;% unless @projectpages.nil? || @projectpages.size.zero? -%&gt;</pre><p>how about @projectpages.empty?  #        Returns true if contains no elements.</p><p>or @projectpages.blank? # returns true if its receiver is nil or an empty string<br /></p><p>&nbsp;</p><p>create a hash named &#39;opts&#39;, set the options you want to set.  When reading the option &quot;verbose&quot;, use this: <br /> </p> <pre>​if opts.fetch(&#39;verbose&#39;, false)</pre> <p>​or<br /> </p> <pre>​if opts.fetch(&#39;verbose&#39;, nil) </pre> <p>depending on if you want false or nil as the default return if the option is unset </p><p>&nbsp;</p><p>how do i display results from two tables when using pagination?  (need to get user info for list of users)<br />​​[01:11a] ​changelog​​: ​paginate the users and :include =&gt; [:info]<br />on the results<br />​@user.info.what_he_had_for_lunch</p><p>&nbsp;</p><p>[&#39;foo&#39;,&#39;bar&#39;,&#39;far&#39;,&#39;boo&#39;] and [0,3,4,1] and turn it into {&#39;foo&#39;=&gt;0,&#39;bar&#39;=&gt;3... ?</p><pre>​Hash[*a.zip(b).flatten]  <br /></pre><h2>Controller</h2><p>Q: is params[:id] that is passed from a view of a controller, accessed by an action in a different controller which was originally targeted via </p><pre>&lt;%= link_to :controller =&gt; another, :action =&gt; new, :id =&gt; category %&gt;</pre><p> because in the action new, of the controller, i have something like: </p><pre>@forum = Forum.new(params[:form]), @forum.category_id = params[:id], @forum.save <br /></pre><p>A (tpope): here&#39;s a nifty way to write it: (think associations rather than id&#39;s)<br /></p><pre>@forum = Category.find(params[:id]).forums.build(params[:forum])</pre><p>that would mean, add this forum to the category specified, and builds a forum with params[:forum], it doesnt save it, you still have to do that.</p><p>&nbsp;</p><h4>conditional layout</h4><pre>  layout proc { |c| ([&quot;show&quot;].include? c.action_name) ? &quot;submissions&quot; : &quot;projects&quot;} </pre><p>&nbsp;</p><h2>Views (Templates)</h2><pre>link_to(image_tag(&#39;image_url&#39;), &#39;link_url&#39;)</pre><h4> comments</h4><p>single tag  </p><pre>&lt;%# ...comment... %&gt;</pre><p>rdoc format </p><pre>&lt;%</pre><pre>=begin</pre><pre>...comment...</pre><pre>=end%&gt;</pre><p>irb conditional</p><pre>&lt;% if false -%&gt;</pre><pre>...comment...</pre><pre>&lt;% end -%&gt;</pre><p>&nbsp;</p><h4>layouts</h4><p>&nbsp;</p><h2>Partials</h2><p>The index of the element in the collection for :partial =&gt; &#39;foo&#39; is a   <br /> local variable foo_counter available within the partial.</p><p>&nbsp;</p><h2>Routes</h2><pre>formatted_discussions_path(:format =&gt; :xml, &#39;foo&#39; =&gt; &#39;bar&#39;) -&gt; / <br /> discussions.xml?foo=bar</pre><pre> <br />formatted_discussion_path(:id =&gt; @discussions.first, :format =&gt; :xml, <br /> &#39;foo&#39; =&gt; &#39;bar&#39;) -&gt; /discussions/1.xml?foo=bar  </pre><p>&nbsp;</p><p>This provides a custom homepage for any user: site.com/my_name. The trick is that param[:login] arrives in your controller. (fails if login name same as a controller)</p> <pre>map.connect &#39;:controller/:action/:id&#39;</pre><pre>map.connect &#39;:login&#39;, :controller =&gt; &#39;account&#39;, :action =&gt; &#39;home_page&#39;</pre> <p>so maybe better</p><pre>map.connect &#39;home/:login&#39;, :controller =&gt; &#39;account&#39;, :action =&gt; &#39;home_page&#39;</pre> <p> see also http://leflo.de/blog/2007/04/05/literal-urls-with-rails</p><p>&nbsp;</p><p>url with text </p><pre>     def to_param<br />       &quot;#{id}-#{title.gsub(/[^a-zA-Z0-9]+/, &#39;_&#39;)}&quot;<br />     end <br /></pre><h4>Nested routes </h4><p>(see http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/bb568cfe8b834328?hl=en and http://weblog.jamisbuck.org/2007/2/5/nesting-resources)</p><pre>map.resources :users do |users| <br />    users.resources :products, :name_prefix =&gt; &quot;user_&quot; <br /> end <br /> map.resources :products <br /></pre><p>And in actions you would have something like: </p><pre>def index <br />   params[:user_id].nil? ? Products.find(:all) : User.find <br /> (params[:user_id]).products <br /> end </pre><p>You could also extract the condition to a before_filter</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><h2>Models</h2><h4>default value</h4><p>do i in the db</p><p>or override the reader attribute<br /> </p><pre>def supercomplex_attribute() </pre><pre>  read_attribute(&#39;deeeamn&#39;) || write_attribute(&#39;deeeamn&#39;, calculate_that_shiz) </pre><pre>end </pre><p>or</p><pre>Model::my_attribute=(my_parameter=&quot;something&quot;)</pre><p>or do a before_validation, or after_initialize</p><p>&nbsp;</p><p>To do “optimistic locking”, remember to use lock_version field in models and include it as a hidden field in update forms</p><p> <br />When deleting an item that has an association, and you need to delete any associated items,</p><pre> def before_destroy <br />   unless note_id.nil? <br />      Note.find(note_id).destroy <br />    end <br />  end  </pre><p>How to make sure user has permission to view a requested item. (http://www.therailsway.com/2007/3/26/association-proxies-are-your-friend) Instead of this:</p><pre><span class=""r"">def</span> <span class=""fu"">show</span><br />  <span class=""r"">unless</span> <span class=""iv"">@todo_list</span> = <span class=""co"">TodoList</span>.find_by_id_and_user_id(params[<span class=""sy"">:id</span>], current_user.id)<br />  redirect_to <span class=""s""><span class=""dl"">&#39;</span><span class=""k"">/</span><span class=""dl"">&#39;</span></span><br />  <span class=""r"">end</span><br /><span class=""r"">end</span></pre><p>do this: (lookup through the currrent user)<br /></p><pre><span class=""r"">def</span> <span class=""fu"">show</span><br />  <span class=""iv"">@todo_list</span> = current_user.todo_lists.find(params[<span class=""sy"">:id</span>])<br /><span class=""r"">end</span></pre><p>Common association queries can be cached using has_many association (see http://www.therailsway.com/2007/3/26/association-proxies-are-your-friend)</p><p>something like</p><pre><span class=""r"">class</span> <span class=""cl"">User</span> &lt; <span class=""co"">ActiveRecord</span>::<span class=""co"">Base</span><br />  has_many <span class=""sy"">:completed_lists</span>, <span class=""sy"">:class_name</span>=&gt;<span class=""s""><span class=""dl"">&quot;</span><span class=""k"">TodoList</span><span class=""dl"">&quot;</span></span>, <span class=""sy"">:conditions</span>=&gt;{<span class=""sy"">:completed</span>=&gt;<span class=""pc"">true</span> }<br />  has_many <span class=""sy"">:active_lists</span>,    <span class=""sy"">:class_name</span>=&gt;<span class=""s""><span class=""dl"">&quot;</span><span class=""k"">TodoList</span><span class=""dl"">&quot;</span></span>, <span class=""sy"">:conditions</span>=&gt;{<span class=""sy"">:completed</span>=&gt;<span class=""pc"">false</span>}<br /><span class=""r"">end</span></pre><p>&nbsp;</p><p>Only the default Id is indexed. You have to create indexes for other things. Typically this might be foreign keys, but could be any other field you find by, like name, or fields that you&#39;re sorting on, etc. (http://weblog.jamisbuck.org/2006/10/23/indexing-for-db-performance)</p><pre>notes = user.notes</pre><p>generates sql that looks like this</p><pre>SELECT *<br />  FROM notes<br /> WHERE user_id = 1234</pre><p>without an index it will scan the entire table (for big tables thats a problem) Can use http://www.agilewebdevelopment.com/plugins/query_analyzer to see where the work is.</p><p>Iterating over attributes : product.attributes return a Hash object, so you want: <br /> </p><pre>&lt;ul&gt; </pre><pre> &lt;% product.attributes.each_pair do |k,v| %&gt; </pre><pre>   &lt;li&gt;&lt;%= k %&gt; =&gt; &lt;%= v %&gt;&lt;/li&gt; </pre><pre> &lt;% end %&gt; </pre><pre> &lt;/ul&gt; </pre><p>Sorting:  </p><pre>:order =&gt; &#39;field1, field2 DESC&#39; </pre><p>&nbsp;</p>Delete all records related with an object: <pre>obj.otherobjs.find(:all, :conditions =&gt; {:value =&gt; nil}).clear </pre><p>&nbsp;</p><p>group records by an attributes for view: use the classify method (http://source.mihelac.org/articles/2007/05/12/rails-in-practice-group-records-by-condition )<br /></p><pre>@groups = NewsArticle.find(:all).to_set.classify {<br />  |article| article.published_on.year}</pre><p>&nbsp;</p><p>dynamic find:</p><p>http://media.railscasts.com/videos/005_using_with_scope.mov </p><p>instead of </p><pre>@tasks = Task.find(:all, :conditions =&gt; [&#39;complete = ?&#39; false&#39;])</pre><pre>@task = Task.find(:first, :conditions =&gt; [&#39;complete = ?&#39; false&#39;], :order =&gt; &#39;created_at DESC&#39;) <br /></pre><p>do </p><pre>@tasks = Task.find_all_by_complete(false)</pre><pre>@task = Task.find_by_complete(false, :order =&gt; &#39;created at DESC&#39;) </pre><p>if project has_many tasks, can find task for a project instance with</p><pre>@tasks = @project.tasks.find_all_by_complete(false) </pre> <p>could create a model method find_incomplete then just call @tasks = @project.tasks.find_incomplete. Add scope to the model method so you can pass other find parameters:</p><pre>def self.find_incomplete(options = {})</pre><pre>  with_scope :find =&gt; options do</pre><pre>    find_all_by_complete(false, :order =&gt; &#39;created_at DESC&#39;)</pre><pre>  end</pre><pre>end</pre><p>then</p><pre>@tasks = @project.tasks.find_incomplete :limit =&gt; 20 </pre><p>symbol_to_proc--</p><pre>projects = Project.find(:all)</pre><pre>projects.collect { |p| p.name }</pre><pre># or </pre><pre>projects.collect(&amp;:name) # makes a proc of the symbol</pre><pre>projects.collect(&amp;:name).collect(&amp;:downcase)</pre><pre>projects.all?(&amp;:valid?)</pre><pre>projects.any?(&amp;:valid?)<br />projects.each(&amp;:save!)</pre><pre> </pre><p>A has_many will fill save its belongs_to, but not vice versa. so do room.house.save, room.save</p><p>preventing an attribute from being writable:</p><pre>class Foo &lt; ActiveRecord::Base<br />  def name=(n)<br />    if [ &#39;name 1&#39;, &#39;name 2&#39;, &#39;name 3&#39;, &#39;name 4&#39; ].include?(self.name)<br />      self.errors.add(:name,&quot;Can&#39;t rename a protected foo.&quot;)<br />    else<br />      self.attributes[&#39;name&#39;] = n<br />    end<br />  end<br />end</pre><p>&nbsp;</p><p>  # Protect internal methods from mass-update with update_attributes<br />  attr_accessible :email, :email_confirmation, :password, :password_confirmation, :time_zone <br /></p><h4>using attrib name instead of id </h4><pre>  def to_param<br />    login<br />  end<br /><br />  def self.find_by_param(*args)<br />    find_by_login *args<br />  end</pre><p>&nbsp;</p><h4>Find with SQL</h4><pre>Task.count(:all, :conditions =&gt; [&quot;complete=? and priority=?&quot;, false, 3])</pre><pre>Task.count(:all, :conditions =&gt; [&quot;complete=? and priority IS ?&quot;, false, nil])</pre><pre>Task.count(:all, :conditions =&gt; [&quot;complete=? and priority IN (?)&quot;, false, [1,3]])</pre><pre>Task.count(:all, :conditions =&gt; [&quot;complete=? and priority IN (?)&quot;, false, 0...3])</pre><pre> </pre><pre>Task.count(:all, :conditions =&gt; { :complete =&gt; false, :priority =&gt; 1 })</pre><pre>Task.count(:all, :conditions =&gt; { :complete =&gt; false, :priority =&gt; nil })<br />Task.count(:all, :conditions =&gt; { :complete =&gt; false, :priority =&gt; [1,3] })<br /></pre><pre>Task.count(:all, :conditions =&gt; { :complete =&gt; false, :priority =&gt; 1..3 })</pre><pre> </pre><pre>Task.find_all_by_priority(1..3).size</pre><pre> </pre><h4>empty association <br /></h4><p>I have a &quot;Product has_many :sales&quot; relationship in my app, and I need to find all Product objects that have no associated Sale objects.  Normally I could just find on a null foreign key, but that wont work with a has_many since the foreign key is stored in the associated object. So what does my :conditions need to be find all items that have zero items in a has_many association? This would have to be a bit different if eager loading was involved.</p><pre>Product.find( :all,</pre><pre>:select =&gt; &quot;DISTINCT products.*&quot;,</pre><pre>:joins =&gt; &quot;LEFT JOIN sales ON products.id = sales.product_id&quot;,</pre><pre>:conditions =&gt; &quot;sales.id IS NULL&quot;)</pre><p>&nbsp;</p><h2> </h2><h2>Validation<br /> </h2> <p>Use validation rules like<br /></p> <pre> validates_length_of :category, :within =&gt; 1..20 </pre><pre>  validates_uniqueness_of :category, :message =&gt; &quot;already exists&quot; </pre><pre>validates_associated :category </pre><pre>  validates_format_of :done_before_type_cast, :with =&gt; /[01]/, :message=&gt;&quot;must be 0 or </pre><pre>1&quot; </pre><pre>  validates_inclusion_of :priority, :in=&gt;1..5, :message=&gt;&quot;must be between 1 (high) and </pre><pre>5 (low)&quot; </pre><pre>  validates_presence_of :description </pre><pre>  validates_length_of :description, :maximum=&gt;40 </pre><pre>  validates_foror 1&quot; </pre><p>&nbsp;</p><div class=""content"">         <p>Using save! and update_attribute! can be a really nice way of implementing validation without giving up on the simple structure of the controller. The ActiveRecord::RecordInvalid exception can then be rescued in the application controller: (from comments in http://www.therailsway.com/2007/2/20/signout-part-2 )<br /></p>   <pre><br />def rescue_action(exception)<br />  case exception<br />  when ActiveRecord::RecordNotFound<br />    respond_with_404<br />  when ActiveRecord::RecordInvalid<br />    respond_with_422(exception.record)<br />  else          <br />    super<br />  end<br />end<br /><br />def respond_with_422(record)<br />  respond_to do |format|<br />    format.html { render :action =&gt; (record.new_record? ? &#39;new&#39; : &#39;edit&#39;) }<br />    format.xml  { render :xml =&gt; record.errors.to_xml, :status =&gt; 422 }<br />    format.js   { render :json =&gt; record.errors.to_json, :status =&gt; 422 }<br />  end<br />end<br /></pre>  	<p>The idea is taken from the beast or mephisto source code.</p>       </div><p>&nbsp;</p><p>word count: something like </p><pre><span class=""ident"">split</span><span class=""punct"">(/</span><span class=""regex""><span class=""escape"">\s</span>+</span><span class=""punct"">/).</span><span class=""ident"">length</span> </pre><p>&nbsp;</p><h3>email validation</h3><pre># Taken from the iana tld list. See http://data.iana.org/TLD/tlds-alpha-by-domain.txt. Last populated by a script Feb &#39;08.<br />TLD_LIST_REXP_LEGO = &quot;(?:AC|AD|AE|AERO|AF|AG|AI|AL|AM|AN|AO|AQ|AR|ARPA|AS|ASIA|AT|AU|AW|AX|AZ|BA|BB|BD|BE|BF|BG|BH|BI|BIZ|BJ|BM|BN|BO|BR|BS|BT|BV|BW|BY|BZ|CA|CAT|CC|CD|CF|CG|CH|CI|CK|CL|CM|CN|CO|COM|COOP|CR|CU|CV|CX|CY|CZ|DE|DJ|DK|DM|DO|DZ|EC|EDU|EE|EG|ER|ES|ET|EU|FI|FJ|FK|FM|FO|FR|GA|GB|GD|GE|GF|GG|GH|GI|GL|GM|GN|GOV|GP|GQ|GR|GS|GT|GU|GW|GY|HK|HM|HN|HR|HT|HU|ID|IE|IL|IM|IN|INFO|INT|IO|IQ|IR|IS|IT|JE|JM|JO|JOBS|JP|KE|KG|KH|KI|KM|KN|KP|KR|KW|KY|KZ|LA|LB|LC|LI|LK|LR|LS|LT|LU|LV|LY|MA|MC|MD|ME|MG|MH|MIL|MK|ML|MM|MN|MO|MOBI|MP|MQ|MR|MS|MT|MU|MUSEUM|MV|MW|MX|MY|MZ|NA|NAME|NC|NE|NET|NF|NG|NI|NL|NO|NP|NR|NU|NZ|OM|ORG|PA|PE|PF|PG|PH|PK|PL|PM|PN|PR|PRO|PS|PT|PW|PY|QA|RE|RO|RS|RU|RW|SA|SB|SC|SD|SE|SG|SH|SI|SJ|SK|SL|SM|SN|SO|SR|ST|SU|SV|SY|SZ|TC|TD|TEL|TF|TG|TH|TJ|TK|TL|TM|TN|TO|TP|TR|TRAVEL|TT|TV|TW|TZ|UA|UG|UK|UM|US|UY|UZ|VA|VC|VE|VG|VI|VN|VU|WF|WS|YE|YT|YU|ZA|ZM|ZW)&quot;.freeze<br /># Matches an email address that has a valid top level domain.<br />DOMAINED_EMAIL_ADDRESS_REGEXP = /@.*\.#{TLD_LIST_REXP_LEGO}\z/i<br /># Matches an email address that conforms to RFC822<br />RFC_822_EMAIL_ADDRESS_REGEXP = /\A(?:[^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x22(?:[^\x0d\x22\x5c\x80-\xff]|\x5c[\x00-\x7f])*\x22)(?:\x2e(?:[^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x22(?:[^\x0d\x22\x5c\x80-\xff]|\x5c[\x00-\x7f])*\x22))*\x40(?:[^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x5b(?:[^\x0d\x5b-\x5d\x80-\xff]|\x5c[\x00-\x7f])*\x5d)(?:\x2e(?:[^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x5b(?:[^\x0d\x5b-\x5d\x80-\xff]|\x5c[\x00-\x7f])*\x5d))*\z/<br /><br />validates_format_of :email_address, :with =&gt; DOMAINED_EMAIL_ADDRESS_REGEXP, :message =&gt; &quot;must have a valid domain name&quot;<br />validates_format_of :email_address, :with =&gt; RFC_822_EMAIL_ADDRESS_REGEXP, :message =&gt; &#39;must conform to RFC822 (see &lt;a href=&quot;http://en.wikipedia.org/wiki/E-mail_address&quot;&gt;Wikipedia&lt;/a&gt;)&#39; <br /></pre><h2>Forms</h2><p>To start a page form with cursor in the first field</p><pre>&lt;script language=&quot;JavaScript&quot;&gt; </pre><pre>&lt;!-- Begin </pre><pre>function setFocus() { </pre><pre>  if (document.forms.length &gt; 0) { </pre><pre>    var field = document.forms[0]; </pre><pre>    for (i = 0; i &lt; field.length; i++) { </pre><pre>      if ((field.elements[i].type == &quot;text&quot;) || (field.elements[i].type == &quot;textarea&quot;) </pre><pre>|| (field.elements[i].type.toString().charAt(0) == &quot;s&quot;)) { </pre><pre>        document.forms[0].elements[i].focus(); </pre><pre>        break; </pre><pre>         } </pre><pre>      } </pre><pre>   } </pre><pre>} </pre><pre>//  End --&gt; </pre><pre>&lt;/script&gt; </pre><p>&nbsp;</p><p>To update a bunch of rows&#39; attributes on one shot, submit items as array, and the updater method loops through each, as in (from Rails in 4 days tutorial), a &quot;done&quot; checkbox for each item only updates those that are changed,<br /></p><pre>def updater </pre><pre>    @params[:item].each { |item_id, contents| </pre><pre>      item = Item.find(item_id) </pre><pre>      if item.done != contents[:done].to_i </pre><pre>        item.update_attribute(:done,contents[:done]) </pre><pre>      end </pre><pre>    } </pre><pre>    redirect_to :action =&gt; &#39;list&#39; </pre><pre>  end </pre><p><br />in which case, may need to do this test, and ask &quot;Do you want to save first?&quot; before jumping to a different operation instead of hitting &quot;save&quot;</p><p>&nbsp;</p><p>correcting url input</p> <div id=""qhide_114241"" class=""qt"" style=""display: block""><pre>&gt; Is there a easy way to fix this, or do i need a method that checks </pre><pre> &gt; for, and includes, the &quot;http://&quot; part of a url? </pre> <pre><br /></pre></div> <pre>You should always store the http:// with the link. Try to validate </pre> <pre> your model width szh like this: </pre>   <pre>web = &quot;<a rel=""nofollow"" href=""http://www.domain.de/"" target=""_blank"">www.domain.de</a>&quot; <br /> </pre> <pre>&gt;&gt; puts (web[0..7] != &quot;http://&quot;) ? &quot;http://#{web}&quot; : web </pre> <p>&nbsp;</p> <p>virtual attributes: in model. form.rhtml can use virtual attribute :full_name even tho not in the db<br /></p><pre>&lt;%= f.text_field :full_name %&gt;</pre><pre> </pre><pre>def full_name</pre><pre>  [first_name, last_name.join(&#39; &#39;)</pre><pre>end</pre><pre>def full_name=(name)</pre><pre>  split = name.split(&#39; &#39;,2)</pre><pre>  self.first_name = split.first</pre><pre>  self.last_name = split.last<br />end</pre><p>&nbsp;</p><p>&nbsp;</p><h4>select list</h4><p> &lt;%= select_tag &#39;product_line&#39;, options_for_select(product.model)%&gt;</p><p>options_from_collection_for_select </p><p>a selection list (from a collection)</p><pre>&lt;p&gt;&lt;label for=&quot;page_parent_id&quot;&gt;Parent page&lt;/label&gt;&lt;br/&gt;<br />&lt;%= select(&quot;page&quot;, &quot;parent_id&quot;, Page.find(:all).collect {|p| [ p.name, p.id ] }) %&gt;&lt;/p&gt;</pre><p>&nbsp;</p><h4>habtm checkboxes </h4><p>using category_ids method provided by habtm (if you&#39;re using &#39;through&#39; you need to provide your own category_ids method)<br /></p><pre> &lt;% for category in Category.find(:all) %&gt;</pre><pre>  &lt;%= check_box_tag &quot;product[category_ids][]&quot;, category.id, @product.categories.include?(cateogry) %&gt;</pre><pre>  &lt;%= category.name %&gt;</pre><p>in controller def update, to handle unchecked all<br /></p><pre>parms[:category_ids] ||= [] </pre><p>&nbsp;</p><h4>field_for</h4><p>model</p><pre><span class=""r"">def</span> <span class=""fu"">myaction</span><br />   <span class=""iv"">@article</span> = <span class=""co"">Article</span>.new<br />   <span class=""iv"">@thing</span> = <span class=""co"">Thing</span>.new<br /><span class=""r"">end</span></pre><p> view</p><pre><span class=""il""><span class=""dl"">&lt;%</span> form_for <span class=""sy"">:article</span>, <span class=""iv"">@article</span> <span class=""r"">do</span> |f| <span class=""dl"">%&gt;</span></span><br />  <span class=""il""><span class=""dl"">&lt;%=</span> f.text_field <span class=""sy"">:title</span> <span class=""dl"">%&gt;</span></span><br />  blah blah..<br />  <span class=""il""><span class=""dl"">&lt;%</span> fields_for <span class=""sy"">:thing</span>, <span class=""iv"">@thing</span> <span class=""r"">do</span> |t| <span class=""dl"">%&gt;</span></span><br />     <span class=""il""><span class=""dl"">&lt;%=</span> t.text_field <span class=""sy"">:thinglol</span> <span class=""dl"">%&gt;</span></span><br />  <span class=""il""><span class=""dl"">&lt;%</span> <span class=""r"">end</span> <span class=""dl"">%&gt;</span></span><br /><span class=""il""><span class=""dl"">&lt;%</span> <span class=""r"">end</span> <span class=""dl"">%&gt;</span></span></pre><p>&nbsp;</p><h4>errors</h4><p>in new.html.erb </p><p>  &lt;% if @user and @user.errors -%&gt;<br />    &lt;% @user.errors.each do |attr,msg| -%&gt;<br />      &lt;p style=&quot;color:red; padding-left: 5em&quot;&gt;&lt;%= &quot;#{attr} - #{msg}&quot; %&gt;&lt;/p&gt;<br />    &lt;% end -%&gt;<br />  &lt;% end -%&gt;<br /> </p><h2>Date Time</h2><p> You might want to avoid timezone-specific times in your DB. Try setting the <a href=""http://api.rubyonrails.org/rails/classes/ActiveRecord/Timestamp.html"">default ActiveRecord timezone</a> to :utc, and use Time.now.utc instead of Time.now when storing times. This simplifies TZ support in your app, and avoids issues when your server is in a different zone. (from http://www.therailsway.com/2006/11/19/tracks-part-3 )</p><p>&nbsp;</p><h4>field</h4><pre class=""textmate-source""><pre class=""sunburst""><span class=""keyword keyword_operator keyword_operator_comparison keyword_operator_comparison_ruby"">&lt;</span><span class=""keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_augmented keyword_operator_assignment_augmented_ruby"">%=</span> f<span class=""meta meta_function-call meta_function-call_method meta_function-call_method_without-arguments meta_function-call_method_without-arguments_ruby"">.<span class=""entity entity_name entity_name_function entity_name_function_ruby"">date_select</span></span> <span class=""constant constant_other constant_other_symbol constant_other_symbol_ruby"">:expiration</span>, <span class=""constant constant_other constant_other_symbol constant_other_symbol_ruby"">:label</span> =&gt; <span class=""string string_quoted string_quoted_double string_quoted_double_ruby"">&quot;Expiration Date&quot;</span>, <br />                  <span class=""constant constant_other constant_other_symbol constant_other_symbol_ruby"">:start_year</span> =&gt; <span class=""support support_class support_class_ruby"">Date</span><span class=""meta meta_function-call meta_function-call_method meta_function-call_method_without-arguments meta_function-call_method_without-arguments_ruby"">.<span class=""entity entity_name entity_name_function entity_name_function_ruby"">today</span></span><span class=""meta meta_function-call meta_function-call_method meta_function-call_method_without-arguments meta_function-call_method_without-arguments_ruby"">.<span class=""entity entity_name entity_name_function entity_name_function_ruby"">year</span></span>, <br />                  <span class=""constant constant_other constant_other_symbol constant_other_symbol_ruby"">:end_year</span> =&gt; <span class=""support support_class support_class_ruby"">Date</span><span class=""meta meta_function-call meta_function-call_method meta_function-call_method_without-arguments meta_function-call_method_without-arguments_ruby"">.<span class=""entity entity_name entity_name_function entity_name_function_ruby"">today</span></span><span class=""meta meta_function-call meta_function-call_method meta_function-call_method_without-arguments meta_function-call_method_without-arguments_ruby"">.<span class=""entity entity_name entity_name_function entity_name_function_ruby"">year</span></span> <span class=""keyword keyword_operator keyword_operator_arithmetic keyword_operator_arithmetic_ruby"">+</span> <span class=""constant constant_numeric constant_numeric_ruby"">10</span>, <br />                  <span class=""constant constant_other constant_other_symbol constant_other_symbol_ruby"">:use_month_numbers</span> =&gt; <span class=""constant constant_language constant_language_ruby"">true</span>, <br />                  <span class=""constant constant_other constant_other_symbol constant_other_symbol_ruby"">:discard_day</span> =&gt; <span class=""constant constant_language constant_language_ruby"">true</span>,<br />                  <span class=""constant constant_other constant_other_symbol constant_other_symbol_ruby"">:order</span> =&gt; [<span class=""constant constant_other constant_other_symbol constant_other_symbol_ruby"">:month</span>, <span class=""constant constant_other constant_other_symbol constant_other_symbol_ruby"">:year</span>] <span class=""string string_quoted string_quoted_other string_quoted_other_literal string_quoted_other_literal_other string_quoted_other_literal_other_ruby"">%&gt;</span> </pre></pre><p> then in controller </p><pre>Date.civil(params[&quot;expiration(1i)&quot;], params[&quot;expiration(2i)&quot;], params[&quot;expiration(3i)&quot;]) </pre><p>(?? from fowlduck) </p><p>&nbsp;</p><h2>Images</h2><p>avatar helper (from recluxus) [has some error?]<br /></p><pre><span class=""r"">def</span> <span class=""fu"">getavatarimage</span>( prf, options = {})<br />    logger.info prf.nickname<br />    <span class=""iv"">@avatars</span> = prf.avatars<br />    <span class=""r"">if</span> <span class=""iv"">@avatars</span> <span class=""r"">and</span> <span class=""iv"">@avatars</span>.length &gt; <span class=""i"">1</span> <span class=""r"">then</span><br />      <span class=""iv"">@avatar</span> = <span class=""co"">Avatar</span>.find(<span class=""sy"">:first</span>, <span class=""sy"">:conditions</span> =&gt; [<span class=""s""><span class=""dl"">&#39;</span><span class=""k"">profile_id=? and activeavatar=true</span><span class=""dl"">&#39;</span></span>,prf.id])<br />      image_tag (url_for_file_column(<span class=""s""><span class=""dl"">&quot;</span><span class=""k"">avatar</span><span class=""dl"">&quot;</span></span>, <span class=""s""><span class=""dl"">&quot;</span><span class=""k"">photo</span><span class=""dl"">&quot;</span></span>,options[<span class=""sy"">:type</span>]) ) <br />    <span class=""r"">else</span><br />      image_tag (prf.gender.defaultimage ,options[<span class=""sy"">:type</span>])<br />    <span class=""r"">end</span><br />  <span class=""r"">end</span></pre><p> how i call it &lt;%= getavatarimage @profile, :type=&gt; &quot;mini&quot; %&gt;</p><p>&nbsp;</p><h2>Exceptions</h2><p>&nbsp;</p><h2>Optimization</h2><p>if just need count, dont use find, you can use size, count or length, for different purposes. Counting indexed records is fast. (find also loads associated records).<br /> </p><p>or better use counter_cache </p><h4>eager loading</h4><p>tasks belongs_to project and has_many comments, and comments belongs_to users<br /></p><p>&nbsp;</p><pre>@tasks = Tasks.find(:all, :include =&gt; :project)</pre><pre>@tasks = Tasks.find(:all, :include =&gt; [:project, :comments])</pre><pre>@tasks = Tasks.find(:all, :include =&gt; [:project, {:comments =&gt; :user}]) # eager load through assocation<br /> <br /></pre><h4>counter cache column</h4><p>create a migration - add a count column, eg</p><pre>add_column :projects, :tasks_count, :integer, :default =&gt; 0</pre><pre>Project.reset_column_information </pre><pre>Project.find(:all).each do |p| </pre><pre>  p.update_attribute :tasks_count, p.tasks.length # dont use size because that&#39;ll try to use this new colum!</pre><pre>end </pre><p> in task.rb model</p><pre>belongs_to :project, :counter_cache =&gt; true</pre><p>&nbsp;</p><h2>Testing</h2><pre>  <span class=""r"">def</span> <span class=""fu"">test_should_update_extra_data_xhr</span><br />    login_as <span class=""sy"">:someone</span><br />    xhr <span class=""sy"">:put</span>, <span class=""sy"">:update_extra_data</span>, <span class=""sy"">:extra_data</span> =&gt; {<span class=""s""><span class=""dl"">&quot;</span><span class=""k"">gender</span><span class=""dl"">&quot;</span></span>=&gt;<span class=""s""><span class=""dl"">&quot;</span><span class=""k"">female</span><span class=""dl"">&quot;</span></span>, <span class=""s""><span class=""dl"">&quot;</span><span class=""k"">first_name</span><span class=""dl"">&quot;</span></span>=&gt;<span class=""s""><span class=""dl"">&quot;</span><span class=""k"">jacqui</span><span class=""dl"">&quot;</span></span>, <span class=""s""><span class=""dl"">&quot;</span><span class=""k"">last_name</span><span class=""dl"">&quot;</span></span>=&gt;<span class=""s""><span class=""dl"">&quot;</span><span class=""k"">maher</span><span class=""dl"">&quot;</span></span>, <span class=""s""><span class=""dl"">&quot;</span><span class=""k"">address</span><span class=""dl"">&quot;</span></span>=&gt;<span class=""s""><span class=""dl"">&quot;</span><span class=""k"">123 main street</span><span class=""dl"">&quot;</span></span>}<br />    assert_equal <span class=""s""><span class=""dl"">&quot;</span><span class=""k"">maher</span><span class=""dl"">&quot;</span></span>, assigns[<span class=""s""><span class=""dl"">&quot;</span><span class=""k"">current_user</span><span class=""dl"">&quot;</span></span>].extra_data.last_name<br />    assert_response <span class=""sy"">:success</span><br />    assert_template <span class=""s""><span class=""dl"">&quot;</span><span class=""k"">update_extra_data.rjs</span><span class=""dl"">&quot;</span></span><br />  <span class=""r"">end</span></pre><p>&nbsp;</p><h4>fixtures</h4><p>for deferred constraints: </p><pre>require &#39;active_record/fixtures.rb&#39;<br /><br />class Test::Unit::TestCase<br />private<br />  def load_fixtures_with_constraints_deferred<br />    ActiveRecord::Base.transaction do<br />      ActiveRecord::Base.connection.execute %(SET CONSTRAINTS ALL DEFERRED;)<br />      load_fixtures_without_constraints_deferred<br />    end<br />  end<br />  alias_method_chain :load_fixtures, :constraints_deferred</pre><p>&nbsp;</p><pre>end</pre><pre> </pre><h2>OTHER</h2><h4>patching rails</h4><p>hypnos22: if it literally overwrites it, then you should include it in your environment.rb and put it in RAILS_ROOT/lib  in fact i have a folder called &quot;patches&quot; in my lib dir, and some code in environment.rb that includes every file in there at load time, to overwrite/append the various rails methods i need to change or fix or whatever</p><p>you probably don&#39;t need the &#39;require&#39; statement at the top.  doesn&#39;t matter what you call the file - just require it in environment.rb (which happens after rails has been loaded) and it will overwrite the existing textilize method</p><p>&nbsp;</p><p>on hacking patching plugins &quot;Evil Twin&quot; http://errtheblog.com/post/19679</p><p>&nbsp;</p><p>&nbsp;</p><h4>logs</h4><p>filtering sensitive logs , in the controller,<br /></p><pre>filter_parameter_logging &quot;password&quot; </pre><p>&nbsp;</p><p>&nbsp;</p>",linoj,0,42,rails,,Misc_rails_snippets_and_idioms
116,"ActiveScaffold Notes",,3,1176432840,9,,0,"<p>&nbsp;</p><h2>Installation</h2><pre>$ script/plugin install http://activescaffold.googlecode.com/svn/tags/active_scaffold </pre><p> add to your layout &lt;head&gt; section:<br /></p><pre>&lt;%= javascript_include_tag :defaults %&gt;</pre><pre>&lt;%= active_scaffold_includes %&gt;</pre><p> add to your controller:<br /></p><pre>active_scaffold :&lt;your_model_name&gt;</pre><p> you can omit your_model_name if controller is same name as the model, e.g.</p><pre>class CompaniesController &lt; ApplicationController<br />  layout &quot;admin&quot;<br />  active_scaffold<br />end</pre><h4>For RESTful Routing/Controllers<br /> </h4><p>Edit routes.rb , add :active_scaffold =&gt; true to map.resources e.g.</p><p>Remove all actions from the generated controller, and replace with active_scaffold call.<br /> </p><p>As needed, you can add back the restful actions, such as def show.</p><h2>Examples<br /></h2><h4>Columns Config<br /></h4><p>By default, all columns are shown in all views (except id). To set sitewide defaults, put this in ApplicationController or in environment.rb</p><pre>ActiveScaffold.set_defaults do |config| <br />  config.ignore_columns.add [:created_at, :updated_at, :lock_version]<br />end</pre><p> To set columns in a specific controller, there&#39;s alot of control:<br /></p><pre>  active_scaffold do |config|</pre><pre>    config.label = &quot;Important Stuff&quot;</pre><pre>    list.columns.exclude :position</pre><pre>    list.sorting = { :name =&gt; &#39;ASC&#39; }</pre><pre>    columns[:body].label = &quot;&lt;em&gt;Contents&lt;/em&gt;&quot;</pre><pre>  end</pre><h4>Columns Config - Per Request</h4><p>Just add a before_filter to the controller that sets values in the active_scaffold_config object, e.g. </p><pre>before_filter :update_table_config</pre><pre> </pre><pre>def update_table_config</pre><pre>    if current_user</pre><pre>        active_scaffold_config.label = current_user.name+&quot;&#39;s Stuff&quot;</pre><pre>    end</pre><pre>end</pre><h2>Misc Features </h2><h4>to_label</h4><p>string description of a record, searches for: :to_label, :name, :label, :title, :to_s. Can define a to_label method to customize string description. </p><h4>frontends</h4><p>(future) skinnable; global or local </p><h4>embedded scaffolds </h4><p>use a scaffold from another controller (?!?!) <br /></p><ul><li>render :active_scaffold =&gt; controller_id</li><li>can specify constraints-- simple search conditions, kept in session, represented as field/value pairs <br /></li></ul><p>example:</p><pre>render :active_scaffold =&gt; &#39;users&#39;, </pre><pre>       :constraints =&gt; {:active =&gt; 1, :user_group =&gt; 15}, </pre><pre>       :params =&gt; {:hello =&gt; &#39;world&#39;}, </pre><pre>       :label =&gt; &#39;Active Editors&#39;</pre><h4>virtual columns</h4><p>provide a method to populate columns that dont exist in the record.</p><h4>localization</h4><p>using the Object#as_() method</p><h4>security</h4><p>(new, not tested). Restrict access to model, record, action, current user. Also granularity of action, record, or column. </p><ul><li>security.current_user_method - names method that returns current_user object (default :current_user, as in acts_as_authenticated)</li><li>security.default_permission - bool (default :true), set :false and then explicitly enable stuff)</li><li>Controller method: def #{action_name}_authorized?</li><li>Model methods: #{column_name}<em>authorized_for</em>#{crud_action}? , #{column_name}_authorized? , authorized_for_#{crud_action}?</li></ul><h2>Configuration API (Settings)<br /></h2><p>global or local (app vs controller). </p><p>core or action-specific settings.</p><ul><li><strong>Config</strong> actions, action_links, columns, frontend, ignore_columns, label, active_scaffold_controller_for()</li><li><strong>List</strong> columns, empty_field_text, label, per_page, sorting, conditions_for_collection()<br /></li><li><strong>Create</strong> columns (.add_subgroup),   label, link, multipart, persistent, before_create_save()<br /></li><li><strong>Update</strong> columns (.add_subgroup), label, link, multipart, before_update_save()<br /> </li><li><strong>Delete</strong> link<br /></li><li><strong>Show</strong> columns, label, link<br /></li><li><strong>Search</strong> columns, full_text_search (default :true), link<br /></li><li><strong>LiveSearch</strong> columns, full_text_search, link<br /></li><li><strong>Nested</strong> add_link,  set_link <br /> </li><li><strong>Subform </strong>columns</li></ul><br />  <ul><li><strong>Action link: </strong>action, parameters, method, type, label, confirm, security_method, crud_type, inline, page, popup, position, association.reverse</li></ul><br /><ul><li><strong>Column</strong>: calculate, css_class, description, includes, label, set_link, required, search_sql, sort, sort_by, ui_type </li></ul> <h2>Customization API (Overrides)<br /></h2><p>global or local (app vs controller).</p><p>conventional methods in model, vs template overrides (in a special directory).</p><p>local methods in controllers or helpers, with template overrides in controller&#39;s view directory. </p><ul><li><strong>Form Overrides</strong> - custom input format of a column (used by Create and Update): helper, partial </li><li><strong>Field Overrides</strong>  - custom display format a column <br /></li><li><strong>Template Overrides</strong> - replace (or wrap) any template<br /> </li></ul><br /><p>&nbsp;</p><h2>Examples &amp; Links<br /> </h2><p>http://www.blognow.com.au/q/64722/Ruby_on_Rails_and_BackgroundRB_-_multiple_progress_bars_with_ActiveScaffold.html</p><p>http://www.ibm.com/developerworks/linux/library/l-activescaffold/</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,0,42,rails,activeScaffold,ActiveScaffold_Notes
115,"Streamlined Notes",,3,1176406309,9,,0,"<p>&nbsp;</p><p>&nbsp;</p><h2>Installation</h2><p>You can get the Edge version at: http://svn.streamlinedframework.org/edge/streamlined <br /></p><h4>Update existing installed plugin </h4><p>$ rake streamlined:install_files  <br /></p><p>&nbsp;</p><h2>Metamodel</h2><p>If you installed from the Edge version, you can run: <br /> </p><pre>rake streamlined:model MODEL=[yourmodel]  </pre><p>That generatesa file in RALS_ROOT/app/streamlined named yourmodel_ui.rb with the shell of the declarative model language in it. </p><p>&nbsp;</p><p>&nbsp;</p><h2>UI</h2><p>create folder app/streamlined/</p><p>&nbsp;</p><h2>A Different Model Name</h2><p>For each model you need a separate controller with the same name, or you&#39;ll have to override it.  <br /></p><p>http://www.streamlinedframework.org/articles/2007/03/02/new-feature-custom-model-names</p><p>add the alias inside the controller (after the acts_as_streamlined), e.g </p><pre>class EvaluationsController &lt; ApplicationController<br />   layout &#39;streamlined&#39;<br />   acts_as_streamlined<br />   streamlined_model &#39;Eval&#39;<br />end</pre><p>&nbsp;</p><h2>User Columns</h2><p>user_columns :login, :first_name, :last_name<br />    # <br />    # Column order is reflected in the view. By default, user_columns excludes:<br />    # <br />    # * Any field whose name ends in &quot;_at&quot; (Rails-managed timestamp field)<br />    # * Any field whose name ends in &quot;_on&quot; (Rails-managed timestamp field)<br />    # * Any field whose name ends in &quot;_id&quot; (foreign key)<br />    # * The &quot;position&quot; field (Rails-managed ordering column)<br />    # * The &quot;lock_version&quot; field (Rails-managed optimistic concurrency)<br />    # * The &quot;password_hash&quot; field (if using a hashed-password strategy)</p><p>&nbsp;</p><p>override_columns  </p><p>&nbsp;</p><p>show_columns</p><p>    # Defines the columns that should be visible when the user clicks the<br />    # &quot;Show&quot; button at runtime.  Takes an array of column names.  For example:<br />    #<br />    #   show_columns :login, :first_name, :last_name<br />    #<br />    # Column order is reflected in the view. show_columns uses the same<br />    # default column exclusions as user_columns.</p><p>&nbsp;</p><p>edit_columns</p><p>    # Defines the columns that should be editable by the user at runtime.<br />    # Takes an array of column names.  For example:<br />    #<br />    #   edit_columns :login, :first_name, :last_name<br />    #<br />    # Column order is reflected in the view. edit_columns uses the same<br />    # default column exclusions as user_columns.<br /> </p><h2>Relationship Columns</h2><p>Let&#39;s say you have two models: Employee (belongs_to) Department.  Here&#39;s how the employee_ui.rb file might look: <br /> </p><pre>class EmployeeUI &lt; Streamlined::UI <br />     user_columns   :first_name, <br />                    :last_name, <br />                    :position, {:read_only}, <br />                    :department, {:edit =&gt;   <br />                       {:select, </pre><pre>                        :fields =&gt; [:name, :leader_name], </pre><pre>                        :separator =&gt; &#39;:&#39;}} <br /> end <br /></pre><p>This says that the columns that will appear on the Employee screen   are, in order, FirstName, LastName, Position, and Department, that   Position will be read only, and that Department should be edited with   the :select view, and that the dropdown in that view should use the   departments&#39; :name and :leader_name properties (joined with a colon)   as the text in the select box. </p><p>The user_columns command lets you define exactly which attributes of the model will be used in the views.  So, let&#39;s say you have your Trail model class, and it has attributes like :name, :length, :altitude, :last_cleaned_at, etc. Using user_columns, you could do: <br /> </p><pre>user_columns :name, <br />             :length, <br />             :location, {:show =&gt; :name, :fields =&gt; [:city, :state]} </pre><p>Which would keep :altitude and :last_cleaned from showing up on the views. The location relationship column has two things you can set: the :show view and the :edit view.  The above syntax says: show the location relationship using the view called &quot;name&quot;, and use the fields :city and :state to create the name of the location.</p><p>&nbsp;</p><h2>Overriding Defaults<br /></h2><h4>Side Menu and Top Menu items </h4><p>vendor/plugins/streamlined/helpers/layout_helper.rb </p><h4>Table Helpers </h4><p>vendor/plugins/streamlined/helpers/table_helper.rb  <br /></p><h4>Tests</h4><p>vendor/plugins/streamlined/integration_tests.rb</p><p>&nbsp;</p><h2>3rd Party Included</h2><p>AjaxScaffoldGenerator css as_style.css (uses generator?) </p><p>windows.js http://blogus.xilinus.com/pages/javawin</p><p>overlib.js</p><p>rico_corner.js</p><p>&nbsp;</p><p>streamlined.css [does <strong>not</strong> seem to encapsulate styles like body button etc]</p><p>streamlined.js</p><p>&nbsp;</p><p>&nbsp;</p> <p>&nbsp;</p>",linoj,0,42,rails,,Streamlined_Notes
114,"Boston to London","I'm not the first to know about this easter egg in Google Maps but I like it.",3,1176402829,9,,2,"<p>If you ask Google Maps to give you directions from Boston to London it tells you to &quot;Swim across the Atlantic Ocean-- 3,462 mi.  Total trip 29 days, 6 hours.<br /><br /><a href=""http://tinyurl.com/26jfcu"">http://tinyurl.com/26jfcu</a> <br /><br />:)<br /></p><p>&nbsp;</p><p>&nbsp;</p>",linoj,3329,39,musings,,Boston_to_London
113,"Deploying my first rails site","Pick a host, setup ssh, do a manual deploy, then setup Capistrano, get it to work with a local svn repos, and cap deploy.",3,1175750009,9,,2,"<p>&nbsp;</p><h2>Pick a Host and Sign Up</h2><p>While I already have several hosts for other website work, I decided to find one with dedicated experience in Rails hosting (which none of mine have). I read around the web, looked at a number of hosts&#39; sites, and considered my options. Different people have different opinions, needs, priorities, and experiences. </p><p>I ended up looking seriously at 2 options: slicehost.com, which gives you a virtual machine with root access to setup and destroy as you wish; and hostingrails.com, a more turnkey service with a cPanel, etc. For now, my priority is to get up quickly to experience the full <em>develop, debug, deploy</em> cycle, without getting too caught up in the server side details. </p><p>A basic account on hostingrails.com is only $3.59 per month (a cup of coffee and bagel). I get a shared IP, 5gb disk, and 20gb/mo bandwidth to use as my sandbox. Signup was instant. I created a subdomain in my registrar for this host, e.g. <em>rails.myserver.com</em> and pointed it to my new IP.</p><h2>Establish SSH Key</h2><p>ref: http://www.hostingrails.com/forums/wiki_thread/27 </p><p>Connect to server, and accept the fingerprint:</p><pre>local$ ssh &#39;user@rails.myserver.com&#39;</pre><pre>server$ exit  </pre><p>If file doesn&#39;t exist ~/.ssh/id_dsa.pub , create one now: (accept defaults, just press enter when prompted)</p><pre>local$ ssh-keygen -t dsa</pre><p>Copy key to ther server</p><pre>local$ ssh-copy-id -i ~/.ssh/id_dsa.pub user@rails.myserver.com <br /></pre><p>Oops, I dont have this command on my mac. Here&#39;s the manual steps. If ~/.ssh doesn&#39;t exist on the server, create it and copy over the id_dsa.pub file:</p><pre>server$ mkdir ~/.ssh</pre><pre>local$ scp ~/.ssh/id_dsa.pub user@rails.myserver.com:.ssh/authorized_keys <br /></pre><p>However, if ~/.ssh/authorized_keys exists on the server then you need to append it instead:<br /></p><pre>local$ scp ~/.ssh/id_dsa.pub user@rails.myserver.com:homebox_dsa.pub</pre><pre>server$ cat homebox_dsa.pub &gt;&gt; .ssh/authorized_keys</pre><pre>server$ rm homebox_dsa.pub </pre><h2>Manual Deploy</h2><p>First, I&#39;ll deploy my first Rails app manually (later I&#39;ll setup Capistrano). I&#39;m setting up the host for a single app, for now (especially since that&#39;s how most of the wiki doc&#39;s on hostingrails are written), and then redo it for multiple domains and/or subdirectories.</p><p>ref: http://www.hostingrails.com/forums/wiki_thread/1 </p><p><strong>1. Copy over the database</strong></p><p>I won&#39;t go into explanations here. I&#39;m using mySQL5 on both systems. You can do this through GUI tools (phpMyAdmin, CocoaSql) or via command line. On the server, create the database, create a user, assign user to database with permissions, then load the schema (and data, if you want). For example, </p><pre>local$ mysqldump -p --opt myproject_development &gt;myproject.sql</pre><pre>local$ scp myproject.sql user@rails.myserver.com</pre><pre>server$ mysql -u hruser_dbuser -p hruser_dbname &lt;myproject.sql</pre><p><strong>2. Create online versions of config files </strong></p><p>Here&#39;s how hostingrails recommends keeping track of server versions of these files: create copies named environment.rb.online and database.yml.online.</p><p>database.yml.online only needs to contain:</p><pre>production:<br />  adapter: mysql<br />  database: [your_hostingrails_username]_[your_database_name]<br />  username: [your_hostingrails_username]_[your_database_username]<br />  password: your_password</pre><p>and in environment.rb.online uncomment the line:</p><pre>ENV[&#39;RAILS_ENV&#39;] ||= &#39;production&#39;</pre><p>Also, change .htaccess to use dispatch.<strong>fcgi</strong> (from dispatch.cgi)</p><pre>RewriteRule ^(.*)$ dispatch.fcgi [QSA,L]</pre><p>and comment out this line at the top:</p><pre># AddHandler fastcgi-script .fcgi</pre><p><strong>3. Generate empty Rails app on server</strong></p><pre>server$ rails myproject</pre><p><strong>4. Upload only the folders and files needed by the app</strong></p><ul><li>whole app folder</li><li>stuff in public/ incuding images/, javascripts/, stylesheets/, .htaccess <br /></li><li>config/database.yml.online, config/environment.rb.online</li></ul><p><strong>5. Make public folder public_html</strong></p><pre>server$ mv ~/public_html ~/public_html_backup</pre><pre>server$ ln -s ~/apps/myproject/public ~/public_html</pre><p><strong>6. Restart your server process and go</strong>  </p><pre>server$ killall -usrl dispatch.fcgi</pre><p>link browser to the server (e.g. http://rails.myserver.com) TaaDa! (fingers crossed). If problems, check the log/production.log file </p><h2>Setting Up Capistrano</h2><p>Capistrano lets you control all your server side setup and processes from your local machine&#39;s command line. First I do a generic Capistrano install.</p><p>ref: http://www.hostingrails.com/forums/wiki_thread/5</p><pre>local$ sudo gem install termios</pre><pre>local$ sudo gem install -y capistrano </pre><p>Capistrano-ize my app</p><pre>local$ cd myproject</pre><pre>local$ cap --apply-to .</pre><p>That creates the files config/deploy.rb and lib/tasks/capistrano.rake</p><p>Configure for a single project on a single server. In deploy.rb, set vars as needed:</p><pre>set :domain, &quot;rails.myserver.com&quot; </pre><pre>set :user, &quot;myaccount&quot;</pre><pre>set :application, &quot;myproject&quot;</pre><pre>set :deploy_to, &quot;/home/#{user}/apps/#{application}&quot; </pre><pre><br />set :rails_env, :production<br /></pre><pre>set :chmod755, %w(app config db lib public vendor script tmp public/dispatch.cgi public/dispatch.fcgi public/dispatch.rb)</pre><pre>set :use_sudo, false</pre><p> roles:</p><pre>role :web, domain</pre><pre>role :app, domain</pre><pre>role :db,  domain, :primary =&gt; true</pre><h2>Capistrano + local svn </h2><p>OK. Now, my objective is to deploy from my local Subversion repository. (Although it&#39;s more common to deploy from a shared svn repos over the Internet, I&#39;m keeping my repos local because a) i dont need to share them right now, and b) i have a relatively slow internet connection).  </p><p>ref: http://blog.wolfman.com/articles/2006/12/06/a-capistrano-scm-module-for-local-svn-access</p><p>Download this, de-tar, and put the 2 files into lib/tasks/:</p><pre>http://blog.wolfman.com/files/local_subversion_with_rsync_3.tar.gz</pre><p>Add these lines to deploy.rb (change your paths as needed):</p><pre>require &#39;lib/tasks/local_subversion_rsync.rb&#39;<br />set :scm, Capistrano::SCM::LocalSubversionRsync<br />set :repository_is_not_reachable_from_remote, true</pre><pre>set :tmpdir_local, &quot;/Users/me/temp&quot;<br />set :tmpdir_remote, &quot;/home/user/tmp&quot;</pre><pre> </pre><pre>set :repository, &quot;file:///Users/jonathan/svn/myproject/trunk&quot; </pre><p>[ssh option]</p><p>Add fcgi tasks (for Mongrel see the <a href=""http://blog.wolfman.com/articles/2006/12/06/a-capistrano-scm-module-for-local-svn-access"">wolfman post</a>). </p><pre># FCGI TASKS</pre><pre>desc &quot;FCGI is already running, so we don&#39;t really need the spinner script, but we have it create the initial symlink for us&quot;<br />task :spinner, :roles =&gt; :app do<br />  run &quot;rm -rf /home/#{user}/public_html;ln -s #{current_path}/public /home/#{user}/public_html&quot;<br />end<br /><br />desc &quot;Restart the FCGI Process&quot;<br />task :restart, :roles =&gt; :app do<br />  run &quot;cd #{current_path}; killall dispatch.fcgi&quot;<br />  cleanup<br />end <br /></pre><pre> </pre><pre># GENERAL TASKS</pre><pre>desc &quot;Set the proper permissions for directories and files on HostingRails accounts&quot;<br />task :after_deploy do<br />  chmod755.each do |item|<br />    run &quot;chmod 755 #{current_path}/#{item}&quot;<br />  end<br />end <br /></pre><h2>Cap Deploy </h2><p>Do this once, the first time. </p><pre>local$ cap setup</pre><pre>local$ cap cold_deploy</pre><p>Then anytime you have a new release to deploy</p><pre>local$ cap deploy</pre><p>or</p><pre>local$ cap deploy_with_migrations</pre><p>There&#39;s some final fixup that I have to do manually. These should be integrated into this process, but I&#39;ll leave that for another day.</p><pre>server$ cd ~/apps/myproject/config</pre><pre>server$ mv database.yml.online database.yml</pre><pre>server$ mv environment.rb.online environment.rb</pre><p>Lastly, the public/dispatch.fcgi got overwritten and has the ruby path on my mac rather than the server, so change the first line to:</p><pre>#!/usr/local/bin/ruby</pre><p>OK. Let&#39;s restart the server and go</p><pre>local$ cap restart</pre><p>Browse to your site. </p><p>(Again, crossing your fingers might help, although it can get in the way of typing on the keyboard).</p><p>&nbsp;</p>",linoj,9151,42,rails,,Deploying_my_first_rails_site
112,"kill -9","As I continue to get in touch with my inner nerd, I couldn't stop laughing watching this video.",3,1175489984,9,,2,"<br /><div align=""center""><object height=""350"" width=""425""><param name=""movie"" value=""http://www.youtube.com/v/Fow7iUaKrq4""></param><param name=""wmode"" value=""transparent""></param><embed src=""http://www.youtube.com/v/Fow7iUaKrq4"" width=""425"" height=""350"" type=""application/x-shockwave-flash""></embed></object> </div><br /><div align=""center"">Lyrics and Downloadable mp3 (Creative<br />Commons License) are here:<br /><a href=""http://www.monzy.com/intro/killdashnine_lyrics.html"">http://www.monzy.com/intro/killdashnine_lyrics.html</a> </div><br /><br />",linoj,4562,39,musings,,kill_-9
111,"Using Subversion and Xaraya","Now that I decided to use Subversion, I've set it up for my Xaraya projects too.",3,1175145516,9,,3,"<p>In the <a href=""postings/Using_Subversion_and_Rails"">previous article</a>  I went into how and why I chose <a href=""http://subversion.tigris.org/"">Subversion</a>  for my revision control system for my own projects. And not just new ones, I have a slew of <a href=""http://www.xaraya.com"">Xaraya</a>  projects that I continue to maintain and improve which need to get into svn. Here&#39;s what it takes to do that. And I wrap it up into an sh script. My platform is OSX on an iMac.  </p><h2>Install Subversion</h2><p>To install subversion, if you have MacPorts, just run</p><pre>$ sudo port install subversion +tools</pre><h2>Create Project Repository</h2><p>My repository is in ~/svn . We&#39;ll build an initial directory layout with trunk/ tags/ and branches/ directories, as recommended (by everyone): </p><pre>$ mkdir ~/svn</pre><pre>$ svnadmin create --fs-type=fsfs ~/svn/myproject</pre><pre>$ REPOS=file:///Users/jonathan/svn/myproject</pre><pre>$ svn mkdir --message=&quot;Initial project layout&quot; $REPOS/trunk $REPOS/tags $REPOS/branches<br /> </pre><h2>Add All Files</h2><p>I&#39;m going to assume you already have a Xaraya project installed, in a myproject directory. We start by checking out the (empty) trunk  and then adding all the files in the project. <br /></p><pre>$ cd myproject</pre><pre>$ svn checkout $REPOS/trunk .</pre><pre>$ svn add --force . </pre><h2>Remove Files We Won&#39;t Keep </h2><p>Remove (revert) any added files that we know we don&#39;t want to keep in the repos. For example,<br /> </p><pre>$ svn revert .htaccess</pre><pre>$ svn revert favicon.ico</pre><pre>$ svn revert -R var/* <br /></pre><pre> </pre><p>The var/ subdir contains the cache and other runtime files we don&#39;t want in the repos. But we might want to keep the config file, so let&#39;s add it back</p><pre>$ svn add var/config.system.php </pre><p>The var/messaging dir contains site-specific templates so lets keep that one too.  </p><pre>$ svn add --force var/messaging  </pre><h2>Remove Xaraya Code (optional)</h2><p>If you don&#39;t want to keep the Xaraya code itself in the repos, you can remove it. But we&#39;ll keep the modules/ directory name around so we can selectively add specific modules back in (thus rever &quot;modules/*&quot; rather than &quot;modules&quot;).</p><p>As for theme, I consider Xaraya_Classic unchangeable, so I can revert to it if my own theme really screws up. You might want to remove other themes in the themes/ directory if you don&#39;t change them either. </p><pre>$ svn revert *.php</pre><pre>$ svn revert -R includes</pre><pre>$ svn revert -R xaradodb</pre><pre>$ svn revert -R modules/*</pre><pre>$ svn revert -R themes/Xaraya_Classic </pre><h2>Custom Code</h2><p>If you&#39;ve made any custom changes to individual modules, you can add those back in. In particular, my projects tend to have custom files in modules/xarpages/xarfuncapi, xardecodeapi, xarencodeapi, and xarcustomapi directories. For example</p><pre>$ svn add --force modules/xarpages/xarfunapi</pre><pre>$ svn add --force modules/xarpages/xarcustomapi</pre><pre>$ svn add --force modules/xarpages/xarencodeapi</pre><pre>$ svn add --force modules/xarpages/xardecodeapi</pre><p>Note that subversion saves symbolic links as a file, it does not follow the links. So this won&#39;t work if modules/xarpages is a symlink. For example, often I keep a single copy of a Xaraya release in a separate part of my disk, and symlink to it from various projects. </p><h2>Ignores</h2><p>When we get listings from &quot;svn status&quot;, all these non-working files show up even though they&#39;re not revision controlled, and that can get confusing. So tell subversion to ignore (and not show) them. <br /> </p><pre>$ svn propset svn:ignore &quot;.htaccess</pre><pre>favicon.ico</pre><pre>*.php</pre><pre>includes</pre><pre>xaradodb&quot; .</pre><pre>$ svn propset svn:ignore &quot;*&quot; var </pre><p>Note the list of file patterns are &quot;newline-delimited&quot; (why?) per the svn manual. <br /></p><h2>Commit Changes</h2><p>Finally commit all the stuff we&#39;ve setup</p><pre>svn commit --message=&quot;Initial add&quot;</pre><p>One last thing, I want to set a property with the Xaraya version used in this project. This really isn&#39;t specified in any of the files we&#39;ve added to the repository and it needs to get recorded.</p><pre>svn propset xaraya &quot;1.2.1&quot; .</pre><p>That&#39;s about it. </p>  <h2>A Script</h2><p>Here&#39;s a shell script that does this. You can run it on an existing Xaraya project. Afterward you&#39;ll likely still need to run additional svn commands to add all the project files you want in the repository (or use a handy GUI front-end).</p><p><em>Usage: xar-svn PROJECT [VERSION]</em></p><p>The script assumes your project directory is a subdir of the current one. Thus, for example,</p><pre>$ cd ~/www</pre><pre>$ xar-svn myproject 1.2.1</pre><p>This will create a repos for myproject, check in all the files in ~/www/myproject/, except for the core Xaraya program files, and give the trunk a property &quot;xaraya&quot; with value &quot;1.2.1&quot;. </p><p><a href=""var/uploads/File/xar-svn.sh"">Download the script</a> </p><p>This script is derived from <a href=""http://blog.teksol.info/articles/2006/03/09/subversion-primer-for-rails-projects"">here</a> , and the same disclaimer applies: <em>NO IMPLIED WARRANTY. This script might destroy twenty years worth of work, and I cannot be held responsible.</em> <br /></p><p>&nbsp;</p>",linoj,7016,"38,37","xamp,xaraya",,Using_Subversion_and_Xaraya
110,"Using Subversion and Rails","A summary of how I got up and running with svn revision control on my iMac and how I use it.",3,1175059722,9,,3,"<p>I don&#39;t know why it took so long. Years actually. I&#39;m not talking about the technical install. I&#39;m talking about finally getting around to committing to use  revision control tools for my own projects. Yes, I&#39;ve used clients here and there for getting stuff from other (open source) projects and playing committer at times. This week I buckled down and setup my own (localhost) server and procedures for my development. My platform is OSX on an iMac.</p><p>The first decision was which product to use. <a href=""http://www.xaraya.com"">Xaraya</a>  uses <a href=""http://monotone.ca/"">Monotone</a> , so I&#39;ve become familiar with it. Monotone has some awesome features (like peer to peer sync, crypto, integrated testing); yet some things confuse me, I won&#39;t go into it now (from their manual: &quot;<em>Please be aware that monotone is a slightly unorthodox version control tool, and many of its concepts are similar — but subtly or significantly different — from concepts with similar names in other version control tools.</em>&quot;) Yeah, I agree.</p><p>It seems most other open source projects are using <a href=""http://subversion.tigris.org/"">Subversion</a> , including the entire Rails community. Subversion may be dumber than Monotone, but it feels more comfortable to me.</p><p>For hosting, I took a serious look at <a href=""http://code.google.com/hosting/"">Google Code Hosting</a> which runs subversion. It&#39;s designed for FOSS (free and open source) projects so while you can assign &quot;members&quot; with check in privileges, anyone in the world can pull from the repository. Unless they change their policy and let me limit the access, it won&#39;t work for my purposes. So for now I&#39;ll use localhost, and later, get it running on my internet server. </p><h2>Installation</h2><p>Actually I already had subversion (svn) installed, from when I <a href=""postings/Installing_Rails_on_my_iMac"">installed Rails</a>. But if you don&#39;t, do this (using macPorts):</p><pre>$ sudo port install subversion +tools</pre><h2>Reference Info</h2> <p>It&#39;s important to understand the concepts, workflow, as well as the specific commands for svn. The O&#39;Reilly book &quot;<a href=""http://svnbook.red-bean.com/"">Version Control with Subversion</a> &quot; is available free in PDF format. Already familiar with the concepts of revision control, I jumped to the <em>Appendix A High Speed Tutorial</em>, then skimmed through the rest of the book. </p><p>For using svn with Rails, there&#39;s two great articles. The posting on <a href=""http://maniacalrage.net/past/2006/4/12/heres_how_i_create_a/"">Maniacal Rage</a> (by Garrett) is pretty straightforward. I followed the text but didn&#39;t implement it directly. Then I went on to  <a href=""http://blog.teksol.info/articles/2006/03/09/subversion-primer-for-rails-projects"">Subversion Primer for Rails Projects</a> (by Francois) which seems to the definitive guide. Both articles are about a year old.   </p><h2>A GUI </h2><p>Next, I looked around for a GUI front end. Oh, sure, real men only use the command line. Well, I&#39;ll bet you real men, like me, occasionally open up a Finder (or File Explorer) and click around to find, move, rename, organize your files, even though you can do it all on the command line too, right? I see revision control just a fancier file system (in fact, when the heck will it be integrated into the OS anyway?!)</p><p>What I found were two choices on the mac:</p><ul><li>ZigVersion (<a href=""http://zigzig.com/"">http://zigzig.com/</a> ) <br /></li><li><a href=""http://www.lachoseinteractive.net/en/community/subversion/svnx/features/"">svnX</a></li></ul><p>svnX is free and open source. Zig is proprietary and has a license fee for commercial use but free for personal use. I found Zig to be a bit easier and more intuitive to use, so I went with that. (Zig&#39;s visual diff viewer rocks!) (But if I had to, svnX would do just as well.) </p><h2>A Script<br /></h2><p>I won&#39;t go into a big long explanation of how and what to do to get your rails project into svn, since Francois (and Garrett) have already done that. Rather, here&#39;s Francois&#39; shell script, which I&#39;ve slightly modified:</p><p><a href=""var/uploads/File/rails-svn.sh"">Download the script</a> </p><p><em>Usage: rails-svn PROJECT </em></p><p>In summary, the script does this</p><ul><li>Creates a repository for PROJECT</li><li>Creates initial trunk/, tags/ and branches/ directories <br /></li><li>If project doesn&#39;t exist, runs rails and creates a PROJECT_development database</li><li>Add all project files to the repos</li><li>Ignore log/*, tmp/*, doc/*doc, and config/database.yml</li><li>Creates a database.yml.sample instead</li><li>Removes public/index.html (it just gets in the way)<br /></li></ul><p>The changes I made include</p><ul><li>Let you setup an existing rails project, not just a new one</li><li>Creates the PROJECT_development database with mysqladmin</li><li>Does  not ignore db/schema.rb (per DHH&#39;s comment on  Francois&#39; site) <br /></li><li>Commented out the Rails Edge external</li></ul><p>Note, Francois&#39; loud disclaimer applies here too: <em>NO IMPLIED WARRANTY. This script might destroy twenty years worth of work, and I cannot be held responsible. </em>Heh.</p><h2>Start a Working Project</h2><p>OK, assuming you have the script in your path, its free sailing from here. I keep my rails projects in ~/rails and my repos in ~/svn. Source code is maintained in the trunk directory of the repos. </p><pre>$ cd  ~/rails</pre><pre>$ rails-svn myproject</pre><p>If myproject doesn&#39;t exist (in ~/rals/myproject), the script runs rails to start an empty one, and adds the files to svn. If myproject already exists, it s files will be added to svn as is. </p><p>Fire up zigversion and choose &quot;import working copy&quot; for the newproject directory. Tada!</p><h2>Working on a Project</h2><p>When you edit a file, it will show as modified in the zig window. When you want to commit your changes, you can check in the whole tree-- click on &quot;/&quot; and Check In, or on the command line </p><pre>$ cd ~/rails/myproject </pre><pre>$ svn commit --message=&quot;reason for these updates&quot;</pre><p>or do it a file or subdir at a time.</p><p>When generating rails files, use the --svn command to automatically add them to svn. For example,</p><pre>$ script/generate scaffold_resource <strong>--svn</strong> rabbit name:string created_on:date<br />$ rake db:migrate</pre><p> You might need to refresh the zig window.</p><p>When you need to add generated files and/or if you forget ot use --svn, run add manually,</p><pre>$ svn add --force .</pre><h2>Committing Your Environment</h2><p>At a minimum, you may want to freeze your rails version and keep it in the repos</p><pre>$ rake rails:freeze:gems <br />$ svn add --force vendor/rails<br />$ svn commit --message=&quot;freeze rails&quot; <br /></pre><p><a href=""http://blog.teksol.info/articles/2006/03/09/subversion-primer-for-rails-projects"">Francois also includes</a>  some great detail on how to manage the Rails version (using  svn:externals), gems, and plugins, so you can ensure your production site is configured the same as the development one. Here&#39;s a distillation of his instructions:</p><p><strong>To link to rails repos</strong>: </p><p>Replace branch with your preference for tags, trunk, or stable copy you want.<br /></p><pre>$ svn propset svn:externals &quot;rails http://dev.rubyonrails.org/svn/rails/branch/1-2-stable&quot; vendor<br />$ svn update vendor<br />$ yes | rails .<br />$ svn commit --message=&quot;set svn:externals on vendor/ for Rails&quot;<br /></pre><p><strong>To repos your gems: </strong></p><p>Make a copy in your vendor directory and check it in. Preserve license files. Add a svn property to help remember what this is. </p><pre>$ cd vendor<br />$ gem unpack gemname<br />$ cp -Rf gemname-n.n.n/lib/* .<br />$ cp -Rf gemname-n.n.n/MIT-LICENSE LICENSE-gemname<br />$ cp -Rf gemname-n.n.n/README README-gemname<br />$ svn add aaaa bbbb cccc dddd.rb LICENSE-gemname README-gemname<br />$ svn propset version &quot;n.n.n (Gem)&quot; gemname.rb<br />$ rm -Rf gemname-n.n.n<br />$ cd ..<br />$ svn commit --message=&quot;Unpack Gemname n.n.n into vendor/&quot;<br /></pre><p>When the gem upgrades, repeat but notice which files changed, added, removed.<br /></p><p><strong>To repos your plugins:</strong></p><pre>$ svn propset svn:externals &quot;plugname http://plugin/url/tags/rel_0-3-1/&quot; vendor/plugins<br />$ svn update vendor/plugins<br />$ svn commit --message=&quot;Added Plugname plugin&quot; </pre><p>&nbsp;</p><h2>Deployment to a Web Server</h2><p>See the post, <a href=""postings/Deploying_my_first_rails_site"">&quot;Deploying my first rails site&quot;</a>  for deploying from a local SVN to a production server using Capistrano. </p><p>&nbsp;</p><p>&nbsp;</p>",linoj,11820,"38,42","xamp,rails","subversion,revision control",Using_Subversion_and_Rails
109,"A Micro-CMS in Rails","Here's a quick tutorial that builds a little page manager for Rails apps, which can be used for About pages and such. Lets you arrange pages in a hierarchy, and change the order position. Includes a little side menu.",3,1174866637,9,,3,"<h2>Get Started</h2><p> To get started generate your Rails app and database, if you haven&#39;t already, something like this:<br /></p><pre>$ rails myapp</pre><pre>$ cd myapp </pre><pre>$ mysqladmin -u root -p create myapp_development </pre><p>Edit config/database.yml as needed, e.g. add your password, and then test the db connection (the db:migrate does nothing yet but should not generate any errors):</p><pre>$ rake db:migrate</pre><h2>Create Pages Resource</h2><p>We&#39;ll start with the RESTful resource scaffold, and define the model as an ordered list (position field), and a tree (parent_id foreign key references the same table). </p><pre>$ script/generate scaffold_resource page name:string title:string body:text updated_on:date parent_id:integer position:integer </pre><pre>$ rake db:migrate </pre><p> Edit app/models/page.rb, add the following:</p><pre>acts_as_tree :order =&gt; :position</pre><pre>acts_as_list :scope =&gt; :parent_id </pre><p>Replace app/views/pages/show.rhtml with something like the following:</p><pre>&lt;h1&gt;&lt;%= @page.title %&gt;&lt;/h1&gt;</pre><pre>&lt;div&gt;</pre><pre>    &lt;%= @page.body %&gt;</pre><pre>&lt;/div&gt;</pre><br /><h2>Create Some Example Pages</h2><p>Link to http://0.0.0.0:3000/pages, and add pages such as the following (only need to fill out these fields, leave the others blank/default):<br /> </p><blockquote><p>Name: about<br />Title: About Us<br />Body: This is the About page.</p><p>Name: contact<br />Title: Contact Us<br />Body: This is the Contact us page.</p><p>Name: privacy<br />Title: Privacy Policy<br />Body: This is the privacy policy page.</p><p>Name: history<br />Title: Our History<br />Body: This page describes our history.</p></blockquote><p>Check results by linking to http://0.0.0.0:3000/pages/1 , /2 , etc. </p><h2>Route to Page by Name</h2><p>Numbers are ugly in a url so lets use the page name for id instead, so we can link to http://0.0.0.0:3000/pages/about , /contact , etc. <br /></p><p>Edit app/controllers/pages_controllers.rb, change the beginning of def show to:</p><pre>def show<br />  @page = Page.find_by_name(params[:id])  # GET/pages/name<br />  @page ||= Page.find(params[:id]) # GET/pages/id</pre><p>If you want to go even further, and avoid the /pages/name so you can go to http://mysite.com/about or even about.html, add this to routes.rb:</p><pre># any named page<br />map.connect &quot;:id&quot;, :controller =&gt; &quot;pages&quot;, :action =&gt; &quot;show&quot;<br />map.connect &quot;:id.html&quot;, :controller =&gt; &quot;pages&quot;, :action =&gt; &quot;show&quot;</pre><h2>Handle Bad Page ID&#39;s</h2><p>If you specify an unknown page id in the url (whether id number or name), you get a Rails error page. Lets handle that as a 404 exception in the <em>show</em> action,</p><pre>def show<br />  <strong>begin</strong><br />    @page = Page.find_by_name(params[:id])  # GET/pages/name<br />    @page ||= Page.find(params[:id])<br />  <strong>rescue<br />    redirect_to_url &quot;/404.html&quot;<br />  else</strong><br />     ...</pre><pre>  <strong>end</strong> </pre><pre>end </pre><p>If you don&#39;t want to lose the layout, you could create a page named &quot;404error&quot; (for example) with the &quot;not found&quot; message (then dont need that else clause):<br /></p><pre>  <strong>rescue<br />    @page = Page.find_by_name(&#39;404error&#39;)<br />  end</strong><br />  ...</pre><h2>Make a Layout (with Side Menu)<br /> </h2> <p>You might want to make a nicer page layout, if you don&#39;t have one. The main point here is to add &lt;%= yield :sidemenu %&gt; that we&#39;ll use next. If you&#39;re starting from scratch try this: edit views/layouts/pages.rhtml as follows:</p> <p>In the &lt;head&gt; section replace the &lt;title&gt; tag with:</p> <pre>&lt;title&gt;&lt;%= (@page.nil? || @page.title.nil?) ? &quot;My Site&quot; : @page.title %&gt;&lt;/title&gt;</pre><pre> </pre> <p>And replace the default &lt;body&gt; section with this (using inline styles to simplify this tutorial):</p> <pre>&lt;body style=&quot;background-color:#ddd&quot;&gt;</pre> <pre>  &lt;div style=&quot;min-height:600px; margin:0 20px; background-color:white&quot;&gt;</pre> <pre>    &lt;div style=&quot;height:80px; background-color:#88A; text-align:center; padding:1em&quot;&gt;</pre> <pre>      &lt;h1&gt;Welcome to My Site&lt;/h1&gt;</pre> <pre>    &lt;/div&gt;</pre> <pre>    &lt;div&gt;</pre> <pre>      &lt;div style=&quot;float:left; background-color:#888&quot;&gt;</pre> <pre>        &lt;%= yield :sidemenu %&gt;</pre> <pre>      &lt;/div&gt;</pre> <pre>      &lt;div style=&quot;margin-left:150px&quot;&gt;</pre> <pre>        &lt;p style=&quot;color: green&quot;&gt;&lt;%= flash[:notice] %&gt;&lt;/p&gt;</pre> <pre>        &lt;%= yield :layout %&gt;</pre> <pre>      &lt;/div&gt;</pre> <pre>    &lt;/div&gt;</pre> <pre>  &lt;/div&gt;</pre> <pre>&lt;/body&gt;</pre> <h2>Add Side Menu</h2><p>Now we&#39;ll add a side menu containing all the pages, in proper position (we&#39;ll let you edit the position next). </p><p>In pages_controller.rb, in def show add the following line </p><pre>  def show<br />    @page = Page.find_by_name(params[:id])  # GET/pages/name<br />    @page ||= Page.find(params[:id])<br />    <strong>@pages = Page.find( :all, :order =&gt; :position)</strong></pre><p>Add to views/pages/show.rhtml:</p><pre>  &lt;% content_for(:sidemenu) do %&gt; <br />    &lt;h3&gt;Pages:&lt;/h3&gt;<br />    &lt;ul&gt;<br />      &lt;% for item in @pages %&gt;<br />        &lt;li&gt;&lt;%= link_to item.title, page_url(:id =&gt; item.name)  %&gt;&lt;/li&gt;<br />      &lt;% end %&gt;<br />    &lt;/ul&gt;<br />  &lt;% end %&gt;<br /> </pre><p>Now when you view a page, the menu of all pages appears on the left.<br /></p><h2>Edit Page Positions </h2><p>Next we let you modify the relative position of pages in the index list, by adding &quot;up&quot; and &quot;down&quot; links, with RESTful syntax like /pages/1;higher and /pages/1;lower. <br /></p><p>Edit pages_controller.rb, add the following actions:</p><p>&nbsp;</p><pre># PUT /pages/1;higher<br />def higher<br />  page = Page.find(params[:id])<br />  unless page.nil?<br />    if page.first?<br />      page.move_to_bottom<br />    else<br />      page.move_higher<br />    end<br />  end<br />  redirect_to pages_url<br />end<br /><br /># PUT /pages/1;lower<br />def lower<br />  page = Page.find(params[:id])<br />  unless page.nil?<br />    if page.last?<br />      page.move_to_top<br />    else<br />      page.move_lower<br />    end<br />  end<br />  redirect_to pages_url<br />end <br /></pre><p>In pages_controller, to sort the index list by position, change first line of def index to</p><pre>@pages = Page.find(:all<strong>, :order =&gt; :position</strong>) </pre><p>Edit routes.rb, add custom actions:</p><pre>map.resources :pages<strong>,<br />              :member =&gt; { :higher =&gt; :put,<br />                           :lower =&gt; :put }</strong> </pre><p>Edit views/pages/index.rhtml, replace position cell:</p><pre>&lt;td&gt;&lt;%=h page.position %&gt;&lt;/td&gt; </pre><p> with:</p><pre>&lt;td&gt;<br />  &lt;%=h page.position %&gt;<br />  &lt;%= link_to &#39;Up&#39;, higher_page_path(page), :method =&gt; :put %&gt;<br />  &lt;%= link_to &#39;Dn&#39;, lower_page_path(page), :method =&gt; :put %&gt;<br /> &lt;/td&gt; </pre><h2>Edit and Show Tree Hierarchy</h2><p>Initially, we already defined acts_as_tree in the model. Now lets use it.</p><p>Edit view/pages/edit.rhtml, for the &quot;parent&quot; field, replace  </p><pre>&lt;%= f.text_field :parent_id %&gt;</pre><p> with</p><pre>&lt;%= select(&quot;page&quot;, &quot;parent_id&quot;, Page.find(:all).collect {|p| [ p.name, p.id ] }, { :include_blank =&gt; true } ) %&gt;</pre><p>Link to /pages and edit the examples pages &quot;history&quot; and &quot;contact&quot; so both have the &quot;about&quot; page as their parent.</p><p>Wouldn&#39;t it be nice to show the pages hierarchy in the index list? Unfortunately I haven&#39;t found an easy way to sort the pages as parent1, child1a, child1b, parent2, child2a, etc. So instead we&#39;ll use partials and recursively show the children.</p><p>To start, the index action will only pass the list of root pages to the template. So change the first line of def index as follows:</p><pre>  def index<br />    @pages = Page.find( :all, <strong>:conditions =&gt; [&#39;parent_id IS NULL&#39;],</strong> :order =&gt; :position )<br /></pre><p>Edit views/pages/index.rhtml and replace the entire &lt;% for page in @pages %&gt; ... &lt;% end%&gt; loop with this line:</p><pre>&lt;%= render(:partial =&gt; &quot;index_item&quot;, :collection =&gt; @pages )%&gt;<br /></pre><p>Then create a file views/pages/_index_item.rhtml with the following:</p><pre>&lt;tr&gt;<br />  &lt;td&gt;<br />    <strong>&lt;%= prefix ||= nil %&gt;</strong><br />    &lt;%=h index_item.name %&gt;<br />  &lt;/td&gt;<br />  &lt;td&gt;&lt;%=h index_item.title %&gt;&lt;/td&gt;<br />  &lt;td&gt;&lt;%=h index_item.body %&gt;&lt;/td&gt;<br />  &lt;td&gt;&lt;%=h index_item.updated_on %&gt;&lt;/td&gt;<br />  &lt;td&gt;&lt;%=h index_item.parent_id %&gt;&lt;/td&gt;<br />  &lt;td&gt;<br />    &lt;%=h index_item.position %&gt;<br />    &lt;%= link_to &#39;Up&#39;, higher_page_path(index_item), :method =&gt; :put %&gt;<br />    &lt;%= link_to &#39;Dn&#39;, lower_page_path(index_item), :method =&gt; :put %&gt;<br />  &lt;/td&gt;<br />  &lt;td&gt;&lt;%= link_to &#39;Show&#39;, page_path(index_item) %&gt;&lt;/td&gt;<br />  &lt;td&gt;&lt;%= link_to &#39;Edit&#39;, edit_page_path(index_item) %&gt;&lt;/td&gt;<br />  &lt;td&gt;&lt;%= link_to &#39;Destroy&#39;, page_path(index_item), :confirm =&gt; &#39;Are you sure?&#39;, :method =&gt; :delete %&gt;&lt;/td&gt;<br />&lt;/tr&gt;<br /><strong>&lt;% unless index_item.children.nil? %&gt;<br />&lt;%= render(:partial =&gt; &quot;index_item&quot;, :collection =&gt; index_item.children, :locals =&gt; {:prefix =&gt; &#39;|--&#39;} )%&gt;<br />&lt;% end %&gt; </strong></pre><p>Changes from the index.rhtml are highlighted. Note the recursive trick here, after a root page row is output, if the page has children then we call the same partial for the children. But in that case, we append a prefix &quot;|--&quot; a crude way of showing the tree graph.</p><p>&nbsp;</p><div style=""text-align: center""><img style=""width: 359px; height: 215px"" src=""var/uploads/Image/tutpages2.jpg"" alt="" "" width=""359"" height=""215"" /> </div><h2>Modified Side Menu</h2><p>The left side menu still shows all the pages. Lets change it to show the root pages, and current section pages separately.</p><p>In pages_controller.rb, in the show action, change the @pages= assignment, to: </p><pre>@pages = Page.find( :all, <strong>:conditions =&gt; [&#39;parent_id IS NULL&#39;],</strong> :order =&gt; :position ) </pre><p> and add this line after it,</p><pre>@relatives = @page.relatives</pre><p>And then edit models/page.rb to return the list of relatives (this page, uncles, and children):</p><pre>  def relatives<br />    c = parent.nil? ? [self] : [parent] + parent.children<br />    c += children<br />  end<br /> </pre><p>In views/pages/show.rhtml, add this to the &lt;% content_for(:sidemenu) do %&gt; block:</p><pre>  &lt;% unless @relatives.nil? || @relatives.size &lt;= 1 %&gt;<br />    &lt;h3&gt;In This Section:&lt;/h3&gt;<br />    &lt;ul&gt;<br />      &lt;% for item in @relatives %&gt;<br />        &lt;li&gt;&lt;%= link_to item.title, page_url(:id =&gt; item.name)  %&gt;&lt;/li&gt;<br />      &lt;% end %&gt;<br />    &lt;/ul&gt;<br />  &lt;% end %&gt;<br /></pre><p>&nbsp;</p><div style=""text-align: center""><img style=""width: 312px; height: 355px"" src=""var/uploads/Image/tutpages.jpg"" alt="" "" width=""312"" height=""355"" /></div> <br /><h2>Other Stuff </h2><p>You&#39;ll want to improve this, and adapt it to your own application. For instance, the side menu might be nested menu instead.  You might also want to add a WYSIWYG editor for the page body, or some other markup. Naturally, you&#39;ll want to add some authentication so visitors only access the show action, while administrators can create, update, and delete pages.</p><p>&nbsp;</p> ",linoj,16214,42,rails,"acts_as_tree,cms,acts_as_list,partial",A_Micro-CMS_in_Rails
104,"Rails and Django - Conclusions (part 15/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1174284000,9,,3,"<h2>Tallying the Ratings</h2><table border=""1""><tbody><tr><td><strong>Evaluation Criteria </strong></td><td align=""center""><strong>   Rails   </strong> </td><td align=""center""><strong>   Django     </strong></td></tr><tr><td><strong>TECHNICAL </strong></td><td align=""center"">&nbsp;</td><td align=""center"">&nbsp;</td></tr><tr><td>Programming Language  </td><td align=""center""> 4<br /> </td><td align=""center""> 4<br /> </td></tr><tr><td>Framework Concept </td><td align=""center""> 3<br /> </td><td align=""center""> 4<br /> </td></tr><tr><td>Directory Structure </td><td align=""center""> 4<br /> </td><td align=""center""> 5<br /> </td></tr><tr><td>Database / Model </td><td align=""center""> 4<br /> </td><td align=""center""> 3<br /> </td></tr><tr><td>URL Routing </td><td align=""center""> 3<br /> </td><td align=""center""> 4<br /> </td></tr><tr><td>Controller / Views </td><td align=""center""> 3<br /> </td><td align=""center""> 3<br /> </td></tr><tr><td>Templates </td><td align=""center""> 3<br /> </td><td align=""center""> 3<br /> </td></tr><tr><td>Forms </td><td align=""center""> 3<br /> </td><td align=""center""> 3<br /> </td></tr><tr><td>Data Administration  </td><td align=""center""> 2<br /> </td><td align=""center""> 2<br /> </td></tr><tr><td>User Administration (authentication, sessions)   </td><td align=""center""> 4<br /> </td><td align=""center""> 3<br /> </td></tr><tr><td>AJAX </td><td align=""center""> 4<br /> </td><td align=""center""> 3<br /> </td></tr><tr><td>RESTful </td><td align=""center""> x<br /> </td><td align=""center""> x<br /> </td></tr><tr><td>RSS/Atom/XML </td><td align=""center""> x<br /> </td><td align=""center""> x<br /> </td></tr><tr><td>Internationalization / Translation  </td><td align=""center""> x<br /> </td><td align=""center""> x<br /> </td></tr><tr><td>Caching </td><td align=""center""> x<br /> </td><td align=""center""> x<br /> </td></tr><tr><td>Security </td><td align=""center""> x<br /> </td><td align=""center""> x<br /> </td></tr><tr><td align=""right""><strong> TECHNICAL SCORE <br /></strong> </td><td align=""center""> <strong>3.18<br /></strong> </td><td align=""center""> <strong>3.27<br /></strong> </td></tr><tr><td>&nbsp;</td><td align=""center"">&nbsp;</td><td align=""center"">&nbsp;</td></tr><tr><td><strong>SUPPORT </strong></td><td align=""center"">&nbsp;</td><td align=""center"">&nbsp;</td></tr><tr><td>Project / Community </td><td align=""center""> 4<br /> </td><td align=""center""> 3<br /> </td></tr><tr><td>Documentation<br /></td><td align=""center""> 4<br /> </td><td align=""center""> 3<br /> </td></tr><tr><td>User Extensions </td><td align=""center""> 4<br /> </td><td align=""center""> 2<br /> </td></tr><tr><td>Development / Debugging </td><td align=""center""> 3<br /> </td><td align=""center""> 3<br /> </td></tr><tr><td>Test Tools<br /></td><td align=""center""> 3<br /> </td><td align=""center""> 3<br /> </td></tr><tr><td>Deployment Support<br /></td><td align=""center""> 4<br /> </td><td align=""center""> 3<br /> </td></tr><tr><td align=""right""><strong> SUPPORT SCORE <br /></strong></td><td align=""center""> <strong>3.67<br /></strong> </td><td align=""center""> <strong>2.83<br /></strong> </td></tr><tr><td>&nbsp;</td><td align=""center"">&nbsp;</td><td align=""center"">&nbsp;</td></tr><tr><td align=""right""><strong> OVERALL SCORE  </strong></td><td align=""center""> <strong>3.35<br /></strong> </td><td align=""center""> <strong>3.12<br /></strong> </td></tr></tbody></table><p>&nbsp;</p><h3>Evaluation Results</h3><p>To state the obvious, your priorities and ratings may vary greatly from ours, leading to completely different results. But let&#39;s analyze my results.</p><p>In the Technical categories, Django eeks ahead by just 0.09 point, with a score of 3.27 versus 3.18 for Rails.</p><p>In the Support categories, Rails shines, with its strong community and attention to the whole development cycle, rating 3.67 to Django at 2.83</p><p>And that puts Rails over the top for a final score of 3.35 against Django at 3.12, a 0.24 spread. </p><p align=""center""><strong>RAILS: The Winner!</strong></p><p align=""center""><strong>DJANGO: A close second.</strong></p><p>Of course, the story is far from over. </p><p>Rails is vulnerable. If Django builds a stronger community and support infrastructure, and succeeds in completing the features promised for its upcoming Release 1.0 and beyond, it could pull ahead as the superior choice. </p><p>That said, Rails can keep its lead by bolstering some of the technical areas where it lost points. Although some scores were more a matter of taste, we already see improvements coming in core and from community plug-ins which will enable Rails to maintain its leadership.</p><p>We&#39;ll be watching... :)</p><p><strong>This all in fun. </strong>Clearly both frameworks are excellent products, offering improved productivity and higher quality web application development. The two camps are exchanging ideas, as cross-pollination is inevitable. And, as they say, a rising tide raises all ships. </p><h3>Summary - Making Your Decision</h3><p><em>First</em>, you might want the programming language to be the deciding factor in choosing a web development framework. If you&#39;re already experienced in a programming language, and want to stick with it, then your decision is easy(ier). </p><p>If you are a <em>Pythonista</em>, then by all means, stick with Python. In that case you may still be doing a framework evaluation, as there are several competing ones in Python including Django, TurboGears and Pylons.</p><p>Similarly, if you are a <em>Rubyist</em> and love it, then stick with Ruby and use Rails, or consider one of the competing frameworks in Ruby. </p><p>If you are programming language agnostic, or don&#39;t mind learning a new one, then take the time to get to know the language syntax, communities and available resources. What are your friends, colleagues or employees using? That could be a factor too.</p><p><em>Second</em>, do you like being an early adopter or are you more of a conventional buyer? While all MVC frameworks are relatively new and early, Django might appeal more to early adopters at its current  stage. </p><p><em>Third</em>, are you more comfortable relying on user contributions, or do you generally prefer to roll your own? Rails has a much larger body of plug-ins and other resources than Django. </p><p><em>And finally</em>, do you like the efficiency of having things packaged together for you, or do you prefer the freedom of making your own choices? Rails is more “opinionated” and does more packaging. Django, in its Pythonic way, leaves more choices up to you.</p><p>Good luck, Have fun, and Build cool stuff!</p><p><em>SPECIAL THANKS to the Rails and Django developers for doing what they do!</em></p><h3>About Parkerhill Technology Group</h3><p><em>Jonathan S. Linowes is owner of Parkerhill Technology Group LLC (<a href=""http://www.parkerhill.com"">www.parkerhill.com</a> ) a web development firm based in New Hampshire USA, specializing in Web 2.0 applications development, product management and business planning. <a href=""sitecontact"">Contact us</a>.  </em><br /> </p>",linoj,8462,"43,42","django,rails",,Rails_and_Django_-_Conclusions_%28part_15%2F15%29
103,"Rails and Django - Development Cycle (part 14/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1174197600,9,,3,"<h2>Debugging<br /></h2><p>While most of the discussion here so far has been about architecture design and API&#39;s for writing code, the bulk of a mortal programmers&#39; time is spent troubleshooting and debugging. To the extent that a framework can help prevent bugs before they happen, all the better. But eventually you need to get down with it.</p><p>First, to state the obvious (I hope): To use any tool like a web development framework, you need to learn the programming language! (Seriously, too many people jump in before accepting that). Your debugging environment is primarily a function of the programming language.</p><p>Tools in your debugging arsenal include:</p><ul><li>Interactive command line console</li><li>Framework generated error pages</li><li>Dumping values from your program to a page</li><li>Log files</li><li>Breakpoints<br /></li></ul><p>Both Ruby and Python are interpretive languages, and their program are often referred to as <em>scripts</em>. Both languages offer an interactive shell-- a command line environment where you can run scripts and execute expressions for testing, debugging, and quick operations. The Ruby console is invoked with <em>“irb”</em>. The Python console is invoked with <em>“python”</em>, or the more powerful <em>“ipython”</em>. </p><p>When a web application encounters an error, the framework may present an error page with details of the error condition, what file it occurred in, the values of variables, a stack trace, HTTP header, POST variables, and so on. Debugging should be enabled in your development environment and disabled in your production one (as these error pages could contain sensitive details about your site). </p><p>Inside your code and templates you may need to dump the values of variables. Both framework&#39;s languages provide methods for converting variables to strings and including them in the HTTP response buffer (that is, your page). Rails has a “debug” helper method. </p><p>Log files are another invaluable tool for seeing what&#39;s going on (and going wrong) in your application. Both frameworks (optionally) generate log files, and you can add your own messages for tracing through problems.</p><p>Finally, you may need insert a “breakpoint” in your program, to stop execution and then examine for example the value of specific objects. Rails provides a built in breakpoint method, for use in a local development environment only. For Django you&#39;d need to go to an IDE (as far as I know).</p><p>Some people like to work within an IDE (interactive development environment). The Rails folks say this is completely unnecessary but possible. A couple of popular ones that work with Python and Ruby are <a href=""http://www.eclipse.org/"">Eclipse</a>  and <a href=""http://www.activestate.com/products/komodo_ide/"">Komodo</a> . (The Python plugin for Eclipse is <a href=""http://pydev.sourceforge.net/"">Pydev</a> ).</p><p><em>Conclusion: It appears the debugging tools for both frameworks are mature and comparable, rated 3-3.</em></p><h2>Testing</h2><p>A really great way to preempt bugs is to test. Write code, then write tests that exercise the code, and validate the results. When you change things, you can re-run the tests to make sure things still work. Testing should not be an afterthought. (Taken to the extreme, <a href=""http://en.wikipedia.org/wiki/Test-driven_development"">test-driven development</a>  methodology encourages writing the test cases <em>first</em>, and then write the code to be tested.)  </p><p>Testing also includes performance testing and profiling, for fine tuning your deployed application.</p><p>Robust testing tools are available in both the Ruby and Python programming environments. </p><h3>Rails</h3><p>Rails make full use of the Ruby language testing tools, and adds a nice testing framework within Rails. Each time you generate a new model and controller, Rails creates stub files in the project&#39;s test/ subdirectory, ready and waiting for you to code them up.</p><p>Test scripts typically call the model and controller methods, and assert the results. Rails makes a clear distinction between “unit tests” for testing models (e.g. file <em>test/unit/mymodel_test.rb</em>), “functional tests” for testing controllers (e.g. file <em>test/functional/mycontr_controller_test.rb</em>), and “integration tests” for testing the work flow through your application. (Taken further, you can even develop a <em>domain-specific language</em> for high level application testing).</p><p><em>Test fixtures</em> define a separate database specifically for testing. When you run a test, the database is re-created from the fixtures, ensuring that your tests are repeatable and consistent. Rails fixtures are written in YAML (.yml files), a simple language.</p><h3>Django</h3><p>With the standard Python  <em>doctest</em>  module, you run some tests of a method in the interactive console, and then paste the results from the console into the program script as a <em>docstring</em> comment. Then when you run <em>doctest</em> on that file, it re-plays the test and compares the results. Thus, the code, test cases, and expected results are all maintained in the same file.</p><p>You can also write separate test scripts, saved in <em>tests.py</em> file. Django&#39;s test runner looks for <em>doctest</em> and <em>tests.py</em> in your application directory.  </p><p>An alternative is the standard Python <em>unittest</em> module, for which you write unit tests for your models. </p><p>Python&#39;s <em>test client</em> can be used to simulate the request/response interaction of your application with browsers. </p><p>Django does not have <em>test fixtures</em>, although they&#39;re said to be planned.</p><h3>Opinion </h3><p>None of the tools described above are replacements for browser automation testing frameworks, such as <a href=""http://twill.idyll.org/"">Twill</a>  and <a href=""http://www.openqa.org/selenium/"">Selenium</a> for testing of your web application independent of your specific application framework and language.</p><p>Programmers should write tests to test their own code. Other tests might be written by a separate QA person, to double check the code and perform application integration. In this case, maintaining test scripts in a separate test directory is better.</p><p>Much like documenting code with comments, writing tests is a necessary burden that requires professional discipline, because programmers normally just want to write code. The fact that Rails generators create test file stubs is like your father reminding you to do your homework, a not-so-subtle reminder of what you ought to be doing.</p><p>With regard to test fixtures, for smaller tests they seem fine. For more extensive testing with larger datasets, it seems it&#39;d be burdensome to create and maintain long scripts and easier to just copy a previously created database to the test one.</p><p><em>Conclusion: While testing tools are largely available in both, Rails has more successfully integrated testing into the development cycle. I rate Rails 4, Django 3 for testing.</em></p><h2>Deployment</h2><p>While really not a function of the web development framework, deployment of your application to a live site is certainly an important part of the development cycle. </p><p>I will not go into the issues of setting up and administrating a website for Ruby or Python, nor the decisions related to Apache versus Lighttp web servers, etc. There are always issues and obviously the typical ones have been worked out. Many people will prefer to use a hosting service.<br /> </p><p>Scalability is also a consideration, to support high traffic volumes. Both Rails and Django are scalable to multiple servers. We rely on outside experts in service-oriented architecture (SOA) to configure a production environment.</p><h3>Rails</h3><p>Rails comes setup to easily switch between different configuration environments, namely, <em>development</em>, <em>testing</em>, and <em>production</em>. Each environment may have its own database, and its own configuration parameters (including logging, caching, debugging, and so on). You can even specify the version of Rails to use, so you can roll back to a previous version, for instance, after an upgrade. </p><p>Rails includes Capistrano, a Ruby-based utility for setting up a repeatable deployment scheme on remote servers. Capistrano assumes you store your code in a source code repository (such as subversion), and it assumes you are deploying to a Unix based server.  Once setup, it&#39;s easy to update our live server from your (tested) development repository. </p><p>Configuring your web server is relatively tricky. Mongrel is a back-end Ruby web server. A recommended server configuration for Rails uses HTTP proxying to one or more Mongrel servers. Rails has problems with fast_cgi, and is not recommended.</p><p>There are hosting services dedicated to hosting Ruby on Rails applications. People have reported problems with some of them, so choose carefully. A recent review can be found at  http://nubyonrails.topfunky.com/articles/2007/02/24/the-host-with-the-most</p><h3>Django</h3><p><em>Apache</em> with <em>mod_python</em> currently is the preferred setup for using Django on a production server. (It can also run with <em>fast_cgi</em>).  It all seems pretty standard as for any Python app, nothing special.</p><h3>Opinion </h3><p>A Django deployment appears easier, especially for smallish sites where HTTP proxying wouldn&#39;t be necessary. Otherwise, Django and Rails are comparable.  </p><p>Rails has thought through the workflow of development-to-deployment more thoroughly and helps make it easier, like the different configuration environments and the Capistrano tool. </p><p><em>Conclusion: Rails gets a 4 for being more helpful, versus 3 for Django, even though Django may be easier for hosting small sites.</em><br /><br /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",linoj,6576,"43,42","django,rails",,Rails_and_Django_-_Development_Cycle_%28part_14%2F15%29
106,"Rails and Django - User Extensions (part 13/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1174111200,9,,3,"<h2>User Extensions<br /></h2><p>The inner circle of developers on projects like Rails and Django are known to frequently debate where to draw the line between what should be in the core framework versus what should be an add-on component. </p><p>Frameworks rely on the user community to contribute pluggable extensions to the core framework. In Rails these are called <em>plug-ins</em>. In Django they are <em>apps</em>.  </p><h3>Rails</h3><p>Rails has a well established Plug-ins capability. Plug-ins are easily installed and then appear to be a natural part of the core framework. Plugins may consist of code (classes), templates, stylesheets, and other files. </p><p>Plug-ins are installed using the &quot;script/plugins&quot; script (or its recent replacement &quot;rapt&quot;, which retrieves a plug-ins code directly from a <a href=""http://subversion.tigris.org/""><em>subversion</em></a>  repository over the Internet). Plugins get installed into your project&#39;s <em>vendor/plugins/</em> directory. </p><p>Presently Plugins cannot contain models, or provide modular “apps” like Django, although there are a couple of initiatives to add this (whether or not these play well or are just hacks remains to be seen). For example, <br /></p><ul><li>Plug-ems: http://revolutiononrails.blogspot.com/2007/01/plugems-rails-as-first-class-citizens.html</li><li>Rails Engines: http://rails-engines.org <br /></li></ul><p>A dedicated plug-ins section is maintained on the Rails site (http://wiki.rubyonrails.org/rails/pages/Plugins), and there&#39;s an online database of plugins at http://www.agilewebdevelopment.com/plugins I&#39;m pointing this out because there&#39;s a lot of support for finding, using, installing, and writing plug-ins. As of Feb 15, 2007 there are 520 plug-in available (from about 55 repositories). The online database allows ratings to help weed out the junk from the jewels. </p><h3>Django</h3><p>In Django, user contributions are like any other &quot;app&quot;. You install them manually, which is trivially simple, nonetheless it&#39;s not just a single commandline command -- copy the code to your project&#39;s directory and the templates to your template directory; and then follow its documentation how to add it to your project. <br /></p><p>For example, some optional apps come with Django, include</p><ul><li>Flatpags app - for storing simple “flat” HTML content in the database, and handles the management via the admin interface</li><li>Comments app – a simple flexible comments system (not yet documented)</li><li>Redirects app – lets you store simple redirects in a database<br /></li></ul><p>Links to Django apps can be found at http://code.djangoproject.com/wiki/DjangoResources, a single user wiki page which also contains miscellaneous links to blog posts, tools, templates, code examples, tutorials, and so on. There is no coordinated effort to support user contributed apps, neither in terms of coding conventions for interoperability nor a centralized place to register find them. <br /></p><h3>Opinion</h3><p>The quantity and quality of Rails Plug-ins is impressive. And Rails has made an effort to provide some infrastructure on its website for community development. Notably, the online database of plug-ins (with ratings) is not on rubyonrails.com, but a private consultants site, http://www.agilewebdevelopment.com/ </p><p>As for Django, while the potential for user contributed apps is there, it has hardly been exploited. The limited infrastructure and quantity of Django apps is clearly disappointing.</p><p><em>Conclusion: I rate Rails a 4 and Django 2</em></p><p>&nbsp;</p><table border=""1""><tbody><tr><td><strong>User Extensions  </strong></td><td><strong>Rails  </strong></td><td><strong>Django  </strong></td></tr><tr><td>Installation </td><td><p>command script, </p><p>retrieves from a repository</p><p>and installs in your project </p></td><td><p>manual: you get it,</p><p>copy it, and use it </p></td></tr><tr><td>Official infrastructure  </td><td><p>dedicated wiki page and</p><p>detailed database of plugins </p></td><td><p>user wiki page, just a bullet list</p><p>among all other resources </p></td></tr><tr><td>User contributions </td><td>hundreds available </td><td>a couple of dozen </td></tr><tr><td><strong>MY RATING: (1=worst, 5=best) </strong></td><td><strong>4 </strong></td><td><strong>2 </strong></td></tr></tbody></table>",linoj,5509,"43,42","django,rails",,Rails_and_Django_-_User_Extensions_%28part_13%2F15%29
102,"Rails and Django - Documentation (part 12/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1174024800,9,,3,"<h2>Documentation</h2><p>Documentation serves not only its obvious purpose of teaching and reference, but also bolsters the community, helps recruit new users, promotes discussion and quality, and generally helps create momentum that leads to the continued success of open-source software (OSS) projects.</p><p>Documentation can be divided into the following areas:</p><ul><li>User manuals and tutorials</li><li>API reference manual</li><li>Books</li><li>Community wiki and how-to&#39;s</li><li>User blogs</li><li>Video screencasts</li></ul><p>In general, the first two &quot;belong&quot; to the project, and are hosted in the project&#39;s website.</p><p>User manuals are hard to get written, especially in a young project because they depend on developers who just want to write code not documentation. Manuals must address the needs of new users who are not familiar with a project as well as experience ones. Thankfully, both Django and Rails have quite thorough on-line manuals. Both frameworks also have complete on-line API references (automatically generated from the code). </p><p>Hardcopy books, typically authored by a core developer and published by a commercial publisher, are a sign of maturity and stability of a project, and mainstream acceptance. Nowadays, PDF versions of books are often available as an alternative format from the publisher. </p><p>Rails has several books available, especially those from <a href=""http://www.pragmaticprogrammer.com/"">The Pragmatic Programmer</a> . The popular &quot;Agile Web Development with Rails&quot; by Dave Thomas, and David Heinemeier Hansson is now in its second edition. </p><p><a href=""http://www.djangobook.com"">The Django Book</a>  is in draft and available on-line for review and comment. Some sections are still unwritten. It is being written for Django 1.0 release.<br /> </p><p>Both projects, having active communities, offer user-written wiki, how-to&#39;s and blogs that are easy to search via Google. Also add video screencasts to the list, increasingly popular they are especially effective for introductory demos of a feature or component.  </p><h3>Opinion </h3><p>Fortunately, both Rails and Django have done a great job providing documentation, so far. In fact, both projects offer more documentation than most other OSS projects I have worked with.</p><p>Django&#39;s book isn&#39;t finished but it&#39;s clearly preparing for Release 1.0. I have experienced intermittent problems access the http://manuals.rubyonrails.com website.</p><p>One more thought (as good a place as any in this document)... I honestly enjoyed reading the “Agile” book and learned a lot. Ditto as I watched David Heinemeier Hansson keynote webcast from RailsConf&#39;06 (http://www.scribemedia.org/2006/07/09/dhh). As much as DHH&#39;s personality can be annoying, he does give a great presentation and is a &quot;thought leader. So with Rails, we&#39;re getting more than a nice framework, we&#39;re getting leadership on design methodology and an education...</p><p>Then again, the world is filled with lots of really smart inspiring people, and your framework needs to be ready to draw upon a world of resources. </p><p><em>Conclusion: Both projects offer very good documentation, although Rails is more complete. I give Rails a 4, Django 3.</em></p><table border=""1""><tbody><tr><td><strong>Documentation  </strong></td><td><strong>Rails  </strong></td><td><strong>Django  </strong></td></tr><tr><td>User manuals and tutorials </td><td>very good  </td><td>very good  </td></tr><tr><td>API reference </td><td>good </td><td>good </td></tr><tr><td>Books </td><td>several </td><td>one, in draft </td></tr><tr><td>Community wiki and how-to&#39;s </td><td>good </td><td>good </td></tr><tr><td>User blogs </td><td>many </td><td>some </td></tr><tr><td>Screencasts </td><td>some </td><td>limited </td></tr><tr><td><strong>MY RATING: (1=worst, 5=best)  </strong></td><td><strong>4 </strong></td><td><strong>3 </strong><br /></td></tr></tbody></table><br /><br />",linoj,5905,"43,42","django,rails",,Rails_and_Django_-_Documentation_%28part_12%2F15%29
100,"Rails and Django - Other Features (part 11/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1173938400,9,,3,"<p>The following features are also important considerations when evaluating a web development framework.  However I have decided not to put a rating on them, either because there is not much at issue, or because there isn&#39;t much the framework really does, the features are premature, or its not a high priority for my projects. Your mileage may vary.<br /></p><h2>RESTful</h2><p>RESTful is a clever approach to writing web interaction, using the actions built into the HTTP protocol, like GET and POST, as verbs on your application objects. For example a HTTP request (URL string) to display a product page is requesting a GET; and an HTTP request to save an order form is requesting a POST of that order. A single URL can be used for both of these, such as http://www.mysite.com/product/123 -- when its a GET you&#39;re getting the product Id 123, the same URL as a POST might be updating that product record.</p><ul><li>Wikipedia on REST: http://en.wikipedia.org/wiki/REST <br /></li><li><a href=""http://ryandaigle.com/articles/2006/06/30/whats-new-in-edge-rails-activeresource-is-here"">A Rails blogger comments on REST</a>  </li></ul><p>There is nothing in either framework preventing RESTful programming, it&#39;s a methodology. However, Rails has added some library functions to facilitate coding, a scaffold generator for making skeletal RESTful controllers, and has begun to evangelize REST as part of the Rails development culture.</p><p><em>Conclusion: A nod to Rails for leading in that direction.</em> </p><h2>RSS/Atom/XML</h2><p>RSS and Atom feeds are XML formatted data. Both frameworks are fully capable of supporting data requests in these formats. Python and Ruby include full support for XML structured documents.<br /> </p><p><em>Conclusion: It&#39;s needed, it&#39;s there. </em></p><h2>Internationalization and Localization<br /> </h2><p>Internationalization (enabling software for many languages, abbreviated &quot;L18N&quot;) and Localization (implementing a specific language translation, abbreviated &quot;L10N&quot;), includes Unicode support, and string replacement.</p><p>Both Rails and Django support it, in different ways. Rails via a plug in; given the international popularity of the framework, no doubt it works. Django has native support; its admin app, for example, has already been translated into over a dozen languages. </p><p><em>Conclusion: This is not a high priority for me today, but no doubt it will be at some point</em><em>, and I&#39;m confident others are making it work. </em></p> <h2>Caching</h2> <p>Caching is the temporary storage of chunks of data so it can be retrieved much faster than the processing time needed  to generate the data in the first place. Browsers have cache to retain pages and images that have been downloaded so you don&#39;t have to download them again.</p><p>On the server side, a framework cache will relieve the server from having the regenerate the same page chunks over and over again with repeated requests. This is most important and noticeable on high traffic sites.</p><p>Caching whole static pages (pages that don&#39;t change very often) is easy to automate. You still should be allowed to control when a page expires, however, to force a regeneration. On very dynamic pages, you can simply disable caching (you&#39;d expect your shopping cart, for example, to be fresh each time it&#39;s reloaded). </p><p>Complexity comes when you try to optimize performance by caching static parts of a page and not caching the dynamic parts. You should be able to cache some page fragment and leave other fragments uncached.</p><p>Caching subsystems may also give you the option of caching on the server disk, in the database, or on a separate high performance <em>memcache</em> servers.</p><p>All this is fairly standard IT management, and both frameworks support caching.</p><p>Django adds support for caching binary objects as well. I don&#39;t know if anyone would bother to use it though. That level of fine tuning might be needed if you&#39;re approaching the traffic volumes of a Google or Amazon, but then you probably shouldn&#39;t be using either of these frameworks anyway. </p><p><em>Conclusion: HTML cache is necessary and supported in both. </em> </p> <h2>Security</h2> <p>Security can refer to many things.</p><p>Whenever you have users submitting content, you are vulnerable to abuse. A common hack, <em>cross-site scripting</em>, is to try and insert tags like Javascript commands in content areas that allow HTML. A common solution is to strip any tags from user input, either before you save it to the database and/or when you display it. When you do need to allow tags in the content, be careful and selective with who input that text. This comes down to good programming practice, and is not very dependent on your framework itself.</p><p>Similarly, <em>SQL injection</em> is when a user inputs content that looks like SQL statement so when it&#39;s passed to the database trips up the database request. </p><p>Both the Django and Rails documentation offer advice on how to program properly to avoid these traps. <br /></p><p>Security can also refer to permissions for accessing specific areas of the site, specific content, or specific operations on the content. For example, Visitors may view articles, but only Editors may submit them. This comes down to administration of users/groups and permissions. As mentioned earlier, neither framework offers very significant support for access controls, but do provide tools so you can build your own to your specifications.</p><p>Related to users, security also refers to authenticating users when the log in and/or hijacking a user&#39;s session. Again, Django has a rudimentary admin with basic authentication. Rails has is via separate plugins. Both support encrypted passwords and such. The rest is still up to you.<br /></p><p>Hackers can try and break your site by entering invalid data in the URL, and if you don&#39;t trap the exception may result in an error page listing sensitive information and expose other nefarious ways into your system. Again, this is more about good programming practice and testing as you should be careful to trap exceptions created by invalid parameters to your functions. </p><p><em>Conclusion: At this time, it seems the best these frameworks can offer is some rudimentary security and a lot of documentation on best practices. </em> </p>",linoj,5279,"43,42","django,rails",,Rails_and_Django_-_Other_Features_%28part_11%2F15%29
99,"Rails and Django - AJAX (part 10/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1173862711,9,,2,"<h2>AJAX</h2><p>To quote the &quot;<a href=""http://www.pragmaticprogrammer.com/titles/rails/"">Agile</a> &quot; book, AJAX &quot;once stood for <em>Asynchronous JavaScript and XML</em> but now just means <em>Making Browsers Suck Less</em>.&quot; In general, AJAX refers to updating parts of the page without having the refresh the whole page. And thus it makes browser apps feel more like desktop ones.</p><p>Rails and Django have very different philosophies about the roles of a framework with regard to AJAX.</p><p>There are dozens of AJAX toolkits (libraries) available, both commercial and open source. One of the most important functions of these is to handle the idiosyncratic differences between browsers, as each browser implements and supports JavaScript differently. In addition, toolkits provide useful and fun things that you can add to your pages, like drag and drop, visual effects, etc. </p><h3>Rails</h3><p>Rails has fully embraced AJAX. And, in fact, it has standardized on a specific toolkits (<a href=""http://www.prototypejs.org/"">prototype</a>  and <a href=""http://wiki.script.aculo.us"">Scrip.aculo.us</a> ) and encapsulated them so you can add AJAX effects to your pages using the Ruby and Rails code, without every having to touch JavaScript. </p><p>This is accomplished through a different &quot;partial&quot; template file format called .rjs. When you include an rjs template, it injects the appropriate JavaScript code into your page. You pass it variables, for example, that are passed to the Scriptaculous libraries. This is considered &quot;server-side JavaScript&quot; because you are programing your web app, as usual, on the server side. Although the JS does run on the user&#39;s browser, you&#39;re not necessarily thinking about that.</p><h3>Django</h3><p>AJAX has been hotly debated among the Django developers but their direction seems clear. Django does not intend to select or standardize on any particular toolkit. Instead, they will provide a library in the framework for &quot;serializing&quot; objects so they can be passed between your Django app on the server and JavaScript in the user&#39;s browser. There are standards for this, such as <a href=""http://www.json.org/"">JSON</a>  - JavaScript Object Notation, which will be supported.  </p><p>In this way, you are free to choose any AJAX toolkit you want, and integrate it with your Django application. (For example, the <a href=""http://dojotoolkit.org/"">Dojo</a>  toolkit is well regarded). </p><p>The Django developers have publicly stated that like HTML and CSS, they regard Javascript a basic technology that should be mastered by any web developer. After all you don&#39;t ask the framework to write your stylesheets, do you? There are blog tutorials out there showing how easy it is to do AJAX with Django.  </p><h3>Opinion</h3><p>While I understand the attitude of Django about AJAX, its not what I want right now. It may be what I need at some point down the road, but if I can get 90% of what I need wrapped up in a nice little package without having to program in Javascript, I&#39;ll take it. Then if I outgrow that wrapper, so be it, I&#39;ll research other toolkits, learn to use JSON, and so on. </p><p>Thus, I really appreciate what the Rails team has done with AJAX. Anything to get me quicker to my goal of a well-oiled, quality web site, the better. The fact they&#39;ve established a strong foundation with the rjs template idea, all the better.</p><p>Django&#39;s serialization is under development. </p><p><em>Conclusion: I rate Rails a 4 and Django a 3 (I&#39;m being generous to Django taking on faith that it&#39;s not so hard to roll your own AJAX with what they provide).</em> </p><p>&nbsp;</p><table border=""1""><tbody><tr><td><strong>AJAX </strong></td><td><strong>Rails </strong></td><td><strong>Django </strong></td></tr><tr><td>Support for AJAX </td><td><p>integrated Scriptaculous;</p><p>rjs templates </p></td><td> object serialization  </td></tr><tr><td><strong>MY RATING: (1=worst, 5=best) </strong></td><td><strong>4 </strong><br /></td><td><strong>3</strong><br /></td></tr></tbody></table><p>&nbsp;</p>",linoj,6537,"43,42","django,rails",,Rails_and_Django_-_AJAX_%28part_10%2F15%29
105,"Rails and Django - Data and User Administration (part 9/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1173765600,9,,2,"<h2>Data Administration</h2> <h3>Django </h3> <p>One of the things that Django is &quot;famous&quot; for is its built in administrative features. Given a Model, the framework can automatically generate a nicely designed set of admin pages to create, retrieve, update, and delete (CRUD) items in the model. It can also search, filter, and sort the lists. All the models which you&#39;ve exposed to the Admin class appear on the admin/ home page. Unlike Rails&#39; scaffolding, the admin is polished enough that it could be given to end users in a production website (such users being content editors, not visitors).</p><p>To enable Admin features for any model, simply add &quot;class Meta:Admin:&quot; to the Model class and refresh the page. Sweet!</p><p>However, as great as it is, I am told the code is very difficult to modify. So either you like and use it, or you&#39;re better off writing your own from scratch. This situation will soon change, as the newforms forms library is being integrated into a new Admin app, and when they&#39;re released you&#39;ll have the full glory of the slick admin interface, plus the easy custom-ability of newform. That&#39;s the promise anyway.</p><p>The Djang admin include basic permissions to add, edit, delete items. It is rudimentary but may suffice in many cases. It is limited to class granularity (operations on  specific  object types) not attributes of those objects. For example you cannot grant permission for a user to edit only items that he had submitted. </p> <h3>Rails </h3> <p>Rails has nothing like Django&#39;s admin GUI, in its core distribution.</p><p>However, Rails does have a number of non-core plug-ins that can automatically generate an admin interface. One is called Streamlined, and is actively under development. There is a webcast of the plugin and it looks quite slick (although I haven&#39;t tried it yet myself). (Another Rails admin plug-in called auto-admin is modeled after the Django one).</p><p>Otherwise, you are expected to write your own, as you would other Controllers + Views. Easy enough, if you don&#39;t mind.  </p> <h3>Opinion</h3><p>One clever blogger reports that on his Rails projects, when he wants an admin interface, he uses Django to administer his Rails models! (A testament to Django&#39;s ability to interface with outside databases, by the way). <br /></p> <p>I should probably give more credit to the Django built-in Admin tool, but its not very customizable (until the promised revision).  Rails is catching up.</p><p>I&#39;ve lumped in Permissions because its not developed enough in either framework to stand on its own.  </p><p><em>Conclusion: Both framework&#39;s are working to improve their admin interfaces. Rating 2-2</em></p><p>&nbsp;</p><table border=""1"" width=""482"" height=""140""><tbody><tr><td><strong>Data Administration<br /> </strong></td><td><strong>Rails  </strong></td><td><strong>Django </strong></td></tr><tr><td>Admin GUI<br /> </td><td>via plug-ins, under development </td><td><p>Built-in admin, </p><p>newforms version under development </p></td></tr><tr><td>Permissions </td><td>rudimentary, do it yourself<br /> </td><td>rudimentary, do it yourself<br /> </td></tr><tr><td><strong>MY RATING: (1=worst, 5=best) </strong></td><td><strong>2</strong><br /></td><td><strong>2 </strong><br /></td></tr></tbody></table><p>&nbsp;</p><h2>User Administration<br /></h2><h3>Authentication<br /></h3><p>The Django Admin app also has basic user management, including administering users and groups, registration, and authentication (login).</p><p>Rails has stated they do not intend to include authentication in their core product. Instead there are plugins, including &quot;act_as_authenticated&quot;, and several derivatives of this, which provide varying degrees of user administration and permissions. You then integrate this into your application.</p><p>In an enterprise environment, including corporate intranets, authentication must often be decoupled from the system to utilize single sign-on systems or directory services like LDAP. If this is important for your application, we&#39;ll leave it up to you to investigate whether the framework offers what you need (via user contributions, no doubt). <br /></p><h3>Registration </h3><p>A corollary of this is <em>registration, </em>which refers to signing up new users. Most systems that have user accounts need a way for users to register themselves. And perhaps generates an email requiring users to activate their account (and thus validate the request). Both frameworks provide a basic level of support for registration, via user contributions (plugins, apps).<br /></p> <h3>Sessions</h3><p>Where there are users there must be sessions. Sessions enable continuity between HTML pages, which are inherently state-less. With sessions, the framework can know when a subsequent request from your browser is still you and not someone else (e.g. for showing error messages in forms, or for tracking items in a shopping cart). </p><p>Both Rails and Django have support for sessions and messaging.</p><p>For anonymous users, messages are passed between pages using an object called the &quot;flash&quot; in Rails. In Django you can pass messages via the &quot;session&quot; framework.</p><p>Neither Rails nor Django does automated housecleaning of expired sessions. You will need to setup a cron job or other script to periodically purge old sessions from the database. </p><h3>Opinion</h3><p>Both frameworks have a long way to go towards providing mature and robust user administration and authentication tools. They&#39;re nowhere near what I&#39;m used to in the Xaraya web application framework. Yes, I understand a &quot;development framework&quot; is not an &quot;application framework&quot;, but that&#39;s no excuse (we&#39;re in the Opinion section here!). </p><p>In general, other than some basic tools and components, you pretty much have to roll your own, especially, for example, if you need to build an advanced multi-user application with various groups and permission levels. I would love to see some seriously useful admin, user management, registration, authentication, and permissions tools to build upon.</p><p>And to be honest, I really need to play with both Rails and Django more, including any plug-ins and apps, to confirm or refute my concerns.</p><p><em>Conclusion: I rate both the same low score of &quot;2&quot;.</em></p><p>Postscript: I recently discovered a Rails generator project called <a href=""http://goldberg.240gl.org/home"">Goldberg</a>  that looks promising. </p><p>&nbsp;</p><table border=""1""><tbody><tr><td><strong>User Administration <br /> </strong></td><td><strong>Rails  </strong></td><td><strong>Django </strong></td></tr><tr><td>Authentication </td><td>as_authenticated plugin <br />and its derivatives </td><td>Built-in admin  </td></tr><tr><td>Registration </td><td>do it yourself<br /></td><td>do it yourself <br /></td></tr><tr><td>Sessions </td><td>yes </td><td>yes </td></tr><tr><td>User messages </td><td>&quot;flash&quot; </td><td>yes </td></tr><tr><td><strong>MY RATING: (1=worst, 5=best) </strong></td><td><strong>2 <br /></strong></td><td><strong>2 <br /></strong></td></tr></tbody></table><br />",linoj,13716,"43,42","django,rails",,Rails_and_Django_-_Data_and_User_Administration_%28part_9%2F15%29
98,"Rails and Django - Templates, Forms (part 8/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1173679200,9,,2,"<h2>Templates</h2><p>Obviously both Rails and Django support display templates, as this is a cornerstone of the MVC architecture separating content from presentation. Templates define the layout and formatting of data, for example, into HTML that is sent back to the user&#39;s browser in an HTTP response.</p><p>In general, templates are intended to be created (or at least edited) by non-programmer designers, an important consideration on team projects. Some debate has ensured regarding just how much programming features should even be permitted in a templating language. </p><p>Rails templates let you use the full power of the Ruby language, but you are &quot;strongly encouraged&quot; to use discretion and not put business logic into your templates (move it into the Controllers instead). </p><p>Django templates have their own little language that is intentionally limited to simple conditional and iteration control structures, and oriented toward non-programmers (i.e. designers).  </p><p>Both frameworks permit page layout templates for sharing layouts among views, and specific templates for individual content. In Rails you use &quot;layouts&quot; (parent page), &quot;partials&quot; (included sub-page), and &quot;collections&quot; (an iterated partial). You can write &quot;helper&quot; functions to extend your tags. <br /> </p><p>Similarly in Django a template can &quot;extend&quot; a parent template (comparable to Rails&#39; layouts but can be multi-level), &quot;inclusions&quot; of sub-pages, and write custom filters and custom tags. In both frameworks you can pass variables to the various template components.</p><p>Both frameworks permit you to replace the default templating system with third party alternatives. If you&#39;re using Rails but prefer Django&#39;s templating language for your designers, for example, someone has written a plugin, named &quot;Liquid&quot; which does just that. </p><h3>Opinion</h3><p>It&#39;s nice to have the full power of Ruby inside the templates. But I see the point about it being dangerous. And if you&#39;re really doing that, the logic should be moved into the controller. Otherwise they both have very good templating features. So I call it even, 3-3. </p><p>&nbsp;</p><table border=""1""><tbody><tr><td><strong>Templates </strong></td><td><strong>Rails                            <br /></strong></td><td><strong>Django </strong></td></tr><tr><td>Language</td><td>Ruby </td><td>Django-template language </td></tr><tr><td>Parent layouts </td><td>&quot;layouts&quot; </td><td>&quot;extends&quot; directive (bottom up) </td></tr><tr><td>Include templates </td><td>&quot;partials&quot; </td><td>inclusion tags </td></tr><tr><td>Extensions </td><td>&quot;helpers&quot; </td><td>custom filters and tags </td></tr><tr><td>Can use alternatives?<br /> </td><td>yes </td><td>yes </td></tr><tr><td><strong>MY RATING: (1=worst, 5=best) </strong></td><td><strong>3 </strong><br /></td><td><strong>3 </strong><br /></td></tr></tbody></table><p>&nbsp;</p><h2>Forms</h2><p>Basically the role of a framework with regard to forms includes</p><ul><li>Generate HTML &lt;label&gt; and &lt;input&gt; tags based on Model class attributes</li><li>Produce those fields in an empty &lt;form&gt; for creating new objects</li><li>Produce those fields in a &lt;form&gt; with values filled in for updating an existing object</li><li>Validate values posted by the form based on the Model&#39;s validation rules</li><li>Return to the form, with error messages if any fields do not validate   </li></ul><p>The logic and syntax may vary somewhat, but both Rails and Django have very good forms support.  </p><p>Django is presently in the process of rewriting its forms classes to be more flexible. It is available for download from the repository.</p><p>Rails includes support for forms that populate multiple Models. Rails also introduces the notion of &quot;form_helpers&quot; that help you standardize the look, layout and behavior of difference forms across your website. </p><p><em>Conclusion: I&#39;ll rate forms in Rails and Django equally, 3-3. I can see that Rails&#39; is powerful, and we&#39;ll give Django&#39;s newforms the benefit of the doubt.</em></p><table border=""1""><tbody><tr><td><strong>Forms </strong></td><td><strong>Rails  </strong></td><td><strong>Django </strong></td></tr><tr><td>MY RATING: (1=worst, 5=best) </td><td>3 </td><td>3 </td></tr></tbody></table><p>&nbsp;</p><br />",linoj,7972,"43,42","django,rails",,Rails_and_Django_-_Templates%2C_Forms_%28part_8%2F15%29
97,"Rails and Django - Routing and Controllers (part 7/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1173611345,9,,2,"<h2>URL Routing</h2><p><em>URL routing</em> is how the framework interprets an incoming request from the user&#39;s browser, and decides which function to direct it to, passing along any additional parameters from the user. The router allows “friendly URLs”, that are human-readable and don&#39;t have &quot;those scary <em>?x=something</em> blah blah things&quot; in the strings (as someone I know put it)!</p><h3>Rails</h3><p>In Rails the config/routes.rb file defines the URL mappings. For example,<br /></p><pre>map.connect &#39;:controller/:action/:id&#39;<br /></pre><p>will route any URL in this format to the corresponding controller class, action method, and pass along the id as an argument. Thus, <em>http://www.mysite.com/products/detail/123</em> goes to the <em>ProductsController</em>, <em>“detail”</em> action, for <em>id = 123</em>.</p><p>But you can change the mapping with new rules as needed, perhaps even change the url layout of the site without out changing  any of the link_to, layout, form tags, etc in the code or templates.</p><p>Rails provide a URL generator (url_for method) so you do not need to hardcode real URLs in your code or templates. It uses the rules defined in routes.rb, so that logic is maintained in a single central location.</p><h3>Django</h3><p>In Django, the <em>urls.py</em> file defines the URL mappings. It uses standard regular expression (regex) syntax to parse the URL string and map it to your functions. For example, <br /></p><pre>(r&#39;^(?P&lt;object_id&gt;\d+)/products/detail/$&#39;, &#39;store.products.view&#39;),<br /></pre><p>will route any URL in format www.mysite.com/products/detail/NNN to the app “store”, view “products”, method “detail”, with argument id = NNN. </p><p>Note, you explicitly state the mapping from the URL strings to the corresponding class and method. The URL is completely decoupled from the structure of your app.  Thus, for example, you could rename your app or classes without affecting the URLs the rest of the world uses to access your site. And you can provide multiple routes to the same functions, for example to support legacy URLs on a new site.</p><p>Django recently added a template tag to generate URLs based on the urls.py configuration.   </p><p>Django uses an HttpRequest and HttpResponse objects to pass state through the system. HttpRequest contains metadata about the request (e.g post and session info). Each view is responsible for return an HttpResponse object (e.g includes the HTML body etc).</p><h3>Opinion</h3><p>Django&#39;s loosely coupled URL mapping and regex syntax is much more flexible and thus more powerful.</p><p>Unfortunately I was born missing the &quot;regex gene&quot;! For years I have tried to learn it, and failed pathetically. Sure, I can copy and make small changes from examples. But I do hesitate to put a key feature of my websites into my regex-challenged hands.  </p><p>With regard to loose coupling in Rails, there is a workaround, by creating a dummy controller class which then makes the call to the actual one. Its really a kludge, but it I suppose it works.</p><p><em>Conclusion: Django&#39;s loosely coupled, regex based URL mapping wins against Rails&#39; declarative mapping, 4 to 3.</em></p><p>&nbsp;</p><table border=""1""><tbody><tr><td><strong>URL Routing  </strong></td><td><strong>Rails  </strong></td><td><strong>Django  </strong></td></tr><tr><td>URL Mapping </td><td><p>centralized, declarative  </p><p>(routes.rb) </p></td><td><p>distributed, regex </p><p>(urls.py) </p></td></tr><tr><td>Reverse Mapping </td><td>complete </td><td>limited </td></tr><tr><td><strong>MY RATING: (1=worst, 5=best)  </strong></td><td><strong>3</strong><br /></td><td><strong>4 </strong></td></tr></tbody></table><p>&nbsp;</p><h2>Controllers / Views</h2><p>The controllers are the real meat of your application. Controllers define the action methods that handle specific requests from users. In Rails this is the Controller class; in Django its called Views. (And what Rails calls Views are equivalent to what Django calls <em>templates</em>).  </p><p>Surprisingly, I don&#39;t have a lot to say here about controllers. Or else I&#39;d have too much. That&#39;s because when you get into the controllers, you&#39;re really describing the programming language and framework&#39;s API, libraries and helper functions.  </p><p>In both Rails and Django, the controller actions are usually pretty short, just a few lines of code. They grab some data via the Model class, perhaps do some processing, and package variables that are passed into the templates. They might also handle error conditions and exceptions (for example, in a shopping application, if the URL requests a product Id that doesn&#39;t exist in the database). </p><p>Rails <em>scaffolding</em> provides a quick and dirty automatic generation of the Controllers and Views for a model. These are intended as temporary placeholders while you incrementally build your app.</p><p>Django comes with built-in generic views. Not the same as Rail&#39;s scaffolding, these are handy for common actions such as list/detail interfaces, archive pages, and a set of view for creating, editing, and deleting objects. Of course, you still provide individual templates for any custom views. </p><p>In Django, you can augment views with “decorators”, a Python shortcut construct for specifying meta-attributes and contstraints. For example, a view method preceeded with @login_required will use the integrated authentication system to verify the user is logged in or he&#39;ll be redirected to a login page. In Rails you can accomplish the same thing with &quot;filters&quot;.  </p><p><em>Conclusion: I rate both a 3, and any real differences are covered in the other criteria.</em></p><p>&nbsp;</p><table border=""1""><tbody><tr><td><strong>Controllers / Views  </strong></td><td><strong>Rails  </strong></td><td><strong>Django  </strong></td></tr><tr><td><strong>MY RATING: (1=worst, 5=best)  </strong></td><td><strong>3</strong><br /></td><td><strong>3 </strong><br /></td></tr></tbody></table><p>&nbsp;</p><p>&nbsp;</p>",linoj,8968,"43,42","django,rails",,Rails_and_Django_-_Routing_and_Controllers_%28part_7%2F15%29
96,"Rails and Django - Database and Models (part 6/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1173333600,9,,2,"<h2>Database and Models</h2><p>A lot of complexity is encapsulated by database abstraction and mapping to application objects. Both Rails and Django share robust support, including: </p><ul><li>Both frameworks use an ORM model (object relational mapping), which means there&#39;s an mapping between database tables and corresponding object classes. Rails&#39; ORM is called <em>ActiveRecord</em>. Django&#39;s is named <em>Model</em>. In other words, both frameworks provide an API customized to your database “for free”.</li></ul><ul><li>Both have you declare the field names, types and attributes in the class definitions. You can set constraints on each field (e.g. max number of characters), automatic values (e.g. creation date, update date), and relations to other tables (foreign keys) for one-to-many and many-to-many relations. </li></ul> <ul><li>Both frameworks support “lazy access” which means the database is queried at the last possible moment, avoiding redundant operations and improving performance. Both also support transactions (atomic database operations), provided the underlying database supports.</li></ul><ul><li>Both let you define &quot;hooks&quot;, functions that are attached to specific operations without having to change the model code itself, such as before create, after create, before save, after save, etc. In Rails they&#39;re called &quot;<em>observers</em>&quot;. In Django they&#39;re called &quot;<em>signals</em>&quot;.</li></ul> <ul><li>Support the leading database servers, including MySQL, PostgreSQL, and SQLite. Rails also supports Oracle and MSSQL (in development for Django). I will not address the lower level database abstraction and driver layers, although there appears plenty of room for discussion in that area too.</li></ul><h3>Rails</h3><p>Rails includes a powerful migration tool that lets you define your database schema in a series of files called “migrations.” Migration files, named something like <em>db/001_create_mymodel.rb, db/002_adding_a_column.rb</em>, etc, define your tables&#39; field names and types (text, integer, date, etc). Migrations are subclass of <em>ActiveRecord::Migration</em></p><p>When you run the migrate command (<em>rake db:migrate</em> ) your database is (re)structured accordingly. Migrate keeps track of the current migration level, processing only new scripts since the last time it was run. And it lets you roll back to an earlier schema.</p><p>Next, you define the model class for each data table, containing the business logic associated with that data (ie. <em>app/models/mymodel.rb</em>). The model may define validation rules, such as <em>required</em>, <em>unique</em>, or <em>length</em>, and used in user input forms. The model also defines any relations with other tables (such as one-to-many relationships). You would also define any model-specific methods helpful for accessing and updating data.</p><p>The Rails naming “magic” is really quite funky so I&#39;ll give an example here. Let&#39;s say you create a model “line_item” with the command  </p><pre>$ ruby script/generate model line_item</pre><p>This may create a file <em>db/migrate/006_create_line_items.rb</em> which defines a class <em>CreateLineItems &lt; ActiveRecord::Migration</em>. It also creates a file <em>app/models/line_item.rb</em> (note singular) which defines a class <em>LineItem &lt; ActiveRecord::Base</em> . Thus the rule is: Classes are singular, Tables are plural. </p><p>The model inspects at the database columns (produced by the migration) to determine the method names available to the model object. </p><p>Rails also provides a tool for creating “fixtures”, pre-defined data sets used (and re-used) in testing. Fixture data is specified in a simple popular language called YAML (which is easier to read and write than XML).</p><p>Rails supports model inheritance through a fairly simple mechanism of a single table with a collection of all columns from all child classes. This can lead to wide tables with many empty fields. </p><p>Finally, Rails has built in accommodation for 3 databases-- development, testing, and production. This is very handy and shows the framework is well footed in the real world.</p><h3>Django</h3><p>In Django, a model&#39;s table schema and methods are defined in a single <em>models.py</em> file. You add class variables which will become the database table columns.</p><p>Then, use the command to generate the database table from the model, such as</p><pre>$ python manage.py syncdb</pre><p>The <em>manage.py</em> script actually can do a lot of things. Before syncdb, for example, you might want to try </p><pre>$ python manage.py sql myapp</pre><p>which will dump the SQL statements that syncdb will use to create the table, lets you doublecheck for errors in the model.</p><p>Django does not have a tool for migrations. It&#39;s under discussion (http://code.djangoproject.com/wiki/SchemaEvolution) but doesn&#39;t appear to even be slated for the 1.0 release. We&#39;re told basic migrations are easy to do directly in SQL, and the “hard” stuff, well, even Rails can&#39;t do properly (ref: irc log 2/18/07)</p><p>Django is working on model inheritance for the 1.0 Release. The plan is to use &quot;joins&quot; of separate tables for each subclass, a more thorough approach than the Rails one, but also more complex to implement.</p><p>Django can easily integrate with legacy databases, using a utility that introspects an existing database and produces a corresponding models.py file.</p><h3>Opinion </h3><p>To summarize, in Rails you create the database table separately, and the Model class inspects the table column definitions to determine its attributes. Django is opposite, you define the data attributes in your Model class, and that is used to create and drive the database table. Rails does pluralization magic; Django is explicit.</p><p>The Rails approach makes it difficult (if not impossible) for it to integrate with legacy databases. </p><p>The Rails migration tool is a powerful approach supporting agile development, and in my opinion, it&#39;s an significant deficit in Django. I also really like how Rails has integrated the notions of development, testing, and production databases into its configuration.</p><p>Overall, the Django approach to Models is cleaner. The Rails implementation is more mature and more supportive of the whole development process. <br /></p><p><em>Conclusion: Both frameworks appear to provide a robust and complete ORM model. Django is weaker without features like migrations and model inheritance (and legacy support is not so important to me). Rails wins 4 to 3.</em></p><p>&nbsp;</p><table border=""1""><tbody><tr><td><strong>Database / Model </strong></td><td><strong>Rails </strong></td><td><strong>Django </strong></td></tr><tr><td>Schema migration </td><td>&quot;Migrations&quot; </td><td>manual (SQL) </td></tr><tr><td>ORM class </td><td>&quot;ActiveRecord&quot;  </td><td>&quot;Model&quot; </td></tr><tr><td>Model attributes </td><td>introspection </td><td>declarative </td></tr><tr><td>Relations (1:1, 1:N, N:M)  </td><td>yes </td><td>yes </td></tr><tr><td>Pluralization </td><td>yes </td><td>no </td></tr><tr><td>Hooks </td><td>&quot;observers&quot; </td><td>&quot;signals&quot; </td></tr><tr><td>Transactions </td><td>yes </td><td>yes </td></tr><tr><td>Model inheritance </td><td>yes (single table) </td><td>under devel (joins) </td></tr><tr><td>Devel vs Testing vs Production </td><td>built in </td><td>&nbsp;</td></tr><tr><td>SQL servers </td><td><p>MySQL, SQLite, </p><p>Postgres, MSSQL, Oracle, </p><p>Db2, Sybase, more  </p></td><td><p> MySQL, SQLite, PostgreSQL </p><p>(MSSQL and Oracle in devel)</p></td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>MY RATING: (1=worst, 5=best)  </strong></td><td><strong>4 <br /></strong></td><td><strong>3 <br /></strong></td></tr></tbody></table><p>&nbsp;</p>",linoj,12355,"43,42","django,rails",,Rails_and_Django_-_Database_and_Models_%28part_6%2F15%29
95,"Rails and Django - Installation / Directory Structure (part 5/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1173160800,9,,2,"<p>I am not attempting to provide a manual for the frameworks but I do believe that looking into the generated file system directory structure can provide some useful insight. </p><p>I won&#39;t go into installation, my experience with each was comparable and pretty uneventful. I did blog the details at:<br /></p><ul><li><a href=""postings/85"">Installing Rails on my iMac</a> </li><li><a href=""postings/89"">Installing Django on my iMac</a></li></ul><p>Note: Ruby files have the .rb extension, Python files have .py.</p><p>Both Rails and Django come with a lightweight, single process web server for development in your local environment. </p><h3>Rails</h3><p>To start a  Rails project you use the command: </p><pre>$ rails myproject</pre><p>After generating a new project you&#39;ll find a full and rich set of subdirectories all ready for you to play in. <br /></p><pre>myproject/</pre><pre>	app/			your application files</pre><pre>		controllers/		your controller classes</pre><pre>		helpers/		your helper functions</pre><pre>		models/			your model classes</pre><pre>		views/			your view templates</pre><pre>			layouts/	your page layout templates</pre><pre>	components/</pre><pre>	config/			configuration files</pre><pre> 	db/			your database migration files</pre><pre>	doc/			generated docs</pre><pre> 	lib/			additional application code</pre><pre> 	log/			log files</pre><pre> 	public/			images, javascript, stylesheets</pre><pre>	script/			rails ruby scripts</pre><pre>	test/			your unit, functional, integration tests, and fixtures</pre><pre>	tmp/</pre><pre>	vendor/			plugins</pre><pre>        Rakefile</pre><pre>        README</pre><p>        Under the app/ directory, your controllers, models, and views are kept together in their separate subdirectories. <br /><br />To generate a new model:<br /></p><pre>    $ ruby script/generate model mymodel<br /></pre><p>Which produces additional files:<br /></p><pre>myproject/</pre><pre>	app/</pre><pre>		models/</pre><pre>			mymodel.rb</pre><pre>	test/</pre><pre>		unit/</pre><pre>			mymodel_test.rb</pre><pre>		fixtures/</pre><pre>			mymodels.yml</pre><pre>	db/</pre><pre>		migrate/</pre><pre>			001_create_mymodels.rb<br /></pre><p>First of all, if you don&#39;t want to write any templates, especially when first starting out a project, you can utilize the Rails built-in “scaffolding” generator, which will make everything you need (controller and views) on the fly from a Model. Scaffolding is widely hailed as a great thing about Rails. But its important to keep in mind that its really just to be used temporarily until you write your real code and templates. Scaffolding is not intended to be used in your final application.</p><p>To generate a new controller:</p><pre>$ ruby script/generate controller mycontr </pre><p>Which produces additional files:<br /></p><pre>myproject/</pre><pre>	app/</pre><pre>		controllers/</pre><pre>			mycontr_controller.rb</pre><pre>	helpers/</pre><pre>		mycontr_helper.rb</pre><pre>	views/</pre><pre>		mycontr/</pre><pre>	test/</pre><pre>		functional/</pre><pre>			mycontr_controller_test.rb</pre><p>Most of the files are stubs, containing only basic hints. You proceed to edit the files and write code to build your application.</p><h3>Django</h3><p>To start a Django project:<br /></p><pre>$ django-admin.py startproject myproject<br /></pre><p>After generating a new project, the directory contains the following files: <br /></p><pre>myproject/</pre><pre>	__init__.py </pre><pre>	manage.py		django script for this project</pre><pre>	settings.py		django settings</pre><pre>	urls.py			django URLconf (dispatch controller)<br /></pre><p>Then create an app:<br /></p><pre>    $ python manage.py startapp myapp<br /></pre><p>Which produces the following files: <br /></p><pre>myproject/</pre><pre>	myapp/</pre><pre>		__init__.py</pre><pre>		models.py	your models</pre><pre>		views.py	your views<br /></pre><p>The __init__.py files are required by Python to recognize the directory as a valid module (library). Depending how you want to set things up, you might add a templates/ directory under myapp/, or you could put your templates in another place altogether. </p><p>Thus, generally the models, views, and templates are kept together under the app. This allows apps to be modular and pluggable, and transferable to other Django installations. </p><h3>Opinion</h3><p>The Rails project directory makes it very clear that there&#39;s a place for everything, and everything in its place. Files are organized by type-- views, controllers, models, etc. which means sections of your site could be spread across various directories. If you have a lot of files and want to modularize the code, you can use subdirectories. Still, a set of related files (model, controller, templates) are spread about in different directories, which seems upside down to me. But the organization is clean, and with Rails&#39; file naming conventions, it&#39;s probably not much of a problem (no doubt this explains why TextMate on the Mac is a preferred editor, as it includes an integrated file explorer).</p><p>In Django, the default directories are sparse. You get the minimum you need to get started. No more, no less.</p><p>The organization of Django&#39;s apps seems more intuitive to me than spreading related files across multiple directories, and seems to lend itself better to application level modularity. (On the other hand, Rails has a much stronger plug-in capability, and a growing repository of reusable Plugins that Django sorely lacks).</p><p><em>Conclusion: Django&#39;s simple unobtrusive directory structure is best.</em></p><p>&nbsp;</p><table border=""1""><tbody><tr><td><strong>Installation / Directory Structure </strong></td><td><strong>Rails </strong></td><td><strong>Django </strong></td></tr><tr><td>Installation </td><td>easy </td><td>easy </td></tr><tr><td>Directories </td><td>strict, thorough, by function </td><td>flexible, sparse, by app </td></tr><tr><td><strong>MY RATING: (1=worse, 5=best) <br /></strong></td><td><strong>4 </strong></td><td><strong>5 </strong></td></tr></tbody></table><p>&nbsp;</p>",linoj,9632,"43,42","django,rails",,Rails_and_Django_-_Installation_%2F_Directory_Structure_%28part_5%2F15%29
94,"Rails and Django - Framework Concept (part 4/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1173031263,9,,2,"<h2>Framework Concept </h2><p>Conceptually both Rails and Django are very similar, adhering to the model-view-controller architecture. I will not go into details here about MVC, as there are plenty of references not the least of which are the introductory chapters to the Rails and Django documentation and books, and <a href=""http://en.wikipedia.org/wiki/Model-view-controller"">Wikipedia</a> . </p><p>However it&#39;s important to say that Django is not a Rails clone. And there are quite a few Rails-clones around, in any number of languages. Rather, Django and Rails have important differences both in concept and implementation. </p><h3>Conceptual Commonality</h3><p>First, the common ground, very briefly. Both Rails and Django adhere to modern principles of </p><ul><li>Object architecture – use object classes and inheritance to organize and encapsulate data and logic;</li><li>Agile development-- the ability to implement small, incremental changes and features quickly; agile development encourages collaboration;</li><li>DRY – stands for “don&#39;t repeat yourself,” create reusable snippets of code rather than duplication via copy/paste.</li></ul><p>Both projects agree that a framework should provide:</p><ul><li>Allow easy modeling of your application&#39;s data, and encapsulate the business logic into objects, including responsibility for create, retrieve, update and delete (CRUD) of these objects in a database;</li><li>Map user events (like URL requests from a browser) to application code that accesses the model and generates a response (view) back to the user&#39;s browser;</li><li>Use a separate templating system to define how data is presented to the user, whether html+css layouts and styles, or some other data formats (XML). </li></ul><p>In addition, both projects agree that the framework should:</p><ul><li>Support test-driven development</li><li>Support generated documentation</li><li>Support community driven enhancements</li></ul><p>Both frameworks provide:</p> <ul><li>Scripts for creating a new project with default files</li><li>An embedded web server for development</li><li>more...</li></ul> In general, both frameworks provide a program &quot;stack&quot; -- layers of functionality, written for the framework and tightly integrated (as opposed fully independent components glued together). <h2>Conceptual Differences</h2> <h3>Rails</h3> <p>Rails promotes the idea of “opinionated software” and “convention over configuration”, where the system automatically builds and fits the initial pieces together for you. Then you can accept these reasonable defaults or modify/add just what is necessary, incrementally, as you build your application.</p><p>Rails also advocates “constraints are liberating”. For example, the directory layout is well defined and your application must conform to this convention. The idea is that when decisions like these are made for you, then you as a developer do not have to spend precious brain cycles making these basic decisions, and can focus instead on what&#39;s really important-- designing and implementing your website. It also facilitates team collaboration because new players will more readily know, for example, where to find files and know what they do based on their names.</p><p>Another example is naming conventions like <em>automatic pluralization</em>. Let&#39;s say your site manages products-- in Rails, your database table is named with the plural “Products”, and your object class is singular, “Product”. Rails handles the pluralization/ singularization automatically. This is handy and makes things more intuitive as you construct your application, as long as you know to expect it. Of course, you can override these defaults if needed.</p><p>One more example is AJAX support. Rails has standardized on a common AJAX library, provides conventions for server side scripting (.rjs files), and allows you to integrate AJAX into your apps while programming in the Ruby language and not even see the Javascript.</p><p>In this way, Rails takes pride that many things are done “auto-magically”. In Rails, like in life, fun is magical, and magic is fun!</p> <h3>Django</h3> <p>One of the driving principles behind Django is “loose coupling”, where each aspect of the framework tries to remain independent of the others. While all the pieces work together in tandem, they are not dependent upon each other. This makes it possible, in most cases, to substitute alternative components if desired or necessary. More important, it forces a discipline of clean orthogonal architecture.</p><p>For example, URL routing is completely decoupled from the view methods that get called. <br />Another example is how Django does not require you adhere to a strict directory structure. They suggest a file organization (as built with the manage.py script, but you can put and move things wherever you need or desire.</p><p>Django prefers transparency over “magic”. In 2006 the project underwent a refactoring (rewrite) where implicit features were removed. This was blatantly referred to as “magic-removal” (for a complete list of changes in that effort see http://code.djangoproject.com/wiki/RemovingTheMagic). For example, Django, like Rails, originally had automatic pluralization, but this was taken out.</p><p>With regard to AJAX, Django intentionally does not encapsulate AJAX into its framework. Rather, it provides <em>support</em> for AJAX in how data is passed between server and client (serialization), but lets you choose any of the dozens of good AJAX toolkits available. More loose coupling and being explicit.</p><p>Despite what I said earlier about both Rails and Django being MVC (model-view-controller) architectures, Django prefers the MTV acronym -- <em>model-template-view</em>. That is, Rails <em>controller</em> classes are equivalent to <em>views</em> in Django, and Rails <em>views</em> are what Django simply calls <em>templates</em>. <br /></p><h3>Opinion</h3><blockquote><p>&quot;Any sufficiently advanced technology looks like magic&quot; – A. C. Clarke</p></blockquote><p>Or,</p><blockquote><p>ma·gi·cian -- [muh-jish-uhn] -- an entertainer who is skilled in producing illusion by sleight of hand, deceptive devices, etc.; conjurer. (Dictionary.com).</p></blockquote><p>I really appreciate Rails&#39; efforts to take care of the busy work for me, and to encapsulate complexity (like Javascript) that I&#39;d really rather not have to do myself if I don&#39;t have to (provided I can get under the hood when necessary). In fact, that&#39;s a great way to get going quickly and learn how things work at the same time. </p><p>On the other hand, I really appreciate Django&#39;s efforts to keep everything clean, decoupled, and transparent. That helps keep the guess work out of programming. It probably also helps with debugging, where questions like “is the problem something I wrote, or just how I&#39;m using the framework?” might be easier to discern in Django.</p><p>So perhaps the tide shifts depending whether you put more weight on efficient development versus efficient debugging / maintenance. (I may be extremely wrong about this, it&#39;s just a hunch).</p><p>I&#39;ve heard Rails-skeptics caution that the framework could (will) become bloated in a few years (bloated means big, slow, clunky), likened to the enthusiasm Php experienced in the 1990&#39;s.</p><p>Django may require me to learn web technology more deeply to use the framework effectively. This is probably a good thing, we all should know our craft. Then again, we can&#39;t all be expected to know everything, and still get work done. Hmm... </p><p>OK, I&#39;m going to get killed for this one-- <em>Rails reminds me more of Windows. Django reminds me of Linux</em>. Sure both are open-source, I&#39;m not talking about that. But Windows took an early emphasis as “the any-man&#39;s operating system”, magically hiding a lot of technical details, that&#39;s great for many people, and very frustrating for others. Likewise, Linux is composed of many loosely coupled components, is very transparent, is lean, reliable, and frustrates the heck out of normal people. Maybe one day we&#39;ll get the “OSX of Frameworks” which marries the best of both? :)</p><p>&nbsp;</p><table border=""1""><tbody><tr><td><strong>Framework Concept <br /></strong></td><td><strong> Rails</strong></td><td><strong>Django </strong></td></tr><tr><td>Policy </td><td>paternalistic, opinionated <br /></td><td>loose coupling<br /></td></tr><tr><td>Transparency </td><td>&quot;magic&quot; </td><td>explicit </td></tr><tr><td><strong> MY RATING (1=worst, 5=best) <br /></strong></td><td><strong>3 </strong><br /></td><td><strong>4 </strong><br /></td></tr></tbody></table><p><br /><strong>A few words about this rating: </strong>Unlike most of the other criteria, my rating here is much more a gut feel than a technical or quantitative assessment. I simply wanted to give Django a higher score for the reasons cited above. From the beginning, I decided not to do fractional values. And I couldn&#39;t justify giving either a score of 5, since there&#39;s always room for improvement and new concepts will emerge that build on current experience. </p><p>&nbsp;</p>",linoj,6660,"43,42","django,rails",,Rails_and_Django_-_Framework_Concept_%28part_4%2F15%29
108,"RAILS REFERENCES","Until I find a better way of organizing this...",3,1172867968,9,,0,"<h2>General</h2><p>http://wiki.rubyonrails.com/rails/pages/UnderstandingGenerators</p><p>http://wiki.rubyonrails.com/rails/pages/AvailableGenerators</p><p>http://weblog.jamisbuck.org/2006/10/18/skinny-controller-fat-model</p><p>Ruby Gems docs, run locally <em>$ gem_server</em> , then<br />http://127.0.0.1:8808 </p><p>O&#39;Reilly Rails Cookbook <br />http://safari.oreilly.com/0596527314</p>  <p>empty rails app (with some plugins and stuff already there)</p><p>http://blog.caboo.se/articles/2007/4/3/caboose-sample-rails-application</p><p>http://blogs.tech-recipes.com/johnny/rails-quick-reference/ </p><br /><p>Overview of REST<br />http://ryandaigle.com/articles/2006/8/1/whats-new-in-edge-rails-simply-restful-support-and-how-to-use-it</p><p>Great overview by Dave  Thomas http://pragdave.pragprog.com/pragdave/2007/03/the_radar_archi.html</p><p>ActiveResource</p><p>http://weblog.techno-weenie.net/2006/12/12/taking-ares-out-for-a-test-drive </p><br /><h4>Blogs and Forums</h4> <p>http://railsforum.com/</p> <p>http://pluginaweek.org/<br />http://wiki.pluginaweek.org/Plugin_Summaries</p> <p>http://clarkware.com/cgi/blosxom/Rails <br /></p><p>&nbsp;</p><h4>Rails Tips and Idioms </h4><p>http://www.therailsway.com/</p><p>http://glu.ttono.us/articles/2006/08/30/guide-things-you-shouldnt-be-doing-in-rails</p><p>&nbsp;</p><h4> empty apps</h4><p>9/9/08: http://github.com/fudgestudios/bort/tree/master</p><h4>Ruby</h4><p>39 Rubisms: http://errtheblog.com/post/44</p><p>&nbsp;</p><h4>Tutorials </h4><p>RailsForums Tutorials : http://railsforum.com/viewforum.php?id=20 </p><p>IBM tutorials : http://www.intelligentedu.com/blogs/post/best_new_training_sites/3537/9-best-ruby-on-rails-tutorials-from-ibm</p><p>http://www.tutorialized.com/tutorials/Ruby-on-Rails/1</p><p>&nbsp;</p><h4>Screencasts</h4><p>http://railscasts.com/episodes</p><p>http://www.peepcode.com/ </p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><h2>Rails Scripts</h2><ul><li>script/generate model  -- creates a migration file and stubs for the model</li><li>script/generate migration -- creates a migration for an existing model</li><li>script/generate controller -- creates stubs for a new controller and its views</li><li>script/generate resource -- creates migration, model, controller for REST </li><li>script/generate scaffold_resource -- like resource also adds views and ?  </li><li><br /></li></ul><h2>Apps/Generators</h2><p>Goldberg: generator for security, site navigation and content management <br />http://goldberg.240gl.org/</p><p>(an issue with goldberg is the amount of configuration that stored in the database makes syncing dev to production more an issue, eh?)</p><p>&nbsp;</p><p>RailFrog:<br />http://railfrog.com/</p><p>(Camping is not rails, too small, simple http://code.whytheluckystiff.net/camping/) <br /></p><p>framework with ajax, themes, DRYML<br />http://hobocentral.net/ <br /></p><h4>Project management</h4><p>Assembla.com, which provides Trac as well as Subversion </p><p>hosted trac is here: http://devjavu.com/ </p><p>Other possibilities:<br />Richard White of SlimTimer.com is using 16bugs.com<br /><br />lighthouseapp.com (beautifully simple issue tracking)  <br /></p><p>Retrospectiva (like Trac) : http://retrospectiva.org/</p><p>I&#39;ve been using wush.net for some years and I&#39;m very happy with it.</p><p>&nbsp;</p><h4>CMS</h4><p>RadiantCMS, seems too self-contained</p><p>Mehpisto</p><h4>Forums</h4><p>Beast, lightweight 500 lines of code http://beast.caboo.se/ </p><p>&nbsp;</p><h2>Exception handling</h2><p>http://wiki.rubyonrails.org/rails/pages/HowtoConfigureTheErrorPageForYourRailsApp </p><p>http://lists.rubyonrails.org/pipermail/rails/2006-February/018581.html </p><p>http://www.railsonwave.com/railsonwave/2007/1/19/howto-raise-and-rescue-exceptions-in-ruby-on-rails</p><p>&nbsp;</p><h2>Forms</h2><p>a form generator DSL: http://activeform.rubyforge.org/</p><p>checkbox observer to update db upon click http://www.ruby-forum.com/topic/112174</p><p>http://agilewebdevelopment.com/plugins/smart_form</p><p>&nbsp;</p><p>client side validation http://agilewebdevelopment.com/plugins/livevalidation</p><p>&nbsp;</p><h4>dropdown lists</h4><p>http://code.google.com/p/recordselect/</p><p>&nbsp;</p><h4>multipage forms</h4><p>http://wiki.rubyonrails.com/rails/pages/HowToBuildMultiStageForms</p><p>http://snippets.dzone.com/posts/show/277</p><p>http://railsforum.com/viewtopic.php?id=721 </p><br /><br /><h2>Templates</h2><h4>Alt languages</h4><p>HAML (just &#39;cause its an interesting idea)<br />http://haml.hamptoncatlin.com/</p><p>&nbsp;</p><h4>rhtml notes </h4><p> if you&#39;re in a view, &lt;%= debug @something %&gt;</p><p>&lt;%#  commented out %&gt;</p><p>Rails will use layouts/application.rhtml as a global layout</p><p>&nbsp;</p><p>Helpers example: rounded corners<br />http://www.igvita.com/blog/2007/03/15/block-helpers-and-dry-views-in-rails</p><p>&nbsp;</p><h4>Partials</h4><p>:locals =&gt; {&quot;key&quot; =&gt; &quot;value }</p><p>but there&#39;s magic: if you have a partial called _person.rhtml and a @person variable hanging around, it automatically passes it in to the partial  as person without the @</p><h4>URLs</h4><p>http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/ed8af531c9ce4654?hl=en</p><h4>Nested layouts</h4><p>little  module for it: http://mywheel.net/blog/index.php/2006/08/12/nested-layouts-in-ruby-on-rails/</p><p>better, here&#39;s a plug-in: http://nested-layouts.rubyforge.org/<br /></p><h2>Helpers</h2><p><strong>simply_helpful plugin</strong> makes cleaner helpers (RESTful helpers)<br />http://matthewman.net/articles/2006/09/04/new-rails-feature-simply_helpful<br /></p><p>&nbsp;</p><h2>Authentication </h2><p><strong>roll your own:</strong> </p><p>http://www.aidanf.net/rails_user_authentication_tutorial</p><p>http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/5f2f88f30e128b82?hl=en</p><p><strong>AAA plugin and derivatives </strong></p><p>http://technoweenie.stikipad.com/plugins/show/Acts+as+Authenticated </p><p>Roles based authentication, works with acts_as_authenticated and others: http://www.writertopia.com/developers/authorization</p><p>I am using restful_authentication and simple_access_control plugins <br /></p><p><strong>Restful authentication based on Acts As A:</strong></p><p>http://agilewebdevelopment.com/plugins/restful_authentication</p><p>http://blog.integralimpressions.com/blog/authentication_for_your_api_or_feed </p><p>http://urbanpuddle.com/articles/2007/03/05/restful-authentication-for-ruby-on-rails-apps</p><p>Security Alert! http://www.rorsecurity.info/2007/10/28/restful_authentication-login-security/ </p><p>&nbsp;</p><p><strong>LoginGenerator </strong></p><p>http://wiki.rubyonrails.org/rails/pages/LoginGenerator</p><p>descendant: adds actionMailer for validation and new password: </p><p>http://wiki.rubyonrails.com/rails/pages/SaltedHashLoginGenerator</p><p>descendant: a bit cleaned up:<br /></p><p>http://wiki.rubyonrails.com/rails/pages/LoginSugar<br /> </p><p>&nbsp;</p><p><strong>Open ID</strong></p><p>http://www.bencurtis.com/archives/2007/03/rails-openid-and-acts-as-authenticated/</p><p>http://www.rubyinside.com/7-openid-resources-for-rails-developers-418.html</p><p>http://agilewebdevelopment.com/plugins/openidauthentication<br /></p><p>&nbsp;</p><h2>Components</h2><p><strong>Cells</strong></p><p>http://mikepence.wordpress.com/2008/03/16/cells-bring-clean-re-use-to-your-rails-views/</p><p>http://cells.rubyforge.org/overview.html</p><p>&nbsp;</p><p><strong>embedded -action </strong> http://rubyforge.org/pipermail/cells-talk/2008-March/000028.html</p><p>&nbsp;</p><p> http://formbuilder.rubyforge.org/</p><p>&nbsp;</p><h2>Authorization</h2><p>Authorization plugin </p><p>http://www.writertopia.com/developers/authorization</p><p>http://wiki.rubyonrails.org/rails/pages/Authorization+Plugin </p><p>http://www.billkatz.com/authorization (doc, tutorial)<br /></p><p>&nbsp;</p><p>simple_access_control plugin</p><p>http://opensvn.csie.org/mabs29/plugins/simple_access_control/README</p><p>derived from acl_system2</p><p>http://prometheus.hki.uni-koeln.de/pandora-doc/plugins/acl_system2/</p><p>&nbsp;</p><p>authGenerator</p><p>http://penso.info/auth_generator</p><p>&nbsp;</p><h2>Calendar</h2><p>http://www.restatesman.com/static/calendar </p><p>http://wiki.rubyonrails.org/rails/pages/DynamicCalendarHelper</p><p>recommended calendar control: http://code.google.com/p/dhtml-calendar/<br />hatezilla​​: ​yeah i was using datebocks before, but it was getting cumbersome, that one is pretty nice <br /></p><h4>natural language dates </h4><p>pure javascript / ajax  http://datetime.toolbocks.com/</p><p>gem library (used by topfuky)  http://rubyforge.org/projects/chronic</p><p>&nbsp;</p><h2>Images, Multimedia</h2><p>RMagic</p><p>&nbsp;</p><p>ImageScience http://seattlerb.rubyforge.org/ImageScience.html</p><p>&nbsp;</p><p>FreeImage - open source image library for osx and linux http://freeimage.sourceforge.net/</p><p>see also attachment_fu</p><p>&quot;ImageScience resizes an image to 600x399 and it&#39;s 143K. RMagick does the same and comes out 51K&quot;</p><p>&nbsp;</p><br /><h2>Controllers</h2><p>google: rails editing multiple models from one controller </p><p>Creating Two Models in One Form http://www.railsforum.com/viewtopic.php?id=717 </p><p>Creating Many Models in One Form http://www.railsforum.com/viewtopic.php?id=1063 </p><p>&nbsp;</p><p>http://weblog.jamisbuck.org/2007/1/11/moving-associated-creations-to-the-model</p><p>&nbsp;</p><h2>AJAX</h2><p>9/9/08: rjs inverted- write js with erb embedded<br />http://www.danwebb.net/2006/11/17/rjs-minus-r  <br /></p><p>spinner attached to mouse http://agilewebdevelopment.com/plugins/busy_ajax </p><p>yahoo grids plugin http://wonderfullyflawed.com/svn/grids_helper/</p><p>http://sonjayatandon.com/07-2006/how-to-get-rails-and-the-yahoo-user-interface-yui-to-talk-part-1/</p><p>&nbsp;</p><p>unobtrusive javascript plugin (alternative to rjs): http://www.ujs4rails.com/</p><p>&nbsp;</p><h4>ext js</h4><p><br />http://www.slideshare.net/martin.rehfeld/rails-gui-development-with-ext-js<br />http://extjs.com/tutorial/using-ext-grid-ruby-rails<br />http://tdg-i.com/ (blog and screencasts)<br />http://www.extjswithrails.com/ (screencast)<br /><br />EXT Toolbawks is a Rails Plugin for the EXTJS library. (supported?)<br />http://ext.toolbawks.com<br /><br />a rails generator, helpers etc<br />http://rug-b.rubyforge.org/svn/ext_scaffold/<br /><br />a rails admin interface<br />http://rails.lipsiasoft.com/wiki/lipsiadmin<br /><br />and switch to jquery<br /><br /><br /> </p><h4>EJS</h4><p>http://embeddedjs.com </p><h4>forms </h4><p>bug with observe_field :on http://joshhuckabee.com/rails-observe-field-function-and<br /> </p><p>http://jonathan.tron.name/articles/2006/07/21/working-on-forms-with-prototype</p><p>&nbsp;</p><h4>ActiveScafflold </h4><p>http://www.activescaffold.com (formerly http://www.ajaxscaffold.com)</p><p>http://blog.caronsoftware.com/articles/2006/09/06/extending-the-ajax-scaffold-plugin</p><p>http://groups.google.com/group/activescaffold/browse_thread/thread/9c157b104c45d84e</p><br /><h4>Back button </h4><p>http://www.streampad.com/blog/?p=110</p><p>http://groups.google.com/group/rubyonrails-spinoffs/browse_thread/thread/96c6dbc1cfd03efc?hl=en</p><p>&nbsp;</p><h3>Aggregations</h3><p>file:///Users/jonathan/rails/reviewramp/doc/api/classes/ActiveRecord/Aggregations/ClassMethods.html#M001344 </p><h3>Presenters</h3><p>skiz:  http://pastie.caboo.se/151666</p><p>&nbsp;</p><h2>DB/Migrations</h2><p>Data Dumper plugin - save and restore tables in yml files<br />http://blog.tammersaleh.com/pages/migration_data_dumper</p><p>&nbsp;</p><p>to avoid having to put validations and associations in the model/ that are already defined in the database itself: http://magicmodels.rubyforge.org/dr_nic_magic_models/</p><p>putting data in migrations: http://revolutiononrails.blogspot.com/2007/02/data-loaders-in-migrations.html </p><h2>Testing</h2><p>in-member database: (plugin)  http://nubyonrails.com/articles/2006/06/01/san-francisco-sqlite3-memory-tests-asteroids</p><p>&nbsp;</p><p>tutorials http://peepcode.com/products/test-first-development</p><p>http://podcast.sdruby.com/2006/11/6/episode-013-mocha-and-stubba</p><p>autotest:</p><p>http://www.zenspider.com/ZSS/Products/ZenTest/</p><p>http://on-ruby.blogspot.com/2006/05/red-and-green-for-ruby.html </p><p>good thread http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/5ab96b494dac02b7/e30b50f4c4174eb9?lnk=gst&amp;q=Testing+Actions+Requiring+A+Login&amp;rnum=1#e30b50f4c4174eb9</p><p>http://weblog.jamisbuck.org/2006/3/9/integration-testing-in-rails-1-1</p><p>&nbsp;</p><p>Fixtures  wishlist: http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/7b31dbee46ba36b9?hl=en </p><p>RSpec, behavioral testing, instead of rails unit tests. (doesnt support integration testing yet). Nicer DSL and assertions</p><p>http://rspec.rubyforge.org/</p><p>dump db to fixtures: ar_fixtures plugin</p><h4>testing js and ui </h4><p>selenium</p><p>Writing and Testing JavaScript-Heavy Web 2.0 Apps with JSUnit http://www.pivotalblabs.com/articles/2007/08/14/agile-2007-presentations<br /></p><p>&nbsp;</p><p>Spider test</p><p>http://blog.caboo.se/articles/2007/2/21/the-fabulous-spider-fuzz-plugin </p><ul><li>parses the html of every page, so if you have invalid html, you will be warned.</li><li>finds every link to within your site and follows it, whether static or dynamic.</li><li>finds every Ajax.Updater link and follows it.</li><li>finds every form and tries to submit it, filling in values where possible.</li></ul><p>&nbsp;</p><h2>Other</h2><h4>themes</h4><p>http://wiki.rubyonrails.org/rails/pages/Theme+Support+Plugin</p><p>http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/3e62797c40d0278e?hl=en </p><h4>email </h4><p>see http://peepcode.com/products/mms2r-pdf</p><p> MMS2R RubyGem to receive and parse email  </p><p>&nbsp;</p><p>ar_mailer: email queue (install as gem)<br />http://blog.segment7.net/articles/2006/08/15/ar_mailer</p><p>http://seattlerb.rubyforge.org/ar_mailer/ </p><p>http://lists.rubyonrails.org/pipermail/rails/2006-January/008814.html</p><p>&nbsp;</p><p>Receive email, add data http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/79f893d93383f8cb/4540d5a38bc5bcfb?lnk=gst&amp;q=email&amp;rnum=2&amp;hl=en#4540d5a38bc5bcfb</p><p>&nbsp;</p><p>templates for emails (plugin): http://cardboardrocket.com/pages/action_mailer_layouts</p><p>&nbsp;</p><p>http://www.railsonwave.com/railsonwave/2007/10/2/howto-trac-the-effects-of-your-email-campaign </p><p>&nbsp;</p><p>http://matt-beedle.com/2007/06/05/acts_as_emailable/</p><p>http://matt-beedle.com/2007/06/02/how-to-model-an-internal-emailing-system-using-self-referential-has_many-through-associations/ </p><p>&nbsp;</p><p>accessing gmail http://pastie.caboo.se/145995 </p>  <h4>menus/tabs</h4><p>tabnav plugin  </p><p>tabbed nav, acts as wizard, etc<br />http://blog.seesaw.it/pages/toolbox</p><p>folder_for plugin http://codefluency.com/2007/6/2/folder_for-a-controller-dsl</p><p>&nbsp;</p><p>JS Tabs http://www.barelyfitz.com/projects/tabber/</p><p>&nbsp;</p><p>lots of examples: http://www.therailsway.com/2007/6/4/free-for-all-tab-helper</p><p>css http://snippets.dzone.com/posts/show/4113</p><p>&nbsp;</p><p>modal dialog boxes</p><p>http://sublog.subimage.com/articles/2006/01/01/subModal</p><p>&nbsp;</p><p>this is cool :) </p><p>http://positionabsolute.net/blog/2007/08/prototype-fisheye.php </p><p>&nbsp;</p><h4>wizards, state machine  </h4><p>acts_as_state_machine  </p><p>http://rails.aizatto.com/2007/05/24/ruby-on-rails-finite-state-machine-plugin-acts_as_state_machine/</p><p>discussion about nice improvements to aasm: </p><p>http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/1bd0275307f748ee?hl=en</p><p>http://www.slideshare.net/dhpeterson/a-simple-workflow-system-using-state-machines</p><p>&nbsp;</p><p>class associations</p><p>http://www.pluginaweek.org/2007/02/05/11-rails-learns-a-slick-new-trick-class-associations/</p><p>http://svn.pluginaweek.org/trunk/plugins/active_record/associations/class_associations/README</p><p>http://wiki.pluginaweek.org/Class_associations</p><p>&nbsp;</p><h4>dynamic stylesheets</h4><p>http://snippets.dzone.com/posts/show/1822 </p><p>http://blog.hasmanythrough.com/2006/03/23/dirt-simple-rcss-templates </p><p>http://www.misuse.org/science/2006/09/26/dynamic-css-in-ruby-on-rails?story=20060926084103529 </p><h4>Video/media</h4><p>http://rmovie.rubyforge.org/</p><p>pdf generate: http://railspdfplugin.rubyforge.org </p><br /><h4>E-Commerce</h4><p>payment gateway: ActiveMerchant http://www.activemerchant.org/</p><p>there&#39;s a paypal gem</p><p>substruct project: http://groups.google.com/group/substruct </p><h4>Friends</h4><p>http://www.advogato.org/article/914.html</p><p>acts_as_friends plugin</p><p>http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/6248fb46fafe57a7?hl=en </p><p>&nbsp;</p><h4>translation/globalization/localization/variable substitution</h4><p>http://agilewebdevelopment.com/plugins/gibberish</p><p>&nbsp;</p><h2>Optimization</h2><p>http://antoniocangiano.com/articles/2007/02/10/top-10-ruby-on-rails-performance-tips </p><h4>Profiling</h4><p><a rel=""nofollow"" href=""http://www.rubygarden.org/ruby?Ruby_Profiler"" target=""_blank"">http://www.rubygarden.org/ruby?Ruby_Profiler</a> <br /> <a rel=""nofollow"" href=""http://ruby-prof.rubyforge.org/"" target=""_blank"">http://ruby-prof.rubyforge.org/</a></p><p>http://cfis.savagexi.com/articles/2007/07/10/how-to-profile-your-rails-application</p><p><strong>rake query_trace</strong></p><p>http://www.pivotalblabs.com/articles/2007/11/17/rake-query_trace </p><p>http://terralien.com/projects/querytrace/ </p><h4>mysql</h4><p>http://blog.evanweaver.com/articles/2007/04/30/top-secret-tuned-mysql-configurations-for-rails</p><h4>caching</h4><p>excellent, with links: http://www.railsenvy.com/2007/2/28/rails-caching-tutorial </p><p>http://www.pivotalblabs.com/articles/2007/11/04/making-rails-wicked-fast-pagecaching-highly-personalized-web-pages</p><p>&nbsp;</p><h2> Writing Plugins</h2><p>http://wiki.rubyonrails.com/rails/pages/HowToWriteAnActsAsFoxPlugin</p><p>http://wiki.rubyonrails.org/rails/pages/HowTosPlugins</p><p>http://www.juixe.com/techknow/index.php/2006/06/18/rails-plugin-tutorial/</p><p>HOWTO: Make A Rails Plugin From Scratch http://www.railsforum.com/viewtopic.php?id=682</p><p>http://www.railsonwave.com/railsonwave/2006/12/31/tutorial-a-simple-act_as-plugin-for-ruby-on-rails </p><p>http://nubyonrails.com/articles/2006/05/04/the-complete-guide-to-rails-plugins-part-i</p><p>http://nubyonrails.com/articles/the-complete-guide-to-rails-plugins-part-ii</p><p>rspec_plugin generator http://agilewebdevelopment.com/plugins/rspec_plugin </p><p>&nbsp;</p><p>&nbsp;</p><br />",linoj,0,42,rails,,RAILS_REFERENCES
93,"Rails and Django - Programming Language (part 3/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1172728800,9,,2,"<h2>Programming Language</h2><p>It could be argued that the most telling difference between Rails and Django is the language they&#39;re implemented in, and the culture that has built up around the languages&#39; communities.</p><h3>Language Community</h3><p>Here are some rough metrics on the popularity and communities of the the Ruby and Python languages (and Php for comparison).</p><p>&nbsp;</p><table border=""1""><tbody><tr><td> <strong>Programming Language</strong><br /> </td><td><strong> Ruby</strong></td><td><strong>Python </strong></td><td><strong>Php </strong></td></tr><tr><td>Year invented <br /></td><td>1993 </td><td>1991 </td><td>1994 </td></tr><tr><td>TIOBE Index (Feb, 2007) </td><td><p>10th (2.5%)</p><p>(up from 20th Feb 2006) </p></td><td>7th (3.6%) </td><td>4th (8.8%) </td></tr><tr><td>User Groups, USA<br /></td><td>94 </td><td>32 </td><td> </td></tr><tr><td><p>Chat room members<br />irc.freenode.net (Feb 15, 2007)<br /></p></td><td>373 (#ruby-lang) </td><td>357 (#python) </td><td>330 (#php) </td></tr><tr><td>Freshmeat projects<br />(www.freshmeat.net)<br /></td><td>327 </td><td>2442 </td><td>3798 </td></tr><tr><td> Frameworks (sampling)</td><td>Rails, Nitro, Merb </td><td>Django, TurboGears, <br />Pylon </td><td> CakePhp, Symfony<br /></td></tr></tbody></table><p><br />The TIOBE Programming Community Index (http://www.tiobe.com/tpci.htm), for what its worth, is a rough indicator of the popularity of major programming languages (the top 3 languages being Java, C and C++ respectively, FYI). </p><p>Both Php and Python have more history and a much wider breadth of usage than Ruby. Python, for example, is known to be used in mission critical projects at NASA, an indication of its quality and reliability. </p><p>The Ruby language, a relative newcomer in the West, was invented in Japan. In the US, most people know of (and use) Ruby in context of the Rails framework. Although many Ruby champions might strongly disagree with this statement. </p><h3>Language Features</h3><p>It is not my intent to directly compare the language structure, syntax and semantics. I will only share some impressions. </p><p>Ruby and Python are really quite similar. For example,<br /></p><ul><li>Both are strong object-oriented languages. That is, everything is an object. </li><li>Both are dynamic languages, lets you write code that writes code.</li><li>Both are dynamically typed (because it doesn&#39;t use explicit data-type declarations) and strongly typed (because once it has a data-type it actually matters)</li><li>Both have a compact syntax.</li><li>Both are quite easy to read, which is important when going through other people&#39;s code (or even your own a few months later). </li><li>Neither requires braces around bodies of code (Ruby uses “end” to indicate the end; although you can use braces if you want. Python relies on leading whitespace indentation). </li><li>Both have an interactive command-line console.</li><li>Both have testing infrastructures</li><li>Both have doc generators (from comments in the source code)</li><li>Both pride themselves on being a generation ahead of languages like C, Php, and Java</li></ul><h3>Ruby</h3><p>Ruby has an especially compact syntax. No wasted words, that&#39;s for sure. It is said that Ruby&#39;s program statements read more like a natural language (or rather, a domain-specific language) than a general programming language. People pride themselves on how small they can reduce a block of code, like solving a puzzle. (And part of the challenge is to make the resulting code even more readable than the more verbose version; you certainly don&#39;t want to make it cryptic). This helps make programming in Ruby “fun”, a word people seem to associate with Ruby and Rails development. Common programming patterns (idioms) have become part of the Ruby culture. <br /><br />Some cool things about Ruby: Don&#39;t need parenthesis on function calls. Dynamic blocks are like functions &#39;on the fly&#39; , which can be used for example, with iterators and lists. (For example, <em>(&#39;a&#39;..&#39;e&#39;).each {|char| print char }</em>  evaluates to “abcde”).<br /><br />RubyGems is the tool for downloading Ruby library packages.</p><h3>Python</h3><blockquote>&quot;Python code seems to be distinctive in having a particular character, and the Python community seems to have a lot less Cowboy Programmers than most other languages. If you hate to conform to standards, you won&#39;t like Python I guess.&quot; (http://mail.python.org/pipermail/europython/2005-April/004995.html)<br /></blockquote><p>Python has a strong following as a general purpose programming language. It is object-oriented, but you can use it procedurally if you want (Django doesn&#39;t). Python has a clearer (or perhaps just more formal) syntax than Ruby. Indentation (leading whitespace) is significant, to group statements.</p><p>Python programmers use the endearing term “Pythonic” to describe code that adheres to the Python philosophy. See http://en.wikipedia.org/wiki/Python_philosophy (it&#39;s also hidden within Python itself, enter: <em>&gt;&gt;&gt; import this</em>  at the Python prompt). </p><p>Python has a large selection of third-party libraries available and is used in a wide range of domains, including the engineering and scientific communities. Python has the setuptools package manager (amon others). There are over 10,000 libraries listed on the setuptools site.<br /> </p><h3>Opinion </h3><p>Ruby is a bit looser in how you express yourself, like its idiomatic expressions and dynamic blocks. In that, Ruby does seem more “fun”. Some people take to Ruby immediately.</p><p>Other people are really bothered by this aspect of Ruby, believing a programming language should be more concise, preferring that when there is one best way to express something, your code will be more clear, less prone to bugs, and more portable between programmers.</p><p>Ruby programmers who have used Python say they were grateful to leave behind little &quot;annoyances&quot;, like parenthesis in function calls, having to declare the “self” argument to methods, and the special use of “__” (double-underscores) (e.g. __init__ for constructors). Python users defend these as non-issues that aid clarity. I suppose when little things like this bother you, it can grow increasingly annoying, until you finally want to kill someone, like in an Edger Allen Poe story (well, maybe that&#39;s an exaggeration). </p><p>You certainly don&#39;t want your language to be tedious. It doesn&#39;t look like either Ruby or Python are that. Far from it. But otherwise how important is this “fun” thing anyway? Seriously. (no pun intended). Ultimately the fun is in building websites that work, reliably. And I have no doubt, whichever language you use, the pain and frustration will still come when things don&#39;t work the way you expect (as I&#39;ve witnessed on both framework&#39;s chat channels).</p><p><em>Conclusion: Both languages seem equally complete and flexible. Python is more mature and explicit. Ruby has that fun-factor. I rate them both a &quot;4&quot; (out of 5), for different reasons.</em> </p><p>&nbsp;</p>",linoj,11683,"43,42","django,rails",,Rails_and_Django_-_Programming_Language_%28part_3%2F15%29
107,"Selling e-downloads","I started to develop my own method for processing ""Buy Now"" of downloads, but soon discovered there's more to it than I thought and sought out an on-line service.",3,1172622966,9,,3,"<p>In preparation for offering a pdf download of my Rails Django Whitepaper for purchase, I figured I&#39;d just put the file in the downloads section of my site and then post a Paypal <em>Buy Now</em> button that redirects to a page with the download link. Not elegant, but quick-and-dirty would be fine for this.</p><h2>Buy Now Paypal </h2><p>I created 3 pages on my site: the <em>buynow</em> page containing the Buy Now button that links to Paypal, a <em>paysuccess</em> page where users are redirected after successfully completing the payment (contains the actual download link), and a <em>paycancel</em> page where users are redirected if they cancel from Paypal. </p><p>Making a Buy Now button is easy enough. Assuming you have a Paypal Merchant account (they&#39;re a free upgrade from the regular Paypal consumer account), just go to the &quot;<a href=""https://www.paypal.com/us/cgi-bin/webscr?cmd=_web-tools"">Buy Now Buttons</a> &quot; page for selling single items at a time. </p><p>Fill in the item name, price, etc. then &quot;Add more options&quot; and give it the URL of your <em>paysuccess</em> and <em>paycancel</em> pages. The resulting button (unencrypted) may look like this:</p><pre>&lt;form action=&quot;https://www.paypal.com/cgi-bin/webscr&quot; method=&quot;post&quot;&gt;<br />	&lt;input name=&quot;cmd&quot; type=&quot;hidden&quot; value=&quot;_xclick&quot;&gt;&lt;/input&gt;<br />	&lt;input name=&quot;business&quot; type=&quot;hidden&quot; value=&quot;my@email.com&quot;&gt;&lt;/input&gt;<br />	&lt;input name=&quot;item_name&quot; type=&quot;hidden&quot; value=&quot;Rails and Django Whitepaper&quot;&gt;&lt;/input&gt;<br />	&lt;input name=&quot;amount&quot; type=&quot;hidden&quot; value=&quot;15.00&quot;&gt;&lt;/input&gt;<br />	&lt;input name=&quot;no_shipping&quot; type=&quot;hidden&quot; value=&quot;1&quot;&gt;&lt;/input&gt;<br />	&lt;input name=&quot;rm&quot; type=&quot;hidden&quot; value=&quot;2&quot;&gt;&lt;/input&gt;<br />	&lt;input name=&quot;return&quot; type=&quot;hidden&quot; value=&quot;http://www.mysite.com/paysuccess&quot;&gt;&lt;/input&gt;<br />	&lt;input name=&quot;cancel_return&quot; type=&quot;hidden&quot; value=&quot;http://www.mysite.com/paycancel&quot;&gt;&lt;/input&gt;<br />	&lt;input name=&quot;no_note&quot; type=&quot;hidden&quot; value=&quot;1&quot;&gt;&lt;/input&gt;<br />	&lt;input name=&quot;currency_code&quot; type=&quot;hidden&quot; value=&quot;USD&quot;&gt;&lt;/input&gt;<br />	&lt;input name=&quot;lc&quot; type=&quot;hidden&quot; value=&quot;US&quot;&gt;&lt;/input&gt;<br />	&lt;input name=&quot;bn&quot; type=&quot;hidden&quot; value=&quot;PP-BuyNowBF&quot;&gt;&lt;/input&gt;<br />	&lt;input alt=&quot;Make payments with PayPal - it&amp;#39;s fast, free and secure!&quot; name=&quot;submit&quot; src=&quot;https://www.paypal.com/en_US/i/btn/x-click-but23.gif&quot; type=&quot;image&quot;&gt;&lt;/input&gt;<br />	&lt;img src=&quot;https://www.paypal.com/en_US/i/scr/pixel.gif&quot; border=&quot;0&quot; alt=&quot;&quot; width=&quot;1&quot; height=&quot;1&quot; /&gt;<br />&lt;/form&gt; </pre><p>Notice that I added another hidden field, &quot;rm&quot; (return method) with value &quot;2&quot;, which requests the transaction details get POSTed to the return URL. This will allow us to validate the transaction and present the download link to the buyer on the <em>paysuccess</em> page.<br /></p><p>We won&#39;t use IPN (Instant Payment Notification), since the download should be immediately available, not asynchronous. Under a different scenario, say, payment generates an email to the buyer containing the download link, then IPN would be fine. </p><p>This all seemed to work fine, both in the Paypal Sandbox (where you setup fake accounts with fake money to test your implementation), and a live site (where you can give yourself refunds for test purchases). Until...</p><p>The one case that fails is if a user does not have a Paypal account, and buys with a credit card. After completing the payment transaction he is not returned to my <em>paysuccess</em> page with the POSTed data. Rather, he is asked if he want to sign up for Paypal, doesn&#39;t get redirected to my paysuccess page and the POST variables seemingly are lost. I dwelled on the <a href=""http://www.pdncommunity.com/pdn/search?submitted=true&amp;type=message&amp;q=download"">Paypal support forums</a>  and discovered I am not alone, it&#39;s not me, it&#39;s how Paypal works (or rather, fails to work, e.g. <a href=""http://www.pdncommunity.com/pdn/board/message?board.id=basicpayments&amp;message.id=632"">here&#39;s a specific comment</a>). According to those posts, even using Paypal&#39;s Payment Data Transfer (PDT) mechanism may still fail.     </p><p>Another thing that was bothering me was, in this simplistic scenario, the download link is always exposed and available if you know about it. Not that I&#39;m so worried about thieves in this case, but having something like a unique download key would be more generally useful.</p><p>Frustrated, I started to look for another solution. <br /></p><h2>PayLoadz.com </h2><p>Looking for a hosted service I first came across <a href=""https://www.payloadz.com/"">PayLoadz</a> , and signed up for a trial account. It was very easy to setup. I had the option of hosting my file(s) on their server or keep them on mine. It does not do any payment processing, you still use Paypal or other services like Google Checkout. </p><p>It supports delivering software registration codes but you&#39;re still responsible for generating and managing those codes. To my knowledge, it does not manage access keys for the download files themselves. </p><p>Then there&#39;s their pricing model -- a prepaid monthly fee based on my estimate of the max total in sales per month (roughly a minimum of 1.5%), on top of the Paypal and credit card fees. That&#39;s a bit presumptuous, especially for my risky little one item Buy Now application. </p><p>Perhaps for a shop with a high inventory of items, the PayLoadz model might work. In which case you&#39;d probably need a Shopping Cart too. That&#39;s not the model I&#39;m looking for.   </p><h2>E-junkie.com</h2><p>Then I discovered <a href=""http://www.e-junkie.com/"">E-junkie</a> . Their service is just $5 per month for 10 items (and it goes up gently from there). For my one item application (and a high risk one at that) that was ok. </p><p>Like PayLoadz, it uses Paypal, Google Checkout, and a couple others, to do the payment processing. </p><p>E-junkie can generate software registration codes, and can provide secure product download immediately after a successful payment. That is, <em>each download gets a unique download link (containing a validation code) taylored to a specific purchase, which you can set to expire after a limited time or number of downloads</em>. And I can set a redirect back to my site so I can log transactions in my database as well. E-junkie does not require I setup PDT on my Paypal account.</p><p>Those features are very nice, exactly what I wanted, and would be a bit of a PITA (pain in the arse) to do for a one-off situation. </p><p>The E-junkie site is simple, fast, and has a wide range of <a href=""http://www.e-junkie.com/ej/features.php"">features</a>. Good job, guys! </p><p>&nbsp;</p><p>&nbsp;</p>",linoj,10555,41,webdev,,Selling_e-downloads
92,"Rails and Django - Project and Community (part 2/15)","A technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects. (Start here: <a href=""rails-django"">Whitepaper index</a>)",3,1172576895,9,,2,"<h2>Project and Community</h2><h3>Status and History</h3><p>Both <a href=""http://www.rubyonrails.com"">Rails</a>  and <a href=""http://www.basecamphq.com/"">Django</a>  projects are relatively new, open-source projects. Both emerged from real world websites, proven to handle very large volumes of hits, and encourage agile development (quick, incremental updates) of your web projects. </p><p>Rails was developed by <a href=""http://www.37signals.com/"">37Signals Inc.</a>  (Chicago, Illinois) for a collaborative project management application called Basecamp. Rails was released as open source in July, 2004, released version 1.0 in December, 2005. The current version is 1.2.1, recently released in January, 2007.</p><p>Django was developed by <a href=""http://www.ljworld.com/"">Lawrence Journal-World</a> ,  a small town newspaper in Lawrence, Kansas, for their innovative family of  websites. Django actually began development a bit earlier than Rails (2003), but wasn&#39;t released as open source until July 2005, and hasn&#39;t reached Release 1.0 yet. Normally a 1.0 means the API&#39;s (core methods) are stable, and features are finalized and frozen. (To track this, see http://code.djangoproject.com/wiki/VersionOneFeatures, and http://www.djangoproject.com/documentation/api_stability/ ). <br /> </p><p>In mid-2006, Django went through a major refactoring-- that is, an overhaul of its internal coding to clean it up old stuff, make things more consistent, efficient, et cetera. Rails, I have heard, has not yet been refactored, except for one or two components.</p><p>Both projects sport a respectable list of commercial, high volume sites using their technologies.</p><h3>Project Community</h3><p>The Rails community is decidedly the larger of the two. There are lots of ways to show statistics on this. Google Trends graphs compare the frequency of Google search terms:<br /> “<a href=""http://www.google.com/trends?q=ruby+rails%2C+django+python&amp;ctab=0&amp;geo=all&amp;date=all"">ruby rails, django python</a>”</p><p>&nbsp;</p><p>&nbsp;</p><div style=""text-align: center""><img src=""var/uploads/Image/rails-django-googletrends.gif"" alt=""Google Trends: Rails vs Django"" width=""246"" height=""122"" /></div><p><br /><br />Chat room (irc) activity is another way to see project activity (spot check on 2/15/07): #rubyonrails: 486 members; #django: 219 members. Similarly, Google groups membership: <a href=""http://groups.google.com/group/rubyonrails-talk"">rubyonrails-talk</a> : 7485 members; <a href=""http://groups.google.com/group/django-users"">django-users</a>  : 4180 members.</p><p>Clearly Rails is the big guy and enjoys “first-mover advantage”. Some say they&#39;re just really good at marketing. Good early documentation and online screencast demos helped tremendously. There are several books on developing with Rails (including version 2 of the <a href=""http://www.pragmaticprogrammer.com/titles/rails/"">“Agile Web Development with Rails”</a>  book). The annual <a href=""http://conferences.oreillynet.com/rails/"">RailConf</a>  conferences are fairly well attended (hundreds, not thousands, of attendees).</p><p>Django too has a strong active community. Emerging from the Python world, it&#39;s already started to create some good buzz. They too have some screencasts, and <a href=""http://www.djangobook.com/"">The Django Book</a>  is in beta draft form. Django folks gather at the annual PyCon conference, where in 2007 Django is one of the tracks.<br /></p><p>Both Rails and Django use <a href=""http://trac.edgewall.org/"">Trac</a>  for feature and bug reports, a wiki-based issue <span class=""searchword0"">trac</span>king system for software development projects. Both use <a href=""http://subversion.tigris.org/"">subversion</a>  for source code repository. The community participates by making feature requests, reporting bugs, writing documentation and tutorials, and providing useful re-usable code. That&#39;s the beauty of open-source software projects.</p><h3>Opinion</h3><p>Considerable value must be given to the size and momentum of Rails and its community. They have very smart and passionate people contributing code, plug-ins, tutorials, and support. (Django does too, only Rails has more of them!) .</p><p>But a word of caution. With popularity also comes more &quot;newbies&quot; - new users, many being inexperienced not just with the language and framework, but perhaps any kind of modern programming. In some ways this is great. But it can potentially be a drag on the quality and responsiveness of the project. If/when the Django community grows, it will face the same problems but right now its following seems to be mostly experienced programmers. </p><p>I have hung out and asked questions in both projects&#39; irc channels (chat rooms). The people in both are friendly, helpful, and available.</p><p>Django is clearly behind, having had a later start, is not yet at Release 1.0, its book in Beta. If you&#39;re not comfortable building on a pre-1.0 product, then your decision is easy. Otherwise, don&#39;t worry, as it is not unusual for the idea of “no wine before its time” be used in OSS (open source software) projects. The fact remains there are plenty of production sites using Django in its current condition.</p><p><em>Conclusion: Both projects are active and vital. Rails is bigger and stronger.</em></p><p>&nbsp;</p> <table border=""1"" width=""425"" height=""381""> <tbody><tr><td><strong>Project / Community<br /></strong> </td><td><strong>Rails </strong></td><td><strong>Django </strong></td></tr><tr><td>When open sourced </td><td>July 2004 </td><td>July 2005 </td></tr><tr><td>When 1.0 released </td><td>Dec. 2005 </td><td>TBD </td></tr><tr><td>Current release (as of Feb 15, 2007)<br /> </td><td>1.2.1 </td><td>0.95.1 </td></tr><tr><td>Repository </td><td>subversion </td><td>subversion </td></tr><tr><td>Issue tracking </td><td>trac </td><td>trac </td></tr><tr><td>Website, wiki, blogs<br /> </td><td>very good </td><td>very good </td></tr><tr><td>irc channel members (Feb 15, 2006 3pm EST) </td><td>486 </td><td>219 </td></tr><tr><td> Google Groups membership<br /></td><td><p> 7485</p><p>(<a href=""http://groups.google.com/group/rubyonrails-talk"">rubyonrails-talk</a>) <br /></p></td><td><p> 4180</p><p>(<a href=""http://groups.google.com/group/django-users"">django-users</a>) <br /></p></td></tr><tr><td><strong>MY RATING (1=worst, 5=best) </strong></td><td><strong>4 </strong></td><td><strong>3 </strong></td></tr></tbody></table> <p align=""center"">&nbsp;</p><p>&nbsp;</p>",linoj,13988,"43,42","django,rails",,Rails_and_Django_-_Project_and_Community_%28part_2%2F15%29
91,"Evaluating Web Development Frameworks: Rails and Django (part 1/15)","<p>This white paper, presented here as a series of blog articles, is a technical manager's guide to evaluating web development frameworks, with a detailed review of Ruby on Rails and the Django (Python) projects.</p>
<p>
In this study we establish a list of evaluation criteria and then discuss and rate how well each framework addresses each criteria.</p>
<p>
As your priorities and assessment may differ from ours, this report can be used as a road map for your own evaluation.</p>
<p>
If you have already decided to use a specific framework or recently joined a team, this report may serve as a high level introduction, providing valuable context for your learning curve. </p>
<p>Start here: <a href=""rails-django"">Whitepaper index</a></p>",3,1172361600,9,,3,"<h2>Introduction</h2><p>Anyone developing a dynamic web site these days should at least consider (if not require) a <em>web development framework</em> which provides a layer of abstraction and provides shortcuts for frequent programming tasks. A generally accepted architecture paradigm for web frameworks is the <a href=""http://en.wikipedia.org/wiki/Model-view-controller"">model-view-controller</a>  (MVC) which separates the content data structure (model) from the presentation of this content (view), and the handling of user requests for this content (controller).</p><p>There are many good MVC frameworks available for web development, written in various programming languages, with subtle (and not so subtle) technical and conceptual differences. The one creating the most buzz and attention is <a href=""http://www.rubyonrails.org/"">Rails</a>  (written in the Ruby language). Another project gaining momentum is <a href=""http://www.djangoproject.com/"">Django</a>  (written in Python). Both of these are true MVC architectures.</p><p>Another approach to web development is to use a higher level, more complete <em>web application</em>, such as content management systems (CMS), which have a great deal of functionality already built in. The <a href=""http://www.xaraya.com"">Xaraya</a>  project, for example, adheres to the MVC paradigm, has hook-able CMS level modules, and allows easy custom layouts and templates. And with its advanced data modeling (DynamicData) Xaraya also reaches into the framework arena. Having used Xaraya successfully for more than two years, I recommend it as part of anyone&#39;s website development arsenal.</p><p>However, we at <a href=""http://www.parkerhill.com"">Parkerhill Technology Group</a>  increasingly find the need for a lower level, lighter, framework for a number of projects. We have narrowed our alternatives to Rails and Django. This report presents my analysis. I have tried to accurately and objectively describe details of each project (especially those that matter most to us), and then give my analysis and opinion separately.  </p><h2>Evaluation Criteria </h2><p>There are many factors to consider when evaluating a web development framework for your application development project.  </p><p>Our perspective is that of a web developer, project manager, and entrepreneur, with specific needs that may vary from one project to the next. Our criteria and priorities certainly may not align with yours. Furthermore keep in mind this is a moving target, both Rails and Django frameworks are young, improving continuously, and gaining non-core contributions from their respective communities.</p><p><em>Disclaimer:</em> While I come at this with a significant level of experience, this report is the result of my review without the benefit of having built a real project with either framework.  </p><p>The following chart outlines my criteria which will be rated on a scale of 1 to 5 (1=worst, 5=best). The final results will be presented in the last section.</p><p>&nbsp;</p><table border=""1""><tbody><tr><td><strong>Evaluation Criteria </strong></td><td><strong>   Rails   </strong> </td><td><strong>   Django     </strong></td></tr><tr><td><strong>TECHNICAL </strong></td><td> </td><td> </td></tr><tr><td>Programming Language  </td><td> </td><td> </td></tr><tr><td>Framework Concept </td><td> </td><td> </td></tr><tr><td>Directory Structure </td><td> </td><td> </td></tr><tr><td>Database / Model </td><td> </td><td> </td></tr><tr><td>URL Routing </td><td> </td><td> </td></tr><tr><td>Controller / Views </td><td> </td><td> </td></tr><tr><td>Templates </td><td> </td><td> </td></tr><tr><td>Forms </td><td> </td><td> </td></tr><tr><td>Data Administration  </td><td> </td><td> </td></tr><tr><td>User Administration (authentication, sessions)   </td><td> </td><td> </td></tr><tr><td>AJAX </td><td> </td><td> </td></tr><tr><td>RESTful </td><td> </td><td> </td></tr><tr><td>RSS/Atom/XML </td><td> </td><td> </td></tr><tr><td>Internationalization / Translation  </td><td> </td><td> </td></tr><tr><td>Caching </td><td> </td><td> </td></tr><tr><td>Security </td><td> </td><td> </td></tr><tr><td align=""right""> TECHNICAL SCORE <br /> </td><td> </td><td> </td></tr><tr><td> </td><td> </td><td> </td></tr><tr><td><strong>SUPPORT </strong></td><td> </td><td> </td></tr><tr><td>Project / Community </td><td> </td><td> </td></tr><tr><td>Documentation<br /></td><td> </td><td> </td></tr><tr><td>User Extensions </td><td> </td><td> </td></tr><tr><td>Development / Debugging </td><td> </td><td> </td></tr><tr><td>Test Tools<br /></td><td> </td><td> </td></tr><tr><td>Deployment Support<br /></td><td> </td><td> </td></tr><tr><td align=""right""> SUPPORT SCORE <br /></td><td> </td><td> </td></tr><tr><td> </td><td> </td><td> </td></tr><tr><td align=""right""> OVERALL SCORE  </td><td> </td><td> </td></tr></tbody></table><h2>Let the <em>Flames</em> Begin!<br /></h2><p>So let&#39;s get the emotions out of the way first. There&#39;s no avoiding it, some people are very passionate about their favorite technologies. I&#39;ve read many blog postings comparing Rails and Django (plus the dozens of comments they generate). Some people are firmly positioned in one camp or the other. Some people say &quot;Hey, they&#39;re more similar than different so just choose what you prefer&quot;. And others have done some sort of honest comparative analysis. If you&#39;re interested, do a Google search on “rails django”. Here are a few good ones: <br /></p><ul><li>Video of debate between Adrian Holovaty, creator of Django, and David Heinemeier Hanson, creator of Rails:  http://www.djangoproject.com/snakesandrubies/ (Dec 3, 2005)</li><li>A simple quantitative comparison by implementing a small project in both frameworks http://docs.google.com/View?docid=dcn8282p_1hg4sr9</li><li>A detailed analysis, a bit out of date: http://magpiebrain.com/blog/2005/08/14/a-comparison-of-django-with-rails/ (August, 2005)</li><li>And here&#39;s one comparing performance: http://wiki.rubyonrails.com/rails/pages/Framework+Performance </li><li>Someone&#39;s personal experience, for what it&#39;s worth: http://blog.carlmercier.com/2007/01/30/why-i-moved-from-ruby-on-rails-to-pythondjango-and-back/</li><li>This is funny, kind of sums it up for some people: http://www.djangoproject.com/weblog/2006/dec/06/comparisons/ <br /></li></ul><p>&nbsp;</p><p>&nbsp;</p>",linoj,20541,"43,42","django,rails",,Evaluating_Web_Development_Frameworks%3A_Rails_and_Django_%28part_1%2F15%29
101,"How to do Anonymous Comments","With just a couple clicks you can enable anonymous comments on your articles. But it says ""Posted by: Anonymous"". What if you want people to add their name? [Updated with more thoughts about psyching out spambots]",3,1172001546,9,,3,"<h3>Enable Comments </h3><p>To enable comments on a publication type, such as a blog posting, first hook the Comments module into the Articles module, for the specific pubtype(s) you want. (Admin &gt; Global &gt; Modules &gt; Configure Hooks &gt; Comments &gt; Articles &gt; and Enable the pubtypes)<br /> </p><p>Next,  configure Comments to allow anonymous posts. (Admin &gt; Content &gt; Comments &gt; Modify Configuration &gt; &quot;  Allow anonymous posting&quot;)</p><p>In my case, I&#39;ve also selected &quot;Flat&quot; rendering.</p><h3>Add Fields </h3><p>We want to capture the user&#39;s name. We&#39;ll do this using Dynamic Data. Hook the DynamicData module into Comments (Admin &gt; Global &gt; Modules &gt; Configure Hooks &gt; Dynamic Data &gt; Comments &gt; Enable). And add the fields we want: (Admin &gt; Content &gt; Comments &gt; Modify Configuration &gt; Dynamic Data Field Modify, and then:</p><p>    Label: Name, Type: textbox</p><h3>Add Privileges</h3><p>We have to grant permission for anonymous users to submit comments. Go to Add Privilege (Admin &gt; Users &gt; Privileges &gt; Add Privilege) and submit the following:</p><blockquote><p>Name: commentsSubmit<br />Module: comments<br /> Level: comment</p></blockquote><p>Then assign this privilege to the Everyone Roles group (Admin &gt; Users &gt; Roles, select Everyone group, click View Privileges icon, and assign commentsSubmit. </p> <h3>Modify Templates  </h3><p>To access the DynamicData we use xar:data tags in the templates. In forms, to show the input field for Name:</p><pre>&lt;xar:data-getitem name=&quot;$properties&quot; module=&quot;comments&quot; itemtype=&quot;0&quot; itemid=&quot;0&quot; /&gt;<br />&lt;xar:data-input property=&quot;$properties[&#39;name&#39;]&quot; /&gt;</pre><p>Copy the file modules/comments/xartemplates/includes/input-box.xd to themes/yourtheme/modules/comments/incudes/input-box.xt, and replace instances of #$package[&#39;name&#39;]# with the xar:data lines shown above. </p><p>Similarly, for display, copy the file modules/comments/xartemplates/includes/view-flat.xd to view-flat.xt in your theme. Editing is a bit more complicated because BlockLayout doesn&#39;t handle objects very well, so we use temporary variables and &amp;gt; when it complains.</p><pre>&lt;xar:set name=&quot;ii&quot;&gt;$loop-&gt;item&lt;/xar:set&gt;</pre><pre>&lt;xar:data-getitem name=&quot;$properties&quot; module=&quot;comments&quot; itemtype=&quot;0&quot; itemid=&quot;$ii[&#39;xar_cid&#39;]&quot; /&gt;</pre><pre>&lt;xar:set name=&quot;p&quot;&gt;$properties[&#39;name&#39;]&lt;/xar:set&gt;</pre><pre>&lt;xar:if condition=&quot;!empty($p-&amp;gt;value)&quot;&gt;</pre><pre>	#$p-&gt;value#</pre><pre>&lt;xar:else /&gt;</pre><pre>	#$loop:item[&#39;xar_author&#39;]# </pre><pre>&lt;/xar:if&gt;</pre><p>Replace all instances of #$loop:item[&#39;xar_author&#39;]# with the above code.</p><p>One more thing, extending this to handle the Preview form is more complicated. I just decided to comment out the Preview button (&lt;input type=&quot;submit&quot; ... &gt; at bottom of the form). </p><p>That&#39;s it. This can easily be extended to also get a visitor&#39;s email address and website, etc. </p><h3>Handle Spam Bots<br /></h3><p>A common way to handle robotic spammers is using a <a href=""http://en.wikipedia.org/wiki/Captcha"">Captcha</a>  -- those distorted images that require you type the same text. Another less intrusive way is a service like <a href=""http://akismet.com/"">Akismet</a>. Both would be nice things to add to Xaraya, but for now I&#39;ll take a deadly simple route:</p><p>Add this little js function to the top of the input-box.xt template:</p><pre>&lt;script type=&quot;text/javascript&quot;&gt;<br />  function checkNotspamBox(f) {<br />    if (f.notspam.checked == false) {<br />      alert(&#39;Hi. Unless you\&#39;re a spam bot, please let us know you are not&#39;);<br />      return false;<br />    } else<br />      return true;<br />  }<br />&lt;/script&gt;<br /></pre><p>In the &lt;form&gt; tag, replace the onSubmit attribute with</p><pre>onSubmit=&quot;return checkNotspamBox(this) &amp;&amp; submitonce(this);&quot; </pre><p>And then in the form add the checkbox:</p><pre>&lt;input type=&quot;checkbox&quot; value=&quot;0&quot; name=&quot;notspam&quot; id=&quot;notspam&quot; /&gt;: This is not spam</pre><h4>More about Spambots</h4><p>This from a recent IRC conversation. Spambots read your form an fill out any fields that look &quot;important&quot;. And they go after common field names. So if its smart enough, or lucky 50% of the time it&#39;ll check the &quot;notspam&quot; checkbox, and they&#39;re in. Here&#39;s a better suggestion:</p><p>Provide a text field with a name that sounds important, like &quot;website_url&quot; or &quot;email_address&quot;, then use CSS to hide the field so it&#39;s not visible to a normal browser. The bot will try to fill it in. Your app can check that, if the field has content, then ignore the spambot&#39;s post.  </p><p>Someone else added that for browsers without CSS (eg accessiblity) include (hidden) text that says &quot;Don&#39;t enter anything into this field&quot;. </p><p>&nbsp;</p><p>&nbsp;</p>",linoj,7630,37,xaraya,"comments,spambots",How_to_do_Anonymous_Comments
89,"Installing Django on my iMac","Using python, django, and mysql5.",3,1171122965,9,,2,"<p> Installing Django and Python was easier than Rails, but mostly because I already did the hard work with the <a href=""postings/85"">Ruby/Rails install</a> a few weeks ago. That included MacPorts, Apache2, MySQL5, and more. </p> <h2>Install </h2> <p> For my starting point, I used the Django online documentation, http://www.djangoproject.com/documentation/install/ </p> <p> But really I decided to use the MacPorts tool as much as I can. </p> <p> The first step is to see if Python is on the Mac and what version </p> <pre>$ python<br />Python 2.3.5 (#1, Dec 25 2005, 07:24:19) <br />[GCC 4.0.1 (Apple Computer, Inc. build 5250)] on darwin </pre> <p> Seems good enough. </p> <p> Next, Django itself. When i look in ports (sudo port list *django*) it says  </p> <p> py-django-devel                @0.95           python/py-django-devel </p> <p> But Django is at 0.95.1, so I assume ports is out of date, so I&#39;ll installing it manually (which is probably better since I may eventually go with the edge version in the Subversion repository). </p> <p> So, I link to http://www.djangoproject.com/download/ and download the Django-0.95.1.tar.gz file. Then,<br /></p><pre>$ tar -xvzf Django-0.95.1.tar.gz</pre><pre>$ cd Django-0.95.1</pre><pre>$ sudo python setup.py install</pre> <p> It requires setuptools, and downloads it for me. </p> <p> The next step is installing mod_python for Apache.</p> <pre> $ sudo port install mod_python </pre> <p> Oops, that&#39;s going ahead and installing a newer Python 2.4.3. No worries, probably a good idea. </p> <p> When its done, I&#39;m told to add the following line to my Apache2 httpd.conf (located on my system at /opt/local/apache2/conf/httpd.conf)  </p> <pre> LoadModule python_module modules/mod_python.so </pre> <p> Actually, for the Django tutorials I&#39;m going to use the built-in simple http server, so I won&#39;t get around to testing this mod_python is installed and working just yet.  </p> <p> Database. The docs recommend Postgres SQL, but I have mySQL and I&#39;ll use that. Install the python mysql drivers. </p> <pre> $ sudo port install py-mysql</pre><p> This installs 1.2.1_p2 </p> <p> So far so good. OK, lets fire up python and install Django. Assuming we&#39;re still in the Django directory,<br /> </p> <pre> $ python<br /> &gt;&gt;&gt; import django<br /> &gt;&gt;&gt; django.VERSION<br /> (0, 95.099999999999994, None) </pre> <p> A bit of a rounding error!? I assume this is python, not django&#39;s doing. Somehow I&#39;m starting to get the feeling this framework is a bit geeky :) </p> <p> One of the things this import does is create the django-admin.py file we need in our page, so I edit my ~/.profile and add </p> <pre> export PATH=/opt/local/Library/Frameworks/Python.framework/Versions/Current/bin:$PATH </pre> <h2>Test It<br /> </h2> <p> Let&#39;s start with the Tutorial from documentation (http://www.djangoproject.com/documentation/tutorial1/) Abbreviated version:<br /> <br /> I&#39;m putting my project into ~/django/ so cd there to start. We&#39;ll call this &quot;tut&quot; (for tutorial)<br /></p><pre>$ django-admin.py startproject tut</pre><pre>$ cd tut</pre><pre>$ python manage.py runserver</pre><p> <br /> - browse to http://127.0.0.1:8000/<br /> <br /> - create a database to use (e.g using mysqladmin or, in my case, CocoaMySQL). Name it &quot;tut&quot;.<br /> <br /> - edit settings.py as needed to setup the database etc.<br /> <br /> Create default tables defined in settings<br /></p><pre>$ python manage.py syncdb</pre><p> <br /> That should verify our db connection etc. I check the db tables in cocoamysql.<br /> <br /> </p> <h2>Create App<br /> </h2> <pre>$ python manage.py startapp polls<br /></pre><p> edit polls/models.py<br /></p><pre>class Poll(models.Model):</pre><pre>	question = models.CharField(maxlength=200)</pre><pre>	pub_date = models.DateTimeField(&#39;date published&#39;)</pre><pre> </pre><pre>class Choice(models.Model):</pre><pre>	poll = models.ForeignKey(Poll)</pre><pre>	choice = models.CharField(maxlength=200)</pre><pre>	votes = models.IntegerField()<br /></pre><p> edit polls/settings/ph, add to INSTALLED_APPS<br /></p><pre>&#39;tut.polls&#39;,<br /></pre><p> manage.py is a powerful tool. Let&#39;s sShow generated SQL: </p> <pre> $ python manage.py sql polls</pre><p> Check errors in model<br /></p><pre> $ python manage.py validate polls</pre><p> Show initial data required<br /></p><pre> $ python manage.py sqlinitialdata polls</pre><p> Show drop tables<br /></p><pre> $ python manage.py sqlclear polls</pre><p> Show create index<br /></p><pre> $ python manage.py sqlindexes polls</pre><p> Show combined sql<br /></p><pre> $ python manage.py sqlall polls<br /></pre><p> Create the tables<br /></p><pre> $ python manage.py syncdb<br /></pre><p> Play with api<br /></p><pre> $ python manage.py shell</pre><pre> &gt;&gt;&gt; from tut.polls.models import Poll, Choice</pre><pre> &gt;&gt;&gt; Poll.objects.all()</pre><pre> &gt;&gt;&gt; from datetime import datetime</pre><pre> &gt;&gt;&gt; p = Poll(question=&quot;What&#39;s up?&quot;, pub_date=datetime.now())</pre><pre> &gt;&gt;&gt; p.save()</pre><pre> &gt;&gt;&gt; p.id</pre><pre> &gt;&gt;&gt; p.question </pre><pre> &gt;&gt;&gt; p.pub_date</pre><pre> &gt;&gt;&gt; p.pub_date=datetime(2005,4,1,0,0)</pre><pre> &gt;&gt;&gt; p.save()</pre><pre> &gt;&gt;&gt; Poll.objects.all()</pre><pre> [&lt;Poll: Poll object&gt;]<br /></pre><p> - edit models.py, add under class Poll<br /></p><pre> def __str__(self):</pre><pre> 	return self.question</pre><p> - add under class Choice<br /></p><pre> def __str__(self):</pre><pre>	return self.choice<br /></pre><p> - restart console, or <br /></p><pre> &gt;&gt;&gt; reload(moduleName)</pre><pre> &gt;&gt;&gt; Poll.objects.all()</pre><p>&nbsp;</p> <h2>Admin Stuff<br /> </h2> <p> - edit settings.py, add to INSTALLED_APPS<br /></p><pre>&#39;django.contrib.admin&#39;,</pre><pre>$ python manage.py syncdb</pre><p> - edit urls.py, uncomment the admin pattern<br /> - restart console<br /> - browse to http://127.0.0.1:8000/admin/<br /> login admin pwd<br /> - change Poll class, and Choice class per tutorial http://www.djangoproject.com/documentation/tutorial2/<br /> - edit settings.py<br /></p><pre> TEMPLATE_DIRS = (</pre><pre> 	&quot;/User/jonathan/django/tut/mytemplates&quot;,</pre><pre> )</pre><p> - copy base_site.html <br /> from /usr/local/Django-0.95.1/admin/<br /> to /User/jonathan/django/tut/mytemplates/admin/<br /> <br /> Generate code for custom admin/index.html<br /></p><pre> $ python manage.py adminindex polls</pre> <p> You can continue on your own from here, http://www.djangoproject.com/documentation/tutorial3/ </p> <p> Enjoy!  </p> <p>&nbsp;</p> <h2>Bonus: iPython</h2> <pre>$ sudo port install py-ipython  </pre> <p> This from #django: </p> <p> [03:14a] cilkay​​: ​linoj: As I tell everyone who is new to Django and Python, install ipython &lt;http://ipython.scipy.org/&gt;. That will help you get up to speed quickly.<br /> [03:15a] cilkay: python manage.py shell <br /> [03:16a]: ​... and you&#39;ll be able to interactively prototype your Django app.<br /> cilkay​​: ​linoj: say I&#39;m fetching objects from the Category model like so: theCategory = Category.objects.get(slug=category_slug)<br /> cilkay​​: ​In ipython, if I type theCategory. and hit tab, it will give me all the attributes and functions for theCategory<br /> [03:18a] ​linoj​​: ​cool<br /> [03:18a] ​cilkay​​: ​That&#39;s much more powerful than the standard Python shell.lin<br /> [03:20a]  linoj :​i was wondering about debugging in general, can you set breakpoints and examine variables etc in django apps?<br /> [03:22a] ​cilkay​​: ​linoj: yes, but I rarely have to do that because I often prototype in ipython.<br /> [03:22a] cilkay: pdb (Python debugger) is what you&#39;d use if you wanted to debug.<br /> [03:23a] cilkay: Besides, Python&#39;s stack traces when you have an exception are usually quite good, unlike PHP which just says &quot;You have an error somewhere near here, I think.&quot;<br /> </p> <p>&nbsp;</p> ",linoj,4672,"43,38","django,xamp","django,install",Installing_Django_on_my_iMac
88,"How to query if a user is a member of a group?","Here's a little function I wrote to do it.",3,1170825942,9,,2,"<p> Drop this into modules/xarpages/xarcustomapi/ismember.php </p> <pre>&lt;?php</pre> <pre><br /> /* ismember</pre><pre>* belongs in roles module</pre><pre>* returns true if user is a member of a group</pre><pre>* args:</pre><pre>* &#39;uid&#39;        - default: current user OR</pre><pre>* &#39;uname&#39;      - uname of user, alternative to uid</pre><pre>* &#39;gid&#39;        - uid of the group OR</pre><pre>* &#39;group&#39;      - name of group, alternative to gid</pre><pre>*/</pre> <pre><br /> function xarpages_customapi_ismember( $args )</pre><pre>{</pre><pre>	extract($args);</pre> <pre><br /> 	$roles = new xarRoles();</pre> <pre><br /> 	// get group object</pre><pre>	if (empty($gid) &amp;&amp; empty($group)) return;</pre><pre>	if (empty($gid)) {</pre><pre>		$groupobj = $roles-&gt;findRole($group);</pre><pre>	}</pre><pre>	else {</pre><pre>		$groupobj = $roles-&gt;getRole($gid);</pre><pre>	}</pre> <pre><br /> 	// user</pre><pre>	if (empty($uid) &amp;&amp; empty($uname)) {</pre><pre>		$uid = xarUserGetVar(&#39;uid&#39;);</pre><pre>	}</pre><pre>	// get user object</pre><pre>	if (empty($uid)) {</pre><pre>		$userobj = $roles-&gt;ufindRole($uname);</pre><pre>	}</pre><pre>	else {</pre><pre>		$userobj = $roles-&gt;getRole($uid);</pre><pre>	}</pre> <pre><br /> 	// test it</pre><pre>	return $userobj-&gt;isAncestor($groupobj);</pre><pre>}</pre> <pre><br />?&gt; </pre><pre> </pre> ",linoj,3178,37,xaraya,roles,How_to_query_if_a_user_is_a_member_of_a_group%3F
87,"Another Neat Example of Pageforms","I had a need for a form and function solution, and pageforms provided a quick and easy way",3,1170796585,9,,2,"<p> Rather than describe my application directly, I give a generic (hopefully not lame) example. </p> <p> Suppose you need to perform an operation on your site with specific inputs, and show specific results, and you can implement the operation as a php function. </p> <p> A. Let&#39;s put the api function in modules/xarpages/xarcustomapi/myfunc.php (although it could go in your own module). The api accepts a set of args, and returns a hash array with results.  </p> <pre>/* myfunc<br /> * args &#39;a&#39;=&gt;$a, &#39;b&#39;=&gt;$b, &#39;c&#39;=&gt;$c<br /> * returns array: &#39;x&#39;=&gt;$x, &#39;y&#39;=&gt;$y <br /> */<br /> </pre> <pre>function xarpages_customapi_myfunc( $args )<br /> {<br /> 	extract($args); </pre> <pre>	... do your thing... </pre> <pre>	return array( &#39;x&#39; =&gt; $x, &#39;y&#39; =&gt; $y );<br /> } </pre> <p> B. Create 2 DD objects, say &#39;objf&#39; and &#39;objr&#39; (for the form and results fields respectively). Define the dynamic properties of objf as &#39;a&#39;, &#39;b&#39;, and &#39;c&#39;. Similarly define the properties for objr object as &#39;x&#39; and &#39;y&#39;. Set the field types and validations as needed. </p> <p> C. Create a pageform tree like this </p> <p> &#39;page&#39;    type:html<br /> |-- &#39;pagef&#39;    type:pageform<br /> |-- &#39;pagea&#39;    type:pageaction<br /> |-- &#39;pager&#39;    type&quot;pageform </p> <p> the &#39;page&#39; page can be status:empty </p> <p> the &#39;pagef&#39; page has data item:objf. Perhaps set required:a,b,c as needed<br /> </p> <p> the &#39;pagea&#39; page has processing php: </p> <pre>$outvalues = xarModApiFunc(&#39;xarpages&#39;, &#39;custom&#39;, &#39;myfunc&#39;, $values );  </pre> <p> the &#39;pager&#39; page, has data item:objr, and give it template &#39;displayonly&#39; </p> <p> If you don&#39;t have a displayonly template, create one by copying xarmpages/xartemplates/pageform.xd to pageform-displayonly.xd. Remove the &lt;form&gt; tag and all inside it, and replace it with this: </p> <pre>&lt;xar:if condition=&quot;!empty($current_page.dd.formlayout)&quot;&gt;<br /> 	&lt;xar:data-display object=&quot;$pageform[&#39;object&#39;]&quot; layout=&quot;$current_page[&#39;dd&#39;][&#39;formlayout&#39;]&quot; /&gt;<br /> &lt;xar:else /&gt;<br /> 	&lt;xar:data-display object=&quot;$pageform[&#39;object&#39;]&quot; /&gt;<br /> &lt;/xar:if&gt;<br /> </pre> <p> That&#39;s it! Now you have an input form to the function, and display the results. </p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> ",linoj,3395,37,xaraya,pageform,Another_Neat_Example_of_Pageforms
86,"What is Web 2.0?","Cool little video tries to explain it all (with no spoken words).",3,1170734575,9,,2,"<p align=""center"">
&nbsp;
</p>
<div align=""center"">
</div>
<p align=""center"">
<object height=""350"" width=""425"">
	<param name=""movie"" value=""http://www.youtube.com/v/6gmP4nk0EOE"">
	</param>
	<param name=""wmode"" value=""transparent"">
	</param>
	<embed src=""http://www.youtube.com/v/6gmP4nk0EOE"" width=""425"" height=""350"" type=""application/x-shockwave-flash""></embed>
</object>
</p>
<div align=""center"">
</div>
<p align=""center"">
&nbsp;
</p>
",linoj,3154,39,musings,,What_is_Web_2.0%3F
85,"Installing Rails on my iMac","Yet another log of one man's blind trek through unfamiliar territory: MacPorts, Apache 2, Ruby, Rails, MySQL5, and even PhP5. Includes a little demo to test the install.
",3,1170263223,9,,2,"<h2>Locomotive? </h2> <p> The first time through I used the no-brainer <a href=""http://locomotive.raaum.org/"">Locomotive</a>  package. I dont mean to say its not great, it really is so simple. Just download and install it. Everything is self contained - including the http server. It got me going enough to run a few tutorials. </p> <p> Then, as recommended in the Agile book, I decided I should do a more manual install of the separate components. That way I can update individual things as needed, including gems (ruby components). </p> <p> (Note the Agile book claims Locomotive uses SQLite, but i already had mySQL5 installed and it seemed to find it just fine as long as you edit the config/database.yml as needed). </p> <h2>Goin&#39; For It </h2> <p> It all starts here with James Duncan Davidson&#39;s article,  http://blog.duncandavidson.com/2006/04/sandboxing_rail.html </p> <p> It&#39;s important to note that I already have Apache 1.33 running, with php5 and mysql5. Apache is what came in the box. Php and Mysql I upgraded manually (not with macports). I&#39;m converting to MacPorts so I can upgrade easier in the future using one mechanism.  </p> <h2>MacPorts</h2> <p> The first step is to get the MacPorts package manager, which lets you install (make) and update programs with commands like 	</p><pre>sudo port install &lt;portname&gt;</pre><pre>port search &lt;portname&gt; </pre><pre>port update &lt;portname&gt;<br /></pre> <blockquote> </blockquote> <p> http://trac.macosforge.org/projects/macports </p> <p> To start they call for Xcode and X11. Fortunately I&#39;d already had those installed (had X11 for Gimp, which I dont use much, it sucks, but that&#39;s another story). Pretty sure you dont need X11 for Rails anyway :)   </p> <p> What I did need to do is setup my .profile (and remove the .bash_profile, copied any commands from there into .profile).  </p> <pre>export PATH=/opt/local/bin:/opt/local/sbin:/opt/local/apache2/bin:$PATH<br />export DISPLAY=:0.0 </pre> <p> and verify with &quot;env&quot; command. Then just download the .dmg package and run the installer.  </p> <p> Then,  </p> <pre>$ sudo port selfupdate </pre> <p>&nbsp;</p> <h2>Get All The Stuff, per Our Friend James </h2> <pre>$ sudo port install apache2<br />$ sudo port install mysql5 +server<br />$ sudo port install subversion +tools<br />$ sudo port install ruby<br />$ sudo port install rb-rubygems<br />$ sudo port install rb-termios<br />$ sudo port install rb-mysql </pre> <pre>$ sudo gem install -y rake<br />$ sudo gem install -y rails<br />$ sudo gem install -y capistrano<br />$ sudo gem install -y mongrel<br />$ sudo gem install -y mongrel_cluster </pre> <p> OK, that went pretty smoothly. Thanks Jimmy. So far so good. Now what? </p> <p> <!--pagebreak--> <br /> </p> <h2>Apache2</h2> <p> Blessed nubieness. I already have Apache 1.33 running on my mac, as it came in the box. James has me upgrading to 2. Or will both be running? (the suspense builds...)  </p> <p> First I try to start up apache2 by running httpd directly from the commandline (as root). Oh No, Jimmy forgets to mention we need a httpd.conf file!  (and thanks to http://blog.nanorails.com/articles/2006/07/11/installing-rails-on-mac-os-x-tiger for pointing this out)<br /> </p> <pre>$ cd /opt/local/apache2/conf<br />$ cp httpd.conf.sample httpd.conf </pre> <p> Start &#39;em up (I su&#39;d as root at this point): </p> <pre>$  /opt/local/apache2/bin/httpd </pre> <pre>$ ps aux | grep httpd </pre> <pre>$ netstat -anl |grep LISTEN  </pre> <p> Yep its running. And duh so is Apache 1. Both on port 80. Stop Apache 1 (using System Preferences &gt; Sharing &gt; Personal Web Sharing &gt; Stop is how I&#39;d been doing it up till now).  </p> <p> OK, browsing to http://localhost now uses Apache2. But the webroot is empty. Ooops, need to edit the conf file some more (/opt/local/apache2/conf/httpd.conf). Comparing the new one with the old one (/private/etc/httpd.conf) helps explain what else needs setting, including  ServerAdmin, DocumentRoot, ErrorLog such as<br /> </p> <pre>ServerAdmin admin@parkerhill.com<br />DocumentRoot &quot;/Library/WebServer/Documents&quot;<br />ErrorLog &quot;/private/var/log/httpd/error_log&quot;<br /> </pre> <p> This article by Tavi helped here, http://forums.macnn.com/88/web-developer/322362/tutorial-installing-apache-2-php-5-a/ </p> <p> Tavi also suggests uncommenting the lines </p> <p> Include conf/extra/httpd-autoindex.conf (Fancy directory listing)<br /> Include conf/extra/httpd-default.conf (Some default settings) </p> <p> I also decided to change  </p> <p> DirectoryIndex index.html<br /> to <br /> DirectoryIndex index.html index.php <br /> </p> <p> Restart Apache2, this time with apachectl (and use the right copy):  </p> <p> (might first need to clean out all httpd processes with sudo killall -9 httpd)  </p> <pre>$ sudo /opt/local/apache2/bin/apachectl stop<br />$ sudo /opt/local/apache2/bin/apachectl start </pre> <p> Or, adding this to .profile </p> <pre>alias apache2ctl=&#39;sudo /opt/local/apache2/bin/apachectl&#39;</pre><pre> </pre> <pre>$ apache2ctl stop<br />$ apache2ctl start </pre> <p> Arrange to launch apache2 at startup<br /></p><pre>$ sudo launchctl load -w /Library/LaunchDaemons/org.macports.apache2.plist </pre> <p> So how do I change the System Preferences gui to use Apache2 instead of 1.3??? Can&#39;t find an answer by Googling. I&#39;ll just keep it Off in there for now (and put apache 1 on port 81 in case it does get started somewhere somehow, by changing to Port 81 in httpd.conf). </p> <p> OK, i can browse to http://localhost, and a couple of static html pages there. Now try http://localhost/phpinfo.php  </p> <h2>PhP </h2> <p> Oops, my other php stuff isn&#39;t working. I&#39;ll just install a fresh copy rather than fiddle with the existing install (and take advantage of port).  </p> <p> Stop apache first, then </p> <pre>$ sudo port install php5 +apache2 +mysql5 +pear<br />$ cd /opt/local/apache2/modules<br />$ sudo /opt/local/apache2/bin/apxs -a -e -n &quot;php5&quot; libphp5.so<br /> </pre> <p> Create a php.ini file you can use </p> <pre>$ cp /opt/local/etc/php.ini-dist /opt/local/etc/php.ini </pre> <p> (actually I copied the ini from the old location /etc/php.ini)  </p> <p> and update the httpd.conf file by adding this line </p> <blockquote> 	<pre> 	Include conf/extras-conf/*.conf 	</pre> </blockquote> <p> Finally (re)start apache </p> <p> As usual, create a file phpinfo.php in webroot containing  </p> <blockquote> 	<pre> 	&lt;?php phpinfo(); ?&gt; 	</pre> </blockquote> <p> and test it by linking to http://localhost/phpinfo.php </p> <p> :)  </p> <h2>MySQL 5</h2> <p> Create the database </p> <pre>$ sudo mysql_install_db5 --user=mysql </pre> <p> Launch when you reboot:<br /> </p> <pre>$ sudo launchctl load -w /Library/LaunchDaemons/org.macports.mysql5.plist <br /> </pre> <p> Add to .profile: </p> <pre>alias mysqlstart=&#39;sudo mysqld_safe5 &amp;&#39;<br />alias mysqlstop=&#39;mysqladmin5 -u root -p shutdown&#39;  </pre> <p> (The &quot;-p&quot; assumes that you will be using a password for root, which you of course should be)  </p> <p> Add a password to your root account: </p> <pre>$ mysqladmin5 -u root password [yourpw] </pre> <p> NOTE: the commands are now mysqladmin5 and mysql5, etc. These are just symlinks in /opt/local/bin to the corresponding programs in /opt/local/lib/mysql5/bin/ (e.g. /opt/local/lib/mysql5/bin/mysqladmin)  </p> <p> Now, in reality, this is not a new install for me, I have other databases. My previous install was in /usr/local/mysql (which is a symlink to /usr/local/mysql-standard-5.0.27-osx10.4-i686 and all the databases are its data/ subdirectory. Ugh-ly. (See <a href=""postings/69"">post</a>). I could just symlink the new mysql database dir there, but after some thought I decided the new one is a better name and location. So instead I copied the binary files from /usr/local/mysql/data/ to /opt/local/var/db/mysql5 and made a symlink from data to the new location. Important: dont just copy the data directory, instead copy each database subdir separately, using cp -rp. </p> <p> Also, port has changed where the .sock file lives. Edit php.ini to say </p> <blockquote> 	<pre>	mysql.default_socket = /opt/local/var/run/mysql5/mysqld.sock  	</pre> </blockquote> <p> If some apps still dont find it, try adding a symlink to the (default?) location in /tmp (note the name is mysql.sock , not mysqld.sock) (however, this link seems to get deleted whenever I reboot so watch out for that): </p> <pre>$ sudo ln -s /opt/local/var/run/mysql5/mysqld.sock /tmp/mysql.sock </pre> <h2>Clean Up</h2> <p> When I finally decide Apache2 and all this stuff is working, I&#39;ll probably retire Apache 1 altogether on this system. At that point I&#39;ll probably put symlinks where files had been conveniently located until now, like /etc/php.ini =&gt; /opt/local/etc/php.ini  and  delete /usr/local/bin/php altogether. Similarly for the old copies of mysql (mysqladmin5 vs mysqladmin) ... </p> <h2>One Last Test</h2> <p> Just to make sure, I&#39;ll reboot and make sure all is still running... </p> <p>&nbsp;</p> <p> <!--pagebreak--> <br /> </p> <h2>Verify Ruby and Rails are Up</h2> <p> Do a quick demo. No explanation here, just typing (see Agile book Chapter 4). Note, &quot;mate&quot; is my editor, choose your own. </p> <pre>$ mkdir ~/rails<br />$ cd ~/rails<br />$ rails demo<br />$ cd demo<br />$ ruby script/server </pre> <p> Link to http://localhost:3000/ </p> <p> Yep, we&#39;re in! </p> <pre>$ ruby script/generate controller Say<br />$ mate app/controllers/say_controller.rb  </pre> <p> add these 2 lines  inside the class definition: </p> <blockquote> 	<pre>	def hello<br /> 	end 	</pre> </blockquote> <p> Link to http://localhost:3000/say/hello<br /> Get error &quot;Template is missing&quot;. That&#39;s ok, lets make it. </p> <pre>$ mate app/views/say/hello.rhtml<br /> </pre> <blockquote> 	<pre>&lt;html&gt; <br />&lt;head&gt; <br />	&lt;title&gt;Hello, Rails!&lt;/title&gt; <br />&lt;/head&gt; <br />&lt;body&gt; <br />	&lt;h1&gt;Hello from Rails!&lt;/h1&gt; <br />&lt;/body&gt; <br />&lt;/html&gt;    	</pre> </blockquote> <p> Refresh. Yippee! </p> <p> Now some database action </p> <pre>$ mysqladmin5 -u root -p create demo_development<br />$ mate config/database.yml </pre> <p> Add password to development: section , and test the connection<br /> </p> <pre>$ rake db:migrate </pre> <p> No errors, Is good. </p> <p> Make a database table (i&#39;m diverging from the book&#39;s tutorial at this point): </p> <pre>$ ruby script/generate model quote<br />$ mate db/migrate/001_create_quotes.rb </pre> <p> inside the do block, add </p> <blockquote><pre>t.column :saying,     :string</pre><pre>t.column :who,        :string</pre> </blockquote> <pre>$ rake db:migrate </pre> <p> Make an admin controller </p> <pre>$ ruby script/generate controller admin<br />$ mate app/controllers/admin_controller.rb <br /> </pre> <p> add this line inside the class: </p> <blockquote> 	<pre>scaffold  :quote 	</pre> </blockquote> <p> Link to http://localhost:3000/admin  </p> <p> That should bring up an admin page, add a couple quotes like  </p> <ul> 	<li>To be or not to be    Shakespeare</li> 	<li>Just do it!              Nike</li> 	<li>etc</li> </ul> <p> If its working it&#39;s creating and retrieving data to/from the database. </p> <p> Good to go!!  </p> <p>&nbsp;</p> ",linoj,5714,"38,42","xamp,rails","php,mysql,install,port,apache",Installing_Rails_on_my_iMac
84,"sh, ssh, and other sshit",,3,1170104800,9,,0,"<p>
I&#39;m just keeping notes of what worked for me. The normal &quot;noobie or at
least I only figured out enough to get it to work&quot; disclaimers apply. 
</p>
<p>
&nbsp;
</p>
<h2>To Setup RSA Keys</h2>
<p>
In order to scp (secure copy) files between servers in a script you need to setup keys so they can authenticate the connection. <br />
</p>
<p>
Lets say there are 2 systems, &quot;from&quot; and &quot;to&quot;. First you generate the
RSA keys on &quot;from&quot;, copy the public key onto &quot;to&quot;, and that&#39;s pretty
much it. 
</p>
<p>
On &quot;from&quot;:
</p>
<p>
from$ ssh-keygen -t rsa
</p>
<p>
do not specify a keyphrase, leave it empty, else you&#39;ll be prompted for it each time, which we&#39;re trying to avoid. 
</p>
<p>
This creates files on from ~/.ssh/id_rsa  and  id_rsa.pub  The .pub file is the public key, which is copied to the &quot;to&quot; system.
</p>
<p>
On &quot;to&quot;:
</p>
<p>
&nbsp;
</p>
<h2>Simple Rotate Logs and Backup from One Server to Another</h2>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,0,38,xamp,,sh%2C_ssh%2C_and_other_sshit
83,"Utilizing Sub-Templates","Use the Xaraya xar:template tag to help modularize your templates and avoid redundancy.",3,1169832316,9,,2,"<h2>General Usage</h2> <p> Whenever you have template code that can be shared between two or more templates, it makes sense to extract it into its own file. The general format of the tag is: </p> <blockquote> 	<pre>&lt;xar:template type=&quot;module|theme|system&quot; module=&quot;modname&quot; file=&quot;filename&quot; subdata=&quot;$keyarray&quot; /&gt; 	</pre> 	<p> 	module= is only needed with type=&quot;module&quot; (and defaults to the current template&#39;s module, though I recommend putting it in there anyway). 	</p> 	<p> 	When type=&quot;module&quot;, BL will first look for themes/mytheme/[modname]/includes/filename.xt If it&#39;s not found it will then look for modules/[modname]/xartemplates/includes/filename.xd  	</p> 	<p> 	When type=&quot;theme&quot;, BL will look in the themes/mytheme/includes/ directory for the file, with extension &quot;.xt&quot;. 	</p> 	<p> 	When type=&quot;system&quot;, BL will look in the current template directory for the &quot;filename&quot;. Note, in this case you must supply the name extension (e.g. .xt).  	</p> </blockquote> <p> Lately I&#39;ve started making a subdir under includes called &quot;snippets&quot;, just to make it easier to find my stuff. So, a template might have the tag, </p> <blockquote> 	<pre>&lt;xar:template type=&quot;theme&quot; file=&quot;snippets/mycode&quot; /&gt; 	</pre> </blockquote> <p> And put the code in file </p> <blockquote> 	<p> 	themes/mytheme/includes/snippets/mycode.xt 	</p> </blockquote> <p> A  few notes. Details of this tag can be found in RFC010. Sub-templates can access any local variables pass into, and/or defined by the calling template. (That is, unless you use the subdata= argument, in which case the only variables available to the sub-template are those defined in the subdata key list array. This lets sub-templates act more like self-contained functions). Also, any variables you define or change in the sub-template are not available in the calling template once it returns.  </p> <p>&nbsp;</p> <h2>Articles Summary and Display Alike</h2> <p> I have a simple Articles Pubtype where I only need one way of formatting the contents, in both the Vew/Summary page and the item&#39;s own Display page. Rather than cut and paste the template code I decided to just include the summary template in the display one. Thus, user-display-myptype.xt contains </p> <blockquote> 	<pre>&lt;xar:template type=&quot;system&quot; file=&quot;user-summary-myptype.xt&quot; /&gt;  	</pre> </blockquote> <p> This instructs BL to find the file relative to the parents directly. Note that the file extension is required when using type &quot;system&quot;. </p> <p>&nbsp;</p> <h2> Overriding Default Admin Templates</h2> <p> When I need to override default templates, such as admin-new or admin-modify, in an application for (certain) users, I usually still want my admin account to get the full blown template. </p> <p> For instance, I give some users the ability to submit new articles. They use a customized admin-new-myptype.xt template. I structure the template something like this: </p> <blockquote> 	<pre>&lt;xar:if condition=&quot;xarIsAncestor(  &#39;Administrators&#39;,  xarUserGetVar(&#39;uname&#39;) )&quot;&gt; 	</pre> 	<pre>	&lt;xar:template type=&quot;system&quot; file=&quot;admin-new.xd&quot; /&gt; 	</pre> 	<pre>&lt;xar:else /&gt; 	</pre> 	<pre>	... custom admin new template here ... 	</pre> 	<pre>&lt;/xar:if&gt; 	</pre> </blockquote> <p> And a similar thing for admin-modify. This way, when I&#39;m logged in as Admin, and go through the Articles admin gui, I get the full default admin forms. </p> <p> However, this doesn&#39;t quite work, it&#39;s going to look for the default .xd file in the theme directory. (type=&quot;module&quot; also won&#39;t work in this case). Instead you can copy the .xd files from modules/articles/xartemplates/ to the mytheme/modules/articles/ or create a symlink (which is what I did). </p> <p>&nbsp;</p> <h2>BLTemplate Property</h2> <p> A more advanced technique, configurable via GUI, utilizes the BLTemplate property. For example in an Xarpages pagetype, if you add a Dynamic Data property BLTemplate, you can choose a template file from a dropdown list, and then include it via the custom page template. </p> <p> See the Vaporbase posting, <a href=""postings/42"">Dynamic Extendable Templates in Xarpages</a> section heading &quot;Including Other Templates&quot; in the 2nd half of the article. </p> <p>&nbsp;</p> <p>&nbsp;</p> ",linoj,5466,37,xaraya,"articles,template",Utilizing_Sub-Templates
82,scheduler,"setting up scheduler with crontab",3,1169610139,9,,2,"<p> You can use the Scheduler module in Xaraya to queue up jobs.  </p> <p> For example, Pubsub allows users to subscribe to events on your system; when an article (in a particular category) is changed or comments are added to a forum, subscribed users will be notified via email. </p> <p> Or, you can schedule regular backups using Sitetools. And so on. </p> <p> To run the jobs queued up in the Scheduler, you need a trigger. This trigger can be someone hitting the scheduler module on your site. You can setup a cron job to trigger the scheduler, say, once an hour. </p> <h2>Configure Scheduler Module </h2> <p> On the Scheduler Config screen choose &quot;External Scheduler&quot;, and the IP address where your cron job will be running. Use the &quot;Note: you are connected ...&quot; to help decided.  </p> <p> Also note the url that the Trigger specifies, e.g.  <a href=""http://www.careshare-cmhi.org/?module=scheduler"">http://www.mysite.com/?module=scheduler</a> </p> <h2>Test Trigger from Command Line </h2> <p> From the command line on that system, run  </p> <pre>curl  &quot;<a href=""http://www.careshare-cmhi.org/?module=scheduler"">http://www.mysite.com/?module=scheduler</a>&quot;   </pre> <p> If it comes back (wading through the html) with something like  </p> <pre>Starting jobs<br />pubsub admin processq succeeded : <br />1 </pre> <p> then you&#39;re cool. Otherwise check the Source IP settings. </p> <h2>Make a Scheduler Theme </h2> <p> We dont need all the html, so I create a very simple theme (e.g. from the empty/ theme) named &quot;scheduler&quot;, that all it has is a pages/default.xt that contains </p> <pre>&lt;xar:module id=&quot;modulespace&quot;  main=&quot;true&quot; /&gt; </pre> <p> Then you can trigger with </p> <pre>curl  &quot;<a href=""http://www.careshare-cmhi.org/?module=scheduler"">http://www.mysite.com/?module=scheduler</a>&amp;theme=scheduler&quot;  </pre> <h2>Write a Shell Script </h2> <p> Once that&#39;s working put the curl command into a shell script, such as scheduler.sh </p> <pre>#!/bin/sh<br />/usr/local/bin/curl -v &quot;http://www.mysite.com/?module=scheduler&amp;theme=scheduler&quot; &gt;&gt;/home/xaraya/crondump.txt  </pre> <p> Note that I direct output to a file, at least until we&#39;re sure things are working. Make sure it&#39;s chmod 755 </p> <h2>Create the Crontable </h2> <p> Next, create the crontable. Make a file like crontable.xaraya with something like </p> <pre># hourly triggers for xaraya scheduler<br />0 * * * * sh /home/me/scheduler.sh </pre> <p> And add it to cron with </p> <pre>crontab  crontable.xaraya </pre> <p> Make sure its there with </p> <pre>crontab -l  </pre> <p> That&#39;s it, should be good to go.  </p> <h2>Crontable Format </h2> <p> Wikipedia has a nice article: http://en.wikipedia.org/wiki/Cron </p> <p>&nbsp;</p> <pre># append a message to file every minute, tests cron is working<br />* * * * * echo &quot;hello from crontab&quot; &gt;&gt;/home/me/crondump.txt <br /> </pre> <pre># hourly triggers for xaraya scheduler<br />0 * * * * curl &quot;http://www.mysite.org/?module=scheduler&amp;theme=scheduler&quot;  </pre> <p>&nbsp;</p> <pre># (Use to post in the top of your crontab)<br /># ----------------- minute (0 - 59)<br /># |  -------------- hour (0 - 23)<br /># |  |  ----------- day of month (1 - 31)<br /># |  |  |  -------- month (1 - 12)<br /># |  |  |  |  ----- day of week (0 - 7) (Sunday=0 or 7)<br /># |  |  |  |  |<br /># *  *  *  *  *  command to be executed </pre> <p>&nbsp;</p> ",linoj,3201,37,xaraya,"scheduler,crontab",scheduler
81,"Authentication with Email Address Only","You can simplify things for your users if you allow them to register and log in with their email address rather than username. ",3,1169000922,9,,2,"<p>&nbsp;</p> <p> During registration, by default, Xaraya asks for a login name (username), display name (name), email, and password. The distinction between these may be clear to some of us, but &quot;normal&quot; people don&#39;t need (and are confused by) so many parameters. </p> <p> There are 3 parts to user management (at least): registration (to sign up), validation (to verify/activate account), and authentication (to login). I&#39;ll discuss these out of order.<br /> </p> <h2>Authentication: Email Login Using Authemail Module </h2> <p> The authemail module lets you simplify things for your users, allowing them to log in with their email address rather than their username. It&#39;s just one less thing to have to remember. </p> <p> Just install the module. Then under Admin &gt; Base &gt; Config &gt; Sessions/Security, choose the Authemail module from the list of Authentication Modules, and move it to the top of the list. That&#39;s it. </p> <p> Well, I think authemail assumes each account has a unique email address. So be sure you&#39;ve checked the  &quot;Email Address Must Be Unique To Each Registered User&quot; checkbox in Admin &gt; Registration &gt;  Config &gt; Registration.<br /> </p> <p> Now at the login prompt, you can enter either your normal login name, or your email address.   </p> <p> You might also want to change the login templates to prompt for Email Address rather than Username, such as mytheme/modules/authsystem/blocks/login.xt and authsystem/user-choices.xt  Note, a bit out of character (I think) for Xaraya&#39;s Blocklayout, you also will need a template authsystem/user-showloginform.xt which contains the following line: </p> <blockquote> 	<pre>&lt;xar:template type=&quot;system&quot; file=&quot;user-choices.xt&quot;/&gt; 	</pre> 	 </blockquote> <h2>Registration: Eliminating Username During Registration<br /> </h2> <p> I&#39;ve taken this one step further on several sites, and don&#39;t even bother asking for a username during registration. Just &quot;Full name&quot; (display name), &quot;Email&quot; and &quot;Password&quot;. </p> <p> The problem here is that Xaraya requires a username, even if its not used during login (as the case with the authemail module).  </p> <p> During registration, the username field can be made a hidden field, and populated (say, via javascript) with the contents of the display name or email fields, for example. Or, it could have a random value stuffed in there, such as using function date() or rand(). </p> <p> The problem with random numbers is they aren&#39;t very informative, like from the Roles admin GUI screens. A problem with using display name is that username cannot contain space characters, so you&#39;ll need to strip them or str_replace them with underscores (for example).  </p> <p> Another problem with copying display name or email is the user can change these in their Account Profile. I wouldn&#39;t necessarily bother to keep these in sync (when one is updated, update the other) but you could. Then again it might be confusing to have one email address in email field, and a different (old one) in uname.  </p> <p> Which brings up another point. You might want to update your Display/Edit Profile templates to hide the username:<br /> </p> <blockquote> 	<p> 	roles/user-display.xt<br /> 	roles/user-user_menu_form.xt </p> </blockquote>  <h2>Validation: Enabling Validation</h2> <p> It is recommended that you always require your users to validate their registration. This means after they register, they&#39;ll receive an email with a validation code. They can click on a link to activate the account, or go to a page and type in the code. Either way, validation would be required before they&#39;re allowed to log in. Validation ensures that someone else isn&#39;t registering for you with your email address without your knowledge. </p> <p> Enable validation in the Registration module; use Admin &gt; Users &amp; Groups &gt; Registration &gt; Config &gt; Registration, and check the &quot;Require Validation Of New Users&quot; checkbox.   </p> <p> Xaraya&#39;s validation mechanism assumes the user has a username. If you hid the username field during registration, users may have no clue what their username is. A few adjustments are needed to accommodate our changes. </p> A. Edit the authemail authenticate_user.php file to enable validation checks (file modules/authemail/xaruserapi/authenticate_user.php). Around like 52, uncomment out the line: <pre>$getvalidation=TRUE; </pre> <p> (If this line is not present in your version of the file, I&#39;ve pasted a copy of the whole thing below). </p> <p> B. Edit the Roles user-startvalidation.xd template (eg save into mytheme/modules/roles/user-startvalidation.xt) replacing the uname input fields with a hidden one, such as</p><p>&nbsp;</p> <pre>&lt;input type=&quot;hidden&quot; name=&quot;uname&quot; id=&quot;uname&quot; value=&quot;#xarVarPrepForDisplay($uname)#&quot; /&gt;  </pre> <p> and delete the corresponding labels.  </p> <p> C. Edit the email confirmation message and remove references to username. See file var/messaging/roles/confirmation-message.xd </p> <p>&nbsp;</p> <h2>Changes to Authemail Code </h2> <p> File: modules/authemail/xaruserapi/authenticate_user.php </p> <pre>function authemail_userapi_authenticate_user($args)<br />{<br />	extract($args);<br />	assert(&#39;!empty($uname) &amp;&amp; isset($pass)&#39;);<br />	$dbconn =&amp; xarDBGetConn();<br />	$xartable = xarDBGetTables();<br /><br />	// Get user information<br />	$rolestable = $xartable[&#39;roles&#39;];<br />	$query = &quot;SELECT xar_uid,<br />		xar_pass,<br />		xar_state,<br />		xar_uname<br />		FROM $rolestable<br />		WHERE xar_email = ?&quot;;<br />	$bindvars = array($uname);<br />	$result =&amp; $dbconn-&gt;Execute($query,$bindvars);<br />	if (!$result) return;<br />	if ($result-&gt;EOF) {<br />		$result-&gt;Close();<br />		return XARUSER_AUTH_FAILED;<br />	}<br />	list($uid, $realpass, $state, $username) = $result-&gt;fields;<br />	$result-&gt;Close();<br /><br />	<strong>// To support user validation + authemail, set $getvalidation to TRUE.<br />	// This will redirect logins to getvalidation if user has not been validated<br />	//<br />	//$getvalidation=FALSE;<br />	$getvalidation=TRUE;<br />	if ($getvalidation &amp;&amp; $state == ROLES_STATE_NOTVALIDATED) {<br />		xarResponseRedirect(xarModURL(&#39;roles&#39;, &#39;user&#39;, &#39;getvalidation&#39;, array(&#39;uname&#39;=&gt;$username)));<br />	}</strong><br /><br />	// Confirm that passwords match<br />	if (!xarUserComparePasswords($pass, $realpass, $uname, substr($realpass, 0, 2))) {<br />		return XARUSER_AUTH_FAILED;<br />	}<br />	return $uid;<br />}<br /> </pre> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> ",linoj,4368,37,xaraya,"authemail,validation,registration",Authentication_with_Email_Address_Only
80,"ISP content caching workarounds","Seems like its just me, not everyone has this problem. Probably because my satellite ISP does some content caching.",3,1168380566,9,,2,"<p>
If I need to refresh my page and/or stylesheet, and hitting Reload or even Shift-Reload doesnt fix it, I used to then clear cache. That&#39;s a pain if I really dont want to have to reload everything. And sometimes that doesn&#39;t fix it either. I think my modem or ISP may be cacheing content on their server.
</p>
<p>
Solution: Clear Session Cookies (e.g. available in FireFox&#39;s WebDeb plugin).
</p>
<p>
&nbsp;
</p>
<p>
Similarly, if you&#39;re editing Articles and getting nailed by the Auth ID checks (&quot;Forbidden Operation&quot; when you save), it may be a similar problem. The page content is getting cached, and it contains an outdated Authorization ID. Sometimes reloading the same page in a new tab works (eg right click the Edit link and open in new tab). 
</p>
<p>
Before you begin editing, hit Preview. If you don&#39;t get an error, you can edit and save. If you do get an error, the edit page was outdated and you&#39;d have lost your edits when you went to save.
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,2657,39,musings,"isp,satellite,cache",ISP_content_caching_workarounds
79,"Don't tab to my labels, pleez","Have you noticed in forms that tabbing lands on the next label then you have to tab again to go to the input field? ",3,1168379380,9,,2,"<p> It seems to only happen in a recent FireFox upgrade. It does not happen in IE6 nor Safari.  </p> <p> The culprit seems to be the class </p> <pre>.xar-form-input-wrapper {<br /> 	margin-bottom: 4px;<br /> 	overflow:auto; <br /> }<br /> </pre> <p> in file modules/base/xarstyles/xarcore-xhtml1-strict.css </p> <p> If you comment out the overflow: auto; fixes it. </p> <p> Or in your theme&#39;s style.css, add this override </p> <pre>.xar-form-input-wrapper {<br /> 	overflow:visible !important; <br /> }<br /> </pre> ",linoj,3612,37,xaraya,"css,forms",Don%27t_tab_to_my_labels%2C_pleez
78,"More Thoughts on RoR",,3,1168362777,9,,0,"<p>
I cant believe I find myself thinking what it would take to implement a Xaraya like system in Rails. RoR is much better than php + DD (Xaraya&#39;s dynamic data), but Xar has so much more on top of that. 
</p>
<p>
The RoR solution to modularity are code snippets and &quot;recipes&quot; vs prebuilt modules afaics.
</p>
<p>
They seem to come from custom app world, smarty type stuff, rather than point and click nuke stuff 
</p>
<p>
ppl seem to be focussing on their own projects rather than reusable code, though alot of &#39;recipes&#39; are out there (snippets, tutorials)
</p>
<p>
&nbsp;
</p>
",linoj,0,42,rails,,More_Thoughts_on_RoR
77,"Ruby-on-Rails versus Xaraya","Both Xaraya and Rails are brilliantly architected on the Model-View-Controller (MVC) paradigm. This is one of the things that really got me jazzed about Xaraya, and in turn, has me really appreciating Rails. I've been toying with RoR for two days. I've been using Xaraya for two years. Here's some of my first impressions.",3,1167584353,9,,2,"<h2>Starting Out Cynical </h2>
<p>
&quot;Ruby on Rails&quot;, might as well be called &quot;Hype on Steroids&quot;. OK, sure it&#39;s reported to be the greatest thing for web development since sliced bread, javascript, and crack cocaine. And everyone&#39;s doing it, or so it seems. i even read that Apple is planning to include it standard on the next release of OSX.
</p>
<p>
The first time I watched its &quot;<a href=""http://www.rubyonrails.org/screencasts"">amazing video demo</a>&quot; was over 2 years ago (October 2004) when I was researching a framework to learn and use for my upcoming projects. It seemed so cool, and probably still is. Seriously. But I was turned off by the hype, even back then. Plus, Ruby is a whole new programming language, so unfamiliar to me. 
</p>
<p>
So I settled on PhP as my language of choice. It is much closer to my previous life of programming in C/C++, and I just didn&#39;t get excited by other web languages like  Perl and Python. 
</p>
<p>
And I concentrated my efforts and dedicated myself to <a href=""http://www.xaraya.com"">Xaraya</a>  as my web framework / CMS (content management system). That decision has been very good to me, I&#39;ve implemented some major web projects (and many minor ones too) with Xaraya, and I&#39;m continually impressed with its power, flexibility, and transparency. 
</p>
<p>
My major concerns about Xaraya include the difficulties in debugging my projects (translates into wasted time), its dependency on a very small group of developers, and that the project (recently) appears to lack momentum (at least in &quot;internet time&quot;). 
</p>
<p>
Meanwhile the RoR hype hasn&#39;t let up. It has a very strong following, both in the corporate world as well as the open source communities.  After all, there are books written about it; you can&#39;t say that for Xaraya. Or put another way, if you had a company and were looking for
investors, and you told them the product is built with Rails, they&#39;d
say &quot;Oh, Wow!&quot;, whereas if you say it&#39;s built with Xaraya, they&#39;d say
&quot;oh, what&#39;s that?&quot;... Is that fair? Probably not. But so much in life
is about impressions. 
</p>
<p>
So, there&#39;s some good reasons to kick the tires on RoR and compare it with my current tools of choice. 
</p>
<h2>In General </h2>
<p>
First of all, is this even a fair comparison? Perhaps not exactly &quot;apples&quot; and &quot;oranges&quot; but close enough. At a minimum, when starting a new web application one must make a decision what platform to use, whether it be Xaraya, RoR, .NET, etc.
</p>
<p>
Let&#39;s consider that Xaraya is a web framework (the Xaraya &quot;core&quot;), written in the PhP language, with a body of additional components (e.g. functional &quot;modules&quot; and templated &quot;themes&quot;). RoR also is a web framework (Rails), written in the Ruby language, with a body of additional components (plug-ins). Both are free, open source projects.
</p>
<p>
Here&#39;s a summary comparison of some of the attributes of each project:
</p>
<table border=""1"" width=""100%"">
	<tbody>
		<tr>
			<td><em> FEATURE<br />
			</em>
			</td>
			<td><em>XARAYA 1.1.3
			</em></td>
			<td><em>RAILS 1.2<br />
			</em>
			</td>
		</tr>
		<tr>
			<td> Language </td>
			<td>Php </td>
			<td>Ruby </td>
		</tr>
		<tr>
			<td>Paradigm </td>
			<td>MVC </td>
			<td>MVC </td>
		</tr>
		<tr>
			<td> Framework</td>
			<td>Xaraya </td>
			<td>Rails </td>
		</tr>
		<tr>
			<td>Recommended Web server<br />
			</td>
			<td>apache, lighttp, or any<br />
			</td>
			<td>lighttp, webrick, apache, or any<br />
			</td>
		</tr>
		<tr>
			<td> Database abstraction<br />
			</td>
			<td>adodb<br />
			</td>
			<td>ruby adaptors<br />
			</td>
		</tr>
		<tr>
			<td>Data schema tools <br />
			</td>
			<td>dynamicData module </td>
			<td>migrate class </td>
		</tr>
		<tr>
			<td>testing tools<br />
			</td>
			<td>n/a <br />
			</td>
			<td>yes <br />
			</td>
		</tr>
		<tr>
			<td>Devel vs production databases<br />
			</td>
			<td>(manual)<br />
			</td>
			<td>yes <br />
			</td>
		</tr>
		<tr>
			<td> Website</td>
			<td><a href=""http://www.xaraya.com/"">http://www.xaraya.com/</a> </td>
			<td><a href=""http://www.rubyonrails.org/"">http://www.rubyonrails.org/</a> </td>
		</tr>
	</tbody>
</table>
<p>
I won&#39;t attempt to explain Rails or Xaraya in much depth here (nor Ruby
or PhP), there are plenty of tutorials elsewhere.  
</p>
<p>
Much of my information about Rails has come from reading the first 200 pages of the book &quot;<a href=""http://www.rubyonrails.org/docs"">Agile Web Development with Rails, Second Edition</a> &quot; (available in hardcopy or PDF). Plus a couple other articles/tutorials I walked through. 
</p>
<h2>Language</h2>
<p>
Ruby is unlike any language I&#39;ve used, and I&#39;ve used some pretty weird languages (ever heard of &quot;PL/1&quot;? that was cool stuff). When I was in graduate school at MIT in the 1980&#39;s, a computer scientist asked me what language I was programming my thesis project, I told him &quot;C&quot;. He had vaguely heard of it (MIT was the bastion of the LISP language), &quot;Oh&quot; he said, &quot;is that a stack-oriented language?&quot; Heh! But I digress...
</p>
<p>
Even weirder is the Ruby tutorial document promoted on the RoR web site, &quot;<a href=""http://poignantguide.net/ruby/"">Why&#39;s (Poignant) Guide to Ruby</a>&quot;. I think the guy (whose name is &quot;Why&quot;) is certifiably insane. Perhaps too much ecstasy or mushrooms. Is this a reflection of the makeup of the RoR community?! Actually I read almost every paragraph, it really was a fun read and I learned a thing or two along the way.
</p>
<p>
Ruby is a rich object-oriented language, with a very compact syntax. My impression is that the learning curve will be steep, but once you really get your arms around it (including many of the built in and library features) it could really be powerful and extremely efficient. 
</p>
<p>
Xaraya 1.x is built on Php 4 and is incrementally making the transition
to object orientation (the current code has both procedural and object
layers, just not consistently nor everywhere).
Xaraya 2x promises to be more object oriented. and will require PhP 5, which has added much better object support. Even so, PhP still strikes me as primarily a procedural language trying to play catch up.  
</p>
<p>
As far as I can tell, the only reason to learn and use Ruby is for Rails. And the body of Ruby packages are most likely being developed by RoR developers. Maybe that&#39;s a good thing. Maybe it&#39;s not.<br />
</p>
<p>
PhP on the other hand is a very well established language with a plethora of open source (and proprietary) projects and applications. This means you have more choices for best of breed libraries, apps, and tools to integrate with your Xaraya application. And there&#39;s a lot more PhP programmers out there if you need to subcontract one.<br />
</p>
<h2>MVC Paradigm </h2>
<p>
Both Rails and Xaraya are based on the Model-View-Controller (MVC) paradigm. Briefly this means you have a database &quot;model&quot; (schema) and code that manages it (your &quot;business logic&quot;); you have &quot;view&quot; templates that present model data to the user (e.g. generated html web pages); and &quot;controller&quot; code that takes user input (e.g a click on a web link) and directs it to a processing function (who interacts with the model and presents an updated view back to the user).
</p>
<p>
One big difference seems to be that Rails has you start by designing your database schema, and then you build the code (classes) to manage the logic and the templates (views) to display it.
</p>
<p>
In Xaraya you tend to start by installing the functional modules you want to use (which sets up a default db schema), and then you modify the data fields using admin configuration options and hooks (especially dynamicdata hooks), and the templates (theme) to display it. 
</p>
<h2>Framework </h2>
<p>
Both Rails and Xaraya have established their own standard conventions
for naming functions, files, and the directory structure where files are maintained on the server.
</p>
<p>
Consider the (default) interpretation of short URL&#39;s in each framework:
</p>
<blockquote>
	Xaraya:  http://www.mysite.com/<strong><em>mod</em></strong>/<strong><em>func</em></strong>/<em><strong>id</strong></em>
</blockquote>
<blockquote>
	<p>
	Rails: http://www.mysite.com/<strong><em>contr</em></strong>/<strong><em>action</em></strong>/<em><strong>id</strong></em> 
	</p>
</blockquote>
<p>
<strong>Module/Controller </strong>
</p>
<p>
In
Xaraya, &quot;<em>mod</em>&quot; is the module that generates the main content. &quot;<em>func</em>&quot;
is the name of the function to call, which would literally be <em>mod</em>_user_<em>func</em>() in file
modules/<em>mod</em>/xaruser/<em>func</em>.php.  
</p>
<p>
In Rails, the &quot;<em>contr</em>&quot; is the controller class, and &quot;<em>action</em>&quot; is the method. The class name would actually be <em>Contr</em>Controller in the file app/controllers/<em>contr</em>_controller.rb <br />
</p>
<p>
&quot;<em>id</em>&quot; is the item or record identifier.
</p>
<p>
Note, both platforms let you alter the default structure and interpretation of url parameters, more or less. 
</p>
<p>
<strong>Template/View </strong>
</p>
<p>
In Xaraya, the template used would be modules/<em>mod</em>/xartemplates/user-<em>func</em>.xd (or override themes/mytheme/modules/<em>mod</em>/user-<em>func</em>.xt). The page layout would come from themes/mytheme/pages/default.xt (or if present, themes/mytheme/pages/<em>mod</em>.xt).
</p>
<p>
In Rails, the template used would be app/views/<em>contr</em>/<em>action</em>.rhtml. The page layout might come from apps/layouts/<em>contr</em>.rhtml 
</p>
<p>
<strong>
Tables/Model</strong>
</p>
<p>
In Xaraya a module maintains its own set of database tables, by convention named something like xar_<em>mod</em>. Accessing these tables are pretty much buried from view from the user (web developer) accessed via module user or admin functions, or through the module&#39;s API functions.
</p>
<p>
In Rails you have more direct control over the database; and the (default) class code is automatically generated for you. As mentioned above, in Rails you tend to start your development by defining the database schema. 
</p>
<p>
So lets say you create a db table &quot;products&quot;, Rails will automatically use a controller class ProductController (notice it handles the singular/pluralization too :), which understands the table columns from the database, and automatically makes available to you functions for managing and displaying rows in the table (e.g. the CRUD functions - create, read, update, delete).
</p>
<p>
This auto-generated functional support is called &quot;scaffolding&quot; in Rails. It provides rich yet basic support for your db tables. The generated files work but are not intended for production. You replace them, incrementally, as your app develops. Just like scaffolding on a building, they&#39;re there while you build the walls, then come down as as the actual building stands on its own. This is one reason Rails lends itself to rapid and agile development. 
</p>
<p>
Another point. Xaraya is moving toward its core &quot;dynamicData&quot; (DD) module for interfacing your app (and new modules) with the database storage. DD has a rich set of features and tools, not the least of which are extendable dynamic property types and validations. The default storage of DD is rather inefficient, using a separate table row for each field. However you can make dedicated tables for your DD objects, and even define foreign keys and such. (I&#39;m still somewhat timid to use them as I should).
</p>
<p>
Rails also has comprehensive support for validations and error handling. Perhaps even more intuitive than Xaraya&#39;s. I&#39;m just not sure they&#39;re as well organized. 
</p>
<h2>
</h2>
<h2>
Web Server</h2>
<p>
Not much to say here except, in general, it seems the RoR team has stronger recommendations and support for your development and deployment environments. The Xaraya teams pretty much leaves this up to you. Everyone seems to like LigHTTP (lighty).
</p>
<p>
With regard to scalablity and/or deployment in an enterprise environment, I&#39;m not sure what to say. My understanding is that both systems are equally capable of supporting multi-box configurations (e.g. your database is on a separate machine from the http server). Both seem to have very good and flexible cacheing support available. In reality, I&#39;ve read that there are some large RoR based sites deployed, and I&#39;m not aware of any large Xaraya-based site in production. 
</p>
<h2>Database Abstraction and Tools</h2>
<p>
I touched on this above so I wont repeat myself. But I do have a few things to add.
</p>
<p>
Xaraya uses the ADODB library to abstract its interface with the native SQL database. Rails has its own adaptors written in Ruby, running on a database engine. 6 of one, half dozen of the other as far as I&#39;m concerned.
</p>
<p>
Xaraya&#39;s very cool DynamicData utilties are like a built-in phpMyAdmin that knows inherently the underlying Xaraya db schema. <br />
</p>
<p>
One problem I have with Xaraya development is when I&#39;m setup with a development site (typically on my local LAN, though not always) and a production site (on the Web). When I change things in the Xaraya theme templates, those are very easy to deploy to the production site. But when I change things in the database, I have to be careful to remember what I changed, then make the equivalent parallel changes on the production site. And test well, because I can screw up. (The alternative approach is to lock down the production site, copy its db to my local environment, do my development and testing, then copy it back. Sometimes I do that, but usually it&#39;s not feasible).
</p>
<p>
Rails automatically maintains separate database for development and production. 
</p>
<p>
Rails has tools for migrating your database structure changes, called &quot;migration&quot;. You specify changes to a table&#39;s layout in a migration file (using .yml format), and run the migration script. You can then roll back changes. Or propagate them to other databases (eg from development to production). Note, I haven&#39;t used this or even read enough to know how well it preserved the data contained in the tables that you&#39;ve restructured, or what tools might be available to facilitate this. It&#39;s important though that the framework for development vs production is built in.
</p>
<h2>
Testing Tools</h2>
<p>
Here&#39;s an area that Rails seems unique in general.  Rails has testing built into the framework. Rails calls things that test models &quot;unit tests&quot;, things that test a single action in a controller &quot;functional tests&quot;, and things that test the flow through one or more controllers &quot;integration tests&quot;. These .rb files are kept in directories test/unit/, test/functional, and test/integration, respectively. 
</p>
<p>
Rails also maintains a database just for tests, so you can setup a reusable known set of test cases. You can even script out domain-specific high level test scenarios, like multiple sessions of users each adding products to your shopping cart and checking out...
</p>
<h2>
What Else?</h2>
<p>
I know I&#39;ve just barely scratched the surface. I&#39;m just getting my feet web with Ruby on Rails whereas I have years of experience with Xaraya and know it well. 
</p>
<p>
Xaraya has dozens of modules, each neatly orthogonal (minimal overlap in features), that can be hooked together with just a few clicks. Xaraya also has user-contributed themes that help get people going quickly.
</p>
<p>
What else? Lots.
</p>
<p>
Xaraya&#39;s templating language, Block Layout, is fully XML compliant and extendable as developers can add new tags (.xt files). Rails lets you embed native Ruby code in its templates (.rhtml files).
</p>
<p>
Xaraya has blocks and subtemplates (xar:template tag). Rails has &quot;partials&quot;. 
</p>
<p>
Xaraya has very strong security, authentication, and privileges built-in. The tutorials I read for Rails show how to easily roll your own, with access to sessions, a login model, and data filters. I&#39;m sure there&#39;s downloadable plug-ins for these, I just haven&#39;t gotten there yet. 
</p>
<p>
Xaraya has lots of other nice tools, like a module for the TinyMCE (wysiwyg editor widget), support for RSS and RPC and other services, etc etc. I&#39;m sure Rails does too.
</p>
<p>
I know the Rails community is big, so I have a lot of exploring to do to see what&#39;s out there, and how good it is.
</p>
<p>
In fact, this might be a problem in itself. Xaraya is a small community, and while may not have enough pieces for all the functionality you need, you can get a clear picture of the pieces it does have. My fear with a big project like Rails is the risk of a large amount of junk out there, how much you&#39;re expected to write on your own, and what it takes for me to have the knowledge and experience to tell the good from the bad. 
</p>
<p>
&nbsp;
</p>
",linoj,4093,42,rails,"xaraya,ruby on rails",Ruby-on-Rails_versus_Xaraya
76,"Combo properties","A short description of the xaraya dynamic combo property : selection list + text box. And suggestions how to improve upon it.",3,1167242345,9,,0,"<p>
The Combo property is a bit confusing. And begs for ideas how to improve it.
</p>
<h2>Standard Combo Property</h2>
<p>
The standard Xaraya Combo property is a combination dropdown selection list and text box. It is implemented in modules/base/properties/Dynamic_Combo_Property.php 
</p>
<p>
For the valdation you specify the selection options like any dropdown property (as a strong of id1,name1;id2,name2;id3,name3; etc, or a file, or an api function).
</p>
<p>
The value of the property is the selected id. Or, the contents of the textbox.
</p>
<p>
Thus, if the validation is
</p>
<p>
1,one;2,two;3,three
</p>
<p>
and you pick &quot;two&quot; from the list, the value will be &quot;2&quot;. If you type &quot;four&quot; in the text box, the value will be &quot;four&quot;.
</p>
<p>
So the value is either the Id if its from the list, or the textbox string. <br />
</p>
<p>
This might be useful in some cases, but it seems incongruous to me because from the user point of view, he sees the option names (&quot;one&quot;, &quot;two&quot;, &quot;three&quot;) in the selection list. Then if he types in a different one (&quot;four&quot;) it&#39;s the name part that&#39;s saved, versus an id.
</p>
<p>
Then again, if your validation were simply &quot;one;two;three&quot; then no problem, as the id (value) and name (option) are the same.
</p>
<p>
When you redisplay the property for input, a new option is added to the bottom of the selection list &quot;Text Specified =&gt;&quot; with nullstring value (&#39;&#39;). This is done in the showinput-combobox.xd property template as follows
</p>
<p>
&lt;xar:if condition=&quot;($optionSelected eq false) and !empty($value)&quot;&gt;<br />
&lt;option value=&quot;&quot; selected=&quot;selected&quot;&gt;Text Specified ==&amp;gt;&lt;/option&gt;<br />
&lt;/xar:if&gt;<br />
</p>
<h2>Issues</h2>
<p>
My issues are usablity. The property works as its written.
</p>
<p>
First there&#39;s the id,name (value,text) issue of the selection list vs text box.
</p>
<p>
Next, when a value already exists in the textbox, the &quot;Text Specified ==&gt;&quot; is in the list, and then you want to change the value by picking from the list, that input is not recognized <em>unless you manually erase the textbox text too</em>.  
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,0,37,xaraya,"properties,combo",Combo_properties
75,"Javascript for forms","A small collection of snippets and tips for making forms client-side intelligent.",3,1167237648,9,,0,"<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<h2>Checkbox disabled (from baraboom)</h2>
<p>
&lt;input type=checkbox name=&#39;AcceptPolicies&#39; value=&#39;&#39; onClick=&quot;AcceptPoliciesClick();&quot;&gt; &lt;big&gt;Yes&lt;/big&gt;, I accept the cancellation and guarantee policies.&lt;br&gt;&lt;br&gt;<br />
&lt;input type=&quot;button&quot; disabled value=&quot;Book Reservation&quot; name=&quot;Book&quot; onClick=&quot;Reservation.action=&#39;[% secure_index %]&#39;;if( ValidateForm(Reservation) ){fixState(); Reservation.submit();}else{return false;}&quot;&gt;<br />
function AcceptPoliciesClick(){<br />
if( document.forms[&#39;Reservation&#39;].elements[&#39;AcceptPolicies&#39;].checked ){<br />
document.forms[&#39;Reservation&#39;].elements[&#39;Book&#39;].disabled = false;<br />
}else{<br />
document.forms[&#39;Reservation&#39;].elements[&#39;Book&#39;].disabled = true;<br />
}<br />
}
</p>
<p>
&nbsp;
</p>
<h2>Like a combo select list + textbox</h2>
<p>
Fills in the text box with selection, or you can type it
</p>
<p>
&lt;select name=&quot;pr_location&quot; class=&quot;form_popupmenu&quot; onChange=&quot;dd_151.value = this.options[this.selectedIndex].value;&quot;&gt;
</p>
<p>
the dropdown is static, only the textbox is stored
</p>
<p>
&nbsp;
</p>
",linoj,0,41,webdev,"javascript,forms",Javascript_for_forms
74,"Functions for grouping, sorting, and filtering items","And I just added dropdownitems for making a dropdown list from any items.",3,1166073886,9,,2,"<p>&nbsp;</p> <p> Install into modules/articles/xaruserapi/ </p> <p> Or, I have a simple module named &quot;misctools&quot; that I drop miscellaneous functions into. So in my case, I renamed the functions misctools_* and put them into modules/misctools/xaruserapi/  </p> <p>&nbsp;</p> <h2>groupitems </h2> <p> groupitems.php </p>  <pre>* array $args[&#39;items&#39;] array of item arrays (like as returned by articles getall)<br />* string $args[&#39;field&#39;] name of field to group by<br />* returns array of (&#39;fieldvalue&#39; =&gt; array(items) ) , sorted by key<br />* items with null value in the field are grouped in key &#39;null&#39;<br /><br />function articles_userapi_groupitems( $args )  <br />{<br />     extract($args);<br />     $result = array();<br />     foreach ($items as $key=&gt;$item) {<br />         if ( empty($item[$field]) )<br />             $result[ &#39;null&#39; ][$key] = $item;<br />         else<br />             $result[ $item[$field] ][$key] = $item;<br />     }<br />     ksort($result);<br />     return $result; <br />}<br /> </pre> <h2>sortitems </h2> <p> sortitems.php </p> <pre> * array $args[&#39;items&#39;] array of item arrays (like as returned by articles getall)<br /> * string $args[&#39;field&#39;] name of field to sort on<br /> * string $args[&#39;order&#39;] one of ASC, DESC, [default ASC]<br /> * returns sorted array of items<br /> Note: I do bubble sort by hand because the $field arg is not in scope of a compare function for usort()<br /> TODO: allow &#39;field&#39; to be a list of fields and/or an array of fields<br /><br />function articles_userapi_sortitems( $args ) <br />{<br />    extract($args);<br /> <br />    // Argument check<br />    if (!isset($items) || count($items)&lt;1) {<br />        $msg = xarML(&#39;Invalid #(1) for #(2) function #(3)() in module #(4)&#39;,<br />            &#39;items list&#39;, &#39;user&#39;, &#39;sortitems&#39;,<br />            &#39;Articles&#39;);<br />        xarErrorSet(XAR_USER_EXCEPTION, &#39;BAD_PARAM&#39;,<br />            new SystemException($msg));<br />        return false;<br />    }<br />    if (!isset($field)) {<br />        $msg = xarML(&#39;Invalid #(1) for #(2) function #(3)() in module #(4)&#39;,<br />            &#39;field&#39;, &#39;user&#39;, &#39;sortitems&#39;,<br />            &#39;Articles&#39;);<br />        xarErrorSet(XAR_USER_EXCEPTION, &#39;BAD_PARAM&#39;,<br />            new SystemException($msg));<br />        return false;<br />    }<br /> <br /> <br />    $array_size = count($items);<br /> <br />    if (!empty($order) &amp;&amp; ($order == &#39;DESC&#39;)) {<br />        for($x = 0; $x &lt; $array_size; $x++) {<br />            for($y = 0; $y &lt; $array_size; $y++) {<br />                if($items[$x][$field] &gt; $items[$y][$field]) {<br />                    $hold = $items[$x];<br />                    $items[$x] = $items[$y];<br />                    $items[$y] = $hold;<br />                }<br />            }<br />        }<br />    }<br />    else { // assume ASC<br />        for($x = 0; $x &lt; $array_size; $x++) {<br />            for($y = 0; $y &lt; $array_size; $y++) {<br />                if($items[$x][$field] &lt; $items[$y][$field]) {<br />                    $hold = $items[$x];<br />                    $items[$x] = $items[$y];<br />                    $items[$y] = $hold;<br />                }<br />            }<br />        }<br />    }<br /> <br />    return $items;<br /> }<br /> </pre> <p> Note, this doesnt work on key arrays! (not sure how to do that yet. Maybe should use usort() and a global for the field?) Instead if you are sorting on a key array, convert it to an index array first with array_values() , such as </p>     <pre>&lt;xar:set name=&quot;myitems&quot;&gt;array_values($myitems)&lt;/xar:set&gt;<br />&lt;xar:set name=&quot;myitems&quot;&gt;xarModApiFunc(&#39;articles&#39;,&#39;user&#39;,&#39;sortitems&#39;, array(&#39;items&#39;=&gt;$myitems, &#39;field&#39;=&gt;&#39;myfield&#39;))&lt;/xar:set&gt;<br />&lt;xar:foreach in=&quot;$myitems&quot; value=&quot;$item&quot;&gt;<br />    ....<br />&lt;/xar:foreach&gt; </pre> <p>&nbsp;</p> <h2>filteritems </h2> <p> filteritems.php </p> <pre> * array $args[&#39;items&#39;] array of item arrays (like as returned by articles getall)<br /> * string $args[&#39;field&#39;] name of field to filter on<br /> * string $args[&#39;value&#39;] value to match<br /> * returns array of ( matchitems, otheritems )<br /><br />function articles_userapi_filteritems( $args ) {<br />    extract($args);<br /> <br />    $matchitems = array();<br />    $otheritems = array();<br /> <br />    foreach ($items as $item) {<br />        if ($item[$field] == $value)<br />            $matchitems[] = $item;<br />        else<br />            $otheritems[] = $item;<br />    }<br />    return array( $matchitems, $otheritems );<br /> }<br /> </pre> <p>&nbsp;</p> <h2>dropdownitems</h2> <pre> * flatten a list of items for use in a dropdownlist property<br /> * array $args[&#39;items&#39;] array of item arrays (like as returned by articles getall)<br /> * string $args[&#39;value&#39;] name of field to use for value (default: &quot;key&quot; which is the array key. <br /> Example aternatives: &quot;aid&quot;, &quot;name&quot;. Note should be unique )<br /> * string $args[&#39;field&#39;] name of field to filter on<br /> * string $args[&#39;first&#39;] optional first item (null value)<br /> * returns array of ( itemkey=&gt;fieldvalue )<br /><br />function misctools_userapi_dropdownitems( $args ) {<br />    extract($args);<br /> <br />    if (empty($value)) {<br />        $value = &#39;key&#39;;<br />    }<br />    $list = array();<br />     <br />    if (isset($first)) {<br />        $list[&#39;&#39;] = $first;<br />    }<br />    foreach ($items as $key=&gt;$item) {<br />        if ($value == &#39;key&#39;) {<br />            $list[ $key ] = $item[ $field ];            <br />        }<br />        else {<br />            $list[ $item[ $value ] ] = $item[ $field ];<br />        }<br />    }<br />    return $list;<br />}<br />   </pre> <p> Example: a dropdown list of categories under a root cat id. Plug this into a dropdown list property&#39;s validation function </p> <pre> xarModApiFunc(&#39;misctools&#39;,&#39;user&#39;,&#39;dropdownitems&#39;, <br />     array( &#39;field&#39;=&gt;&#39;name&#39;, <br />     &#39;first&#39;=&gt;&#39;&#39;, <br />     &#39;items&#39;=&gt;xarModApiFunc(&#39;categories&#39;,&#39;user&#39;,&#39;getchildren&#39;, array(&#39;cid&#39;=&gt;36))  )) </pre> <p> Instead of using the CID as the value, lets say you want the cat name as the value, and the cat description as the section name. Further, lets include two cat roots in the selection list. Finally, lets say the property is a Combo Dropdown/Textarea property. The validation may look like this:<br />   </p> <pre>xarModApiFunc(&#39;misctools&#39;,&#39;user&#39;,&#39;dropdownitems&#39;, <br />    array(&#39;field&#39;=&gt;&#39;description&#39;,&#39;value&#39;=&gt;&#39;name&#39;,<br />    &#39;first&#39;=&gt;&#39;Pick one or enter Other...&#39;, <br />    &#39;items&#39;=&gt;xarModApiFunc(&#39;categories&#39;,&#39;user&#39;,&#39;getchildren&#39;, <br />        array(&#39;cids&#39;=&gt;array(87,106))) ))  </pre> <p>&nbsp;</p> <p>&nbsp;</p> ",linoj,2895,37,xaraya,articles,Functions_for_grouping%2C_sorting%2C_and_filtering_items
73,"BAD_DATA | selection selection selection selection","This obscure error might mean creating hooked dynamicdata has failed",3,1165973576,9,,2,"<p> You might see this error on an error page, or maybe somethings just not working and you see this message in your var/logs/log.txt file. </p> <p> It happens to me when creating an item in one module (via api), which has DD hooked. The item gets created, but when the dd create hook is called, that fails. </p> <p> Dec 12 18:52:40 0.95465200 +0.876 [ERROR] Logged error: code: 1 BAD_DATA | selection selection selection selection  </p> <p> This means that 4 dd selects failed, invalid inputs. </p> <p> Tracing it down by disabling my dd properties one at a time, it turns out the four offending ones were all Dropdown List property types. Since I wasnt giving an explicit value for the field, the input validation fails. (Perhaps there are other properties that require an explicit default value too, I don&#39;t know).  </p> <p> The solution: make sure each of the dropdown list properties has a value, and/or  make sure a Default value is specified in its validation.</p><h2>Clearing the Error</h2><p>If you get the error but know its really OK, you can clear it so the user is not confronted with the exception page. For example, I am calling the Articles admin api function to create a new item, and intentionally leaving some hooked DD fields empty (undefined).</p><pre>$itemid = xarModApiFunc(&#39;articles&#39;,&#39;admin&#39;,&#39;create&#39;,<br />    array( &#39;title&#39; =&gt; $title, &#39;summary&#39; =&gt; $summary, &#39;ptid&#39; =&gt; 11));<br />if (!$itemid) {<br />    xarLogMessage(&quot;Error creating item in pubtype 11 : $title&quot;); <br />    return;<br />}<br />// allow hooked dd to fail since we&#39;re leaving it empty<br />if (xarCurrentErrorType()==XAR_USER_EXCEPTION &amp;&amp; xarCurrentErrorID()==&#39;BAD_DATA&#39;) {<br />    xarErrorFree();<br />} <br /></pre><p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> ",linoj,2090,37,xaraya,"dynamic data",BAD_DATA%20%7C%20selection%20selection%20selection%20selection
72,"Xaraya security notes",,3,1165676811,9,,0,"<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
to turn off security checks:
</p>
<p>
there&#39;s an even easier trick (that the installer uses): xarVarSetCached(&#39;installer&#39;,&#39;installing&#39;,1);
</p>
<p>
and then match it with a call to turn security back on
</p>
<p>
xarVarDelCached(&#39;installer,&#39;installing&#39;);) 
</p>
<p>
could be a security risk; if it&#39;s just for an import script that no one has access to besides you, then it should be safe enough
</p>
<p>
Rabbitt​​: ​but yeah, everything between the setting and deleting of it would be free of security restrictions<br />
​[10:11a] Rabbitt: linoj: which in general is a bad idea. If you want to make something free of restrictions, then just remove them the way you would normally - not by bypassing the system but, by using the privileges module to create privileges appropriate to your desired level of freedom<br />
​[10:12a] Rabbitt: by introducing bypasses, you introduce more potentials for holes <br />
</p>
<p>
&nbsp;
</p>
",linoj,0,37,xaraya,security,Xaraya_security_notes
71,"Handling Plain Upload Fields in a Pageform","Xaraya's Dynamic Uploads Property is very flexible allowing multiple methods of attaching files. But in most cases, I just want a file input field (text box plus browse button), and don't want to require users to make the extra click to reveal the uploads box. And then it gets a bit tricky when you allow users to hit the back button, and re-submit with or without specifying a new file name.",3,1165382209,9,,2,"<h2>Just an Upload, Please<br />
</h2>
<p>
First, I often just want to use an &quot;Upload&quot; attach method only, not all the other methods (like Trusted, External, Stored). That&#39;s
usually all that is needed in a typical web app. 
</p>
<p>
To make it from the Uploads property however, you need to dissect
the property template. Unfortunately we can&#39;t override property
templates for single instances, just theme-wide. (Also it uses the &quot;dd_&quot;
prefix, I know you can override that with your own name but don&#39;t know
how to that here). The changes need to be made in the object-specific showform template.<br />
</p>
<p>
If the showform template normally would contain for the full blown uploads property:
</p>
<p>
&lt;xar:data-input property=&quot;$properties[&#39;img&#39;]&quot; /&gt; 
</p>
<p>
It could be replaced with:
</p>
<p>
&lt;xar:set name=&quot;prop&quot;&gt;$properties[&#39;img&#39;]&lt;/xar:set&gt;<br />
&lt;xar:set name=&quot;propid&quot;&gt;&quot;dd_&quot; . $prop-&gt;id . &quot;_attach_upload&quot;&lt;/xar:set&gt;<br />
&lt;xar:set name=&quot;typeid&quot;&gt;&quot;dd_&quot; . $prop-&gt;id . &quot;_attach_type&quot;&lt;/xar:set&gt;<br />
&lt;label for=&quot;$propid&quot; class=&quot;xar-form-label&quot;&gt;Attach Image File: &lt;/label&gt;<br />
&lt;input type=&quot;file&quot; name=&quot;$propid&quot; id=&quot;$propid&quot; /&gt;<br />
&lt;input type=&quot;hidden&quot; name=&quot;MAX_FILE_SIZE&quot; value=&quot;10000000&quot; /&gt;<br />
&lt;input type=&quot;hidden&quot; name=&quot;#$typeid#&quot; id=&quot;#$typeid#&quot; value=&quot;1&quot; /&gt;<br />
&lt;xar:set name=&quot;invalid&quot;&gt;$properties[&#39;img&#39;]-&gt;invalid&lt;/xar:set&gt;<br />
&lt;xar:if condition=&quot;!empty($invalid)&quot;&gt;<br />
&lt;span class=&quot;xar-error&quot;&gt;#$invalid#&lt;/span&gt;<br />
&lt;/xar:if&gt;
</p>
<p>
I&#39;ve gotten this to work without including the attach_type input field. But it&#39;s definately needed in the next case.
</p>
<h2>Let &#39;em Back / Re-submit, please </h2>
<p>
Next problem, let&#39;s say you&#39;ve submitted the form, and hit the back
button. If you browse or enter a new file name to upload, and submit it, the new file gets uploaded and replaces the previous one. 
</p>
<p>
But if you leave the upload field blank and hit submit, you would expect it to revert to the previous one. In fact, a blank value is passed, wiping out the previous one.<br />
</p>
<p>
How does the xar:data-input tag for the property do it? It creates a hidden &quot;Stored&quot; method (7) input tag with value of the previous uploaded file selected. This is generated even if you&#39;ve disabled the Stored method in the property&#39;s validation. The resulting code is something like this:
</p>
<p>
&lt;div id=&quot;dd_170_attach_stored&quot; style=&quot;display: none;&quot;&gt;<br />
&lt;select name=&quot;dd_170_attach_stored[]&quot; id=&quot;dd_170_attach_stored_id&quot; size=&quot;5&quot;&gt;<br />
&lt;option value=&quot;642&quot; selected=&quot;selected&quot;&gt;imports/100_3688.JPG&lt;/option&gt;<br />
&lt;/select&gt;<br />
&lt;/div&gt;<br />
&lt;input type=&quot;hidden&quot; name=&quot;dd_170_attach_type&quot; id=&quot;dd_170_attach_type&quot; value=&quot;7&quot; /
</p>
<p>
Then, when a user specifies a file to upload, javascript changes the attach_type value from 7 to 1, and a new value is submitted in the attach_upload (&lt;input type=&quot;file&quot;) tag.
</p>
<p>
We can do something similar in our dissected snippet. 
</p>
<p>
&lt;xar:set name=&quot;prop&quot;&gt;$properties[&#39;img&#39;]&lt;/xar:set&gt;<br />
<strong>&lt;xar:set name=&quot;stored&quot;&gt;&quot;dd_&quot; . $prop-&gt;id . &quot;_attach_stored&quot;&lt;/xar:set&gt;<br />
&lt;xar:set name=&quot;storedid&quot;&gt;&quot;dd_&quot; . $prop-&gt;id . &quot;_attach_stored_id&quot;&lt;/xar:set&gt;         <br />
&lt;input type=&quot;hidden&quot; name=&quot;#$stored#[]&quot; id=&quot;#$storedid#&quot; value=&quot;#$img_output[&#39;fileId&#39;]#&quot; /&gt;</strong><br />
&lt;xar:set name=&quot;propid&quot;&gt;&quot;dd_&quot; . $prop-&gt;id . &quot;_attach_upload&quot;&lt;/xar:set&gt;<br />
&lt;xar:set name=&quot;typeid&quot;&gt;&quot;dd_&quot; . $prop-&gt;id . &quot;_attach_type&quot;&lt;/xar:set&gt;<br />
&lt;label for=&quot;$propid&quot; class=&quot;xar-form-label&quot;&gt;Attach Image File: &lt;/label&gt;<br />
<strong>&lt;input type=&quot;file&quot; name=&quot;#$propid#&quot; id=&quot;#$propid#&quot; onchange=&quot;javascript:document.getElementById(&#39;#$typeid#&#39;).value = 1;true;&quot; /&gt;</strong><br />
&lt;input type=&quot;hidden&quot; name=&quot;MAX_FILE_SIZE&quot; value=&quot;10000000&quot; /&gt;<br />
&lt;input type=&quot;hidden&quot; name=&quot;#$typeid#&quot; id=&quot;#$typeid#&quot; <strong>value=&quot;7&quot;</strong> /&gt;<br />
&lt;xar:set name=&quot;invalid&quot;&gt;$properties[&#39;img&#39;]-&gt;invalid&lt;/xar:set&gt;<br />
&lt;xar:if condition=&quot;!empty($invalid)&quot;&gt;<br />
&lt;span class=&quot;xar-error&quot;&gt;#$invalid#&lt;/span&gt;<br />
&lt;/xar:if&gt; <br />
</p>
<p>
When you first display the form, the attach_stored field contains the upload file name, and the attach_type is 7, saying to Use the Stored File. But if you change the file input field, the attach_type is changed to 1, saying Upload the File.
</p>
<p>
Pretty neat. Well, kind of messy. But pretty cool none the less.  <br />
</p>
<p>
BTW, the other attach types are 2=External, and 5=Trusted.
</p>
<h2>An Alternative Way</h2>
<p>
Actually, this is starting to look ugly, especially having to know the innards of the Uploads module and property. Its just not what I intended. And I still don&#39;t really get it all, I mean, for example, I have not yet found the php code that actually handles the attach_type input value?!
</p>
<p>
Fortunately I&#39;m doing this with the <a href=""postings/66"">pageform meta-module</a> , so have a lot of flexibility for other approaches.
</p>
<p>
Instead of faking out the uploads property, I just save a copy of the uploaded file id. Then if the user goes back and resubmits an empty filename, we pull the saved value and use that. 
</p>
<p>
Here&#39;s how:
</p>
<p>
In pageform, a form is defined by a Dynamic Data (DD) object. Let&#39;s say our uploads field is named &#39;img&#39; 
</p>
<p>
First, add another Uploads property to the pageform DD object you&#39;re using on that form. Lets calll it &#39;img_save&#39;.
</p>
<p>
Second, we&#39;ll allow the &#39;img&#39; property to get posted empty. Thus we want to ignore the invald validation message from its checkInput. On the pageaction&#39;s validation_php, add this snippet:
</p>
<p>
// dont require value<br />
if (empty($values[&#39;img&#39;])) {<br />
$invalids[&#39;img&#39;] = NULL;<br />
}
</p>
<p>
Third, in the pageaction&#39;s processing_php, add this snippet:
</p>
<p>
if (empty($values[&#39;img&#39;])) {<br />
// resubmitted? then use previous value<br />
$outvalues[&#39;img&#39;] = $values[&#39;img_save&#39;];<br />
$values[&#39;img&#39;] = $values[&#39;img_save&#39;];<br />
}<br />
<br />
else { <br />
// save value (back to input object) in case go back<br />
$values[&#39;img_save&#39;] = $values[&#39;img&#39;];<br />
$outvalues[&#39;img_save&#39;] = $values[&#39;img&#39;];<br />
}<br />
</p>
<p>
In testing I found cases where I need to save a copy of the upload value in the input or output objects. So to be safe we just do it in both.
</p>
<p>
Then the showform needs only contain the tags show first above, repeated here:
</p>
<p>
&lt;xar:set name=&quot;prop&quot;&gt;$properties[&#39;img&#39;]&lt;/xar:set&gt;<br />
&lt;xar:set name=&quot;propid&quot;&gt;&quot;dd_&quot; . $prop-&gt;id . &quot;_attach_upload&quot;&lt;/xar:set&gt;<br />
&lt;xar:set name=&quot;typeid&quot;&gt;&quot;dd_&quot; . $prop-&gt;id . &quot;_attach_type&quot;&lt;/xar:set&gt;<br />
&lt;label for=&quot;$propid&quot; class=&quot;xar-form-label&quot;&gt;Attach Image File: &lt;/label&gt;<br />
&lt;input type=&quot;file&quot; name=&quot;$propid&quot; id=&quot;$propid&quot; /&gt;<br />
&lt;input type=&quot;hidden&quot; name=&quot;MAX_FILE_SIZE&quot; value=&quot;10000000&quot; /&gt;<br />
&lt;input type=&quot;hidden&quot; name=&quot;#$typeid#&quot; id=&quot;#$typeid#&quot; value=&quot;1&quot; /&gt;<br />
&lt;xar:set name=&quot;invalid&quot;&gt;$properties[&#39;img&#39;]-&gt;invalid&lt;/xar:set&gt;<br />
&lt;xar:if condition=&quot;!empty($invalid)&quot;&gt;<br />
&lt;span class=&quot;xar-error&quot;&gt;#$invalid#&lt;/span&gt;<br />
&lt;/xar:if&gt; <br />
</p>
<p>
&nbsp;
</p>
",linoj,3311,37,xaraya,"pageform,uploads,images",Handling_Plain_Upload_Fields_in_a_Pageform
70,"pageform v0.2","updates to pageform",3,1165283412,9,,1,"<p>
&nbsp;
</p>
<p>
<strong>
pageform page type:</strong>
</p>
<p>
data field validation: objects:name:objectid
</p>
<p>
(changed from itemtype to objectid, as itemtype is not unique)
</p>
<p>
&nbsp;
</p>
<p>
hide_back
</p>
<p>
hide_cancel
</p>
<p>
hide_skip
</p>
<p>
&nbsp;
</p>
<p>
reset_php: if no cached object, form will be initialized using this code.
</p>
<p>
Thus, when you do a &#39;back&#39;, reset is not called. But for example if you link to the empty parent page will force a reset.
</p>
<p>
&nbsp;
</p>
<p>
unique_key checkbox: default key is the uid, but if this field is checked, a unique key will be generated each time form is visited. This allows a form to be visited multiple times (even simultaneously) during a session. (This was the default in 0.1) 
</p>
<p>
&nbsp;
</p>
<p>
<strong>
pageaction page type:</strong>
</p>
<p>
return_url
</p>
<p>
dropdownlist with validation:  ;form_url;action_url;cancel_url;back_url;nextform_url
</p>
<p>
default (blank) is same as nextform_url
</p>
<p>
Note form_url will return to the form you just came from. 
</p>
<p>
action_url could result in an infinite loop
</p>
<p>
cancel_url will return to the parent page (verify this!), which if empty resetting the first form 
</p>
<p>
(should we have an &#39;other&#39; and a return_url field?) 
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,12,37,xaraya,pageform,pageform_v0.2
69,"(re)Installing mySQL on iMac","I don't know why but when I ran an OSX automated security update today and restarted my machine, mySQL would no longer start. Here's my notes on re-installing, in case I ever have to do this again (I hope not).",3,1164942028,9,,2,"<p>
If the problem wasn&#39;t caused by the OSX update, then it&#39;s an awful coincidence. I mean, perhaps it was something else and rebooting after the update is what revealed it. I just hope I dont see this again.
</p>
<p>
The symptom was after restarting my iMac, all my SQL databases <em>disappeared</em>! OUCH! My apps did not run, phpMyAdmin didn&#39;t see them. And when I looked in /urs/local/mysql/data/ they weren&#39;t there! Finally, i did a &quot;find&quot; on one of the table names and found my stuff inside a data/ dir under the old SQL (4.x) version, not my current 5x version. Whatever. Perhaps the symlinks got messed up somehow. Perhaps something the way i upgraded from 4 to 5 6 months ago.
</p>
<p>
Long and short of it, I decided to reinstall mySQL. The previous version was 5.0.21, the new one is 5.0.27. Not major, so the binaries should be compatible, eh?
</p>
<p>
Here&#39;s the steps I took
</p>
<ul>
	<li>Backup my databases, I copied the data/ directory I found to a temp location</li>
</ul>
<p>
# sudo cp -rp /PATH/TO/OLD/MYSQL/data ~/
</p>
<p>
use the -p option to preserve the chmod and chown settings
</p>
<p>
&nbsp;
</p>
<ul>
	<li>Shut down myslqd if its running</li>
</ul>
<p>
Click the mySQL icon in System Preferences, and click Stop the mySQL process
</p>
<p>
or, from the command line
</p>
<p>
# mysqladmin -u root -p shutdown 
</p>
<p>
Test that its not running my trying the mysql command (etc) 
</p>
<p>
&nbsp;
</p>
<ul>
	<li>Removed the &quot;library receipt&quot; to ensure the package is a fresh install rather than an update. </li>
</ul>
<p>
# cd /Library/Receipts
</p>
<p>
# rm mysql-[yadda-yadda] 
</p>
<p>
&nbsp;
</p>
<ul>
	<li>Download a fresh copy of mySQL package</li>
</ul>
<p>
from http://dev.mysql.com/downloads/mysql/5.0.html#downloads , find the one for OSX x86
</p>
<p>
the download automatically mounts the package and opens its window. 
</p>
<p>
&nbsp;
</p>
<ul>
	<li>Install the mySQL package</li>
</ul>
<p>
Double click on the icon and go through it.
</p>
<p>
&nbsp;
</p>
<ul>
	<li>Install the StartupItem package too</li>
</ul>
<p>
&nbsp;
</p>
<ul>
	<li>
	Start the mysqld process</li>
</ul>
<p>
From the command line:
</p>
<p>
# sudo /Library/StartupItems/MySQLCOM/MySQLCOM start
</p>
<p>
&nbsp;
</p>
<ul>
	<li>Run a few tests to make sure its running</li>
</ul>
<p>
# mysqladmin version
</p>
<p>
# mysqladm variables 
</p>
<p>
# mysqlshow
</p>
<p>
# mysqlshow mysql
</p>
<p>
&nbsp;
</p>
<ul>
	<li>Set a root password</li>
</ul>
<p>
In a fresh install, by default, the root password is blank.
</p>
<p>
# mysqladmin -u root password  NEWPASSWORD
</p>
<p>
I&#39;m supposed to also do
</p>
<p>
# mysqladmin -u root -h LOCALHOSTNAME password NEWPASSWORD
</p>
<p>
but i get an error: &#39;Host &#39;192.168.1.4&#39; is not allowed to connect to this MySQL server&#39; . I&#39;ll have to look at it later, but since I can access this via phpMyAdmin, I just did it in there (maybe I needed to put quotes around my host name or something like that).
</p>
<p>
by the way, to determine your LOCALHOSTNAME, try this, 
</p>
<p>
mysql&gt; SELECT Host, User FROM mysql.user;
</p>
<p>
and look for the record that has `root&#39; in the `User&#39; column and something other than `localhost&#39; in the `Host&#39; column. <br />
</p>
<p>
&nbsp;
</p>
<ul>
	<li>Delete anonymous accounts</li>
</ul>
<p>
Not everyone may want to do this, but I dont have any anonymous users or apps connecting to the db on my mac.
</p>
<p>
shell&gt; mysql -u root<br />
mysql&gt; DELETE FROM mysql.user WHERE User = &#39;&#39;;<br />
mysql&gt; FLUSH PRIVILEGES;<br />
mysql&gt; quit;
</p>
<p>
&nbsp;
</p>
<ul>
	<li>Restore (copy) the old databases</li>
</ul>
<p>
Don&#39;t just copy everything from the old data/ directory, just copy each of the db subdir&#39;s. So to be safe, do it one at a time.
</p>
<p>
You can sudo this or do it as root, e.g.<br />
</p>
<p>
# cp -rp /PATHTO/OLDMYSQL/data/myname /PATHTO/NEWMYSQL/data/
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,4137,38,xamp,mySQL,%28re%29Installing_mySQL_on_iMac
68,"Reformatting Date and Time","Here's a useful snippet for reformatting date and time strings when you only have a pre-formatted string and don't have the Unix timestamp.",3,1164648125,9,,2,"<p>
Some templates do have have the &quot;luxury&quot; of receiving a Unix timestamp for the date/time of an item (such as article date or calendar item). Rather you are given a preformatted string. This snippet converts the preformatted string to a timestamp using strtotime() so you can reformat it as needed.
</p>
<p>
For formatting options see http://us3.php.net/date 
</p>
<h2>Examples: </h2>
<p>
<strong>From julian/blocks/calevent.xt </strong>
</p>
<p>
&lt;xar:comment&gt; convert mm-dd-yyyy to yyyy-mm-dd and reformat using date( strtotime() ) &lt;/xar:comment&gt;<br />
&lt;xar:set name=&quot;d&quot;&gt;date( &#39;Y-m-d&#39;, strtotime(preg_replace(&quot;/^\s*([0-9]{1,2})[-]+([0-9]{1,2})[-]+([0-9]{1,4})/&quot;, &quot;\\3-\\1-\\2&quot;, $val[&#39;startdate&#39;])) )&lt;/xar:set&gt;
</p>
<p>
xar:comment&gt; format time to hh:mmam (eg 01:12pm) 12-hour time &lt;/xar:comment&gt;<br />
&lt;xar:set name=&quot;t&quot;&gt;date( &#39;g:ia&#39;, strtotime(preg_replace(&quot;/^\s*([0-9]{1,2})[-]+([0-9]{1,2})[-]+([0-9]{1,4})/&quot;, &quot;\\3-\\1-\\2&quot;, $val2[&#39;time&#39;])) )&lt;/xar:set&gt;
</p>
<p>
<strong>From articles/blocks/topitems.xt</strong>
</p>
<p>
&lt;xar:comment&gt; convert mm-dd-yy to Day, Month dd (eg. Monday, June 12&lt;/xar:comment&gt;<br />
&lt;xar:set name=&quot;d&quot;&gt;date( &#39;l, F j&#39;, strtotime(preg_replace(&quot;/^\s*([0-9]{1,2})[-]+([0-9]{1,2})[-]+([0-9]{1,4})/&quot;, &quot;\\3-\\1-\\2&quot;, $item[&#39;value&#39;)) )&lt;/xar:set&gt;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,2695,37,xaraya,"php,date,time",Reformatting_Date_and_Time
67,"Notes on upgrading to X2 - Xaraya 2.x development version","Things change fast, especially in a development version which is some ways is still experimental, or at least, unstable. This is an ongoing log of what I learn, and will be edited as things change.",3,1164217095,9,,0,"<p>
&nbsp;
</p>
<p>
System requirements:
</p>
<ul>
	<li>PHP5 - I just settled on 5.2, since that&#39;s the current one, rather than a previous php5. It seems to work fine (I&#39;m on an iMac/OSX)</li>
</ul>
<p>
Block Layout
</p>
<ul>
	<li>Enclose everything in xar:template tags</li>
</ul>
<p>
&lt;xar:template xmlns:xar=&quot;http://xaraya.com/2004/blocklayout&quot;&gt; 
</p>
<p>
&lt;/xar:template&gt;<br />
</p>
<ul>
	<li>strict xml</li>
</ul>
I use our mtn qatest during commit to check the xml 
<ul>
	<li>no non-numbered entities, e.g. &amp;nbsp;  --&gt; &amp;#160;</li>
</ul>
see table below<br />
<ul>
	<li>no &lt;input....&gt; with the /&gt; at the end</li>
</ul>
<br />
<ul>
	<li>use&lt;xar:attribute tag instead of conditional open tags, eg<br />
	</li>
</ul>
<p>
OLD:<br />
&lt;xar:if condition=&quot;isset($style)&quot;&gt;<br />
    &lt;select name=&quot;#$name#day&quot; id=&quot;#$id#_day&quot; tabindex=&quot;#$tabindex#&quot; onchange=&quot;#$evt_change#&quot; style=&quot;#$style#&quot; &gt;<br />
&lt;xar:else /&gt;<br />
    &lt;select name=&quot;#$name#day&quot; id=&quot;#$id#_day&quot; tabindex=&quot;#$tabindex#&quot; onchange=&quot;#$evt_change#&quot; &gt;<br />
&lt;/xar:if&gt;
</p>
<p>
NEW: <br />
     &lt;select name=&quot;#$name#day&quot; id=&quot;#$id#_day&quot; tabindex=&quot;#$tabindex#&quot; onchange=&quot;#$evt_change#&quot; &gt;<br />
&lt;xar:if condition=&quot;isset($style)&quot;&gt;<br />
    &lt;xar:attribute name=&quot;style&quot;&gt;$style&lt;/xar:attribute&gt;<br />
&lt;/xar:if&gt;<br />
<br />
<br />
</p>
<ul>
	<li>no more using the $_bl variables in templates</li>
</ul>
<br />
<ul>
	<li>no &lt;xar:mlstring&gt; tags</li>
</ul>
Old:<br />
&lt;p&gt;<br />
&lt;xar:ml&gt;<br />
&lt;xar:mlstring&gt;Some text with #(1) and #(2) and #(3).&lt;/xar:mlstring&gt;<br />
&lt;xar:mlvar&gt;$first&lt;/xar:mlvar&gt;<br />
&lt;xar:mlvar&gt;#$second#&lt;/xar:mlvar&gt;<br />
&lt;xar:mlvar&gt;&lt;xar:var name=&quot;third&quot; /&gt;&lt;/xar:mlvar&gt;<br />
&lt;/xar:ml&gt;<br />
Lorem ipsum dolor sit amet, consectetur adipisicing elit....<br />
...<br />
...<br />
... est laborum.<br />
&lt;/p&gt;<br />
New:<br />
&lt;p&gt;<br />
&lt;xar:ml&gt;<br />
Some text with &lt;xar:var name=&quot;first&quot;/&gt; and &lt;xar:var name=&quot;second&quot;/&gt; or &lt;xar:var name=&quot;third&quot;/&gt;.<br />
&lt;/xar:ml&gt;<br />
Lorem ipsum dolor sit amet, consectetur adipisicing elit....<br />
...<br />
...<br />
... est laborum.<br />
&lt;/p&gt;<br />
<br />
<ul>
	<li> <br />
	</li>
</ul>
<p>
For numeric entities, see http://www.w3.org/TR/WD-entities-961125<br />
</p>
<p>
Common Numeric Entities<br />
</p>
<table border=""0"">
	<tbody>
		<tr>
			<td> HTML</td>
			<td> NUMERIC</td>
		</tr>
		<tr>
			<td> &amp;nbsp;</td>
			<td> 
			<pre>
												&amp;#160;<br />
			</pre>
			</td>
		</tr>
		<tr>
			<td> &amp;lt;</td>
			<td> 
			<pre>
												&amp;#60;<br />
			</pre>
			</td>
		</tr>
		<tr>
			<td> &amp;gt;</td>
			<td> 
			<pre>
												&amp;#62;<br />
			</pre>
			</td>
		</tr>
		<tr>
			<td> &amp;emdash;</td>
			<td> 
			<pre>
												&amp;#8212;<br />
			</pre>
			</td>
		</tr>
		<tr>
			<td> &amp;amp;<br />
			</td>
			<td> &amp;#38;<br />
			</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
<p>
&nbsp;
</p>
",linoj,0,37,xaraya,,Notes_on_upgrading_to_X2_-_Xaraya_2.x_development_version
66,"Pageform - a meta-module for xaraya forms","Pageform is a tiny framework for building, validating, and processing forms in Xaraya.  Pageform is built on top of the Xarpages and Dynamicdata modules. (Note: updated for PF v0.2 1/30/07) (Note: updated with xml import of pagetypes 4/3/07)",3,1164141692,9,,2,"<h2>Overview </h2> <p> Using Pageform you can: </p> <ul> 	<li>Organize form pages and actions in sequence</li> 	<li>Define form fields via a DD object</li> 	<li>Utilize custom DD form templates, with alternative layouts<br /> 	</li> 	<li>Utilize built in DD property validation on field values</li> 	<li>Have required fields  	</li> 	<li>Write custom reset, validation and processing for the entire form, via function and/or php snippets</li> 	<li>Provide custom error messages on invalid fields<br /> 	</li> 	<li>Cache form field values so you can return to the form with previous info filled in</li> 	<li>Exposes field details for client side JS validation and preprocessing <br /> 	</li> 	<li>Troubleshoot with debug options</li> </ul> <p> Pageform requires the dynamidata (DD) and xarpages modules (dynamicdata is a core Xaraya module, and xarpages is part of the base package). This document assumes some working knowledge of these modules. </p> <p> Once setup, it&#39;s really not very complicated to use, provided you understand how to use dynamic data and xarpages. In fact, I&#39;ve found it incredibly convenient.  </p> <p> Note: I could have made this its own module, and perhaps might one day, but building on top of xarpages and DD allows us to use many existing features and avoid redundant code. One approach might be to make a module that simply does the install so you dont have to do that manually (as described below).  </p> <h2>How To Use It<br /> </h2> <p> First follow the installation instructions below to create the page types and copy the custom functions. </p> <p> There are two page types: </p> <ul> 	<li>pageform - contains the form</li> 	<li>pageaction - processes the form</li> </ul> <p> You will create an ordered sequence of pageform--pageaction pages. This sequence of pages must be contained as child pages in the xarpages hierarchy under a single parent page (the parent can be empty, however).  </p> <p> For example you might have pages arranged as: </p> <p> intro page (type html)<br /> |<br /> |-------- form page (type pageform)<br /> |<br /> |-------- action page (type pageaction)<br /> |<br /> |-------- results page (type pageform)  </p> <p> Pageform pages present the form. The form is then submitted to a pageaction page, which fetches the Post data, validates the values, and processes the data. If any values are invalid, they are not processed and you&#39;re sent back to the form with error messages.  </p> <p> There are several validation steps followed in sequence: a. fetch and validate using the property&#39;s checkInput method (uses the validations defined in the object&#39;s properties), b. make sure the required fields are not empty, and then c. custom validation php snippet and/or php function call. </p> <p> Once validated, the data can be processed. You may enter short php snippets in the page, or call a php function. </p> <p> Finally, the pageaction redirects to the next pageform page in the sequence. This can be any page type, but if you want the preceeding pageaction to pass along some info, it could be another pageform page so that it has an object to receive the data results. </p> <p> Note, we never actually create a DD object in the database. We just use the itemtype to define the field properties, validations, and input forms. Therefore, you do not need to create an itemid field on these objects.  </p> <p> Briefly, to make a form and process it, you do the following (minimally): </p> <ol> 	<li>Create a DD object defining the properties that make up the fields in your form. <br /> 	</li> 	<li>Create an xarpage that will be the parent of your forms pages (e.g. page type: HTML).</li> 	<li>Create an xarpage to contain your form (page type: pageform), with its &#39;data&#39; field set the dd item type.</li> 	<li>Create an xarpage to contain your action (page type: pageaction), and write some php code to process the data.</li> 	<li>Create an xarpage to show the results (e.g. page type: pageform). </li> </ol> <p> By default, pageform uses the DD showform.xd template. You can provide your own object specific template, such as mytheme/modules/dynamicdata/objects/showform-myobject.xt, to format the form, or to select specific fields to present to the user.  </p> <p> On the pageaction page, if you check the Debug box, it will dump the posted values. </p> <p>&nbsp;</p> <p> <!--pagebreak--> <br /> </p> <h2>Pageform Installation and Setup</h2> <p> These are step-by-step installation instructions. (Sorry it&#39;s not automated, but it&#39;s not so bad. Xarpages has no xml import for page types right now. Just watch out for typos, please, all the field names need to be correct.)  </p> <h3>Install Files</h3> <p> The pageform files are available in the xaraya monotone repository in the xarpages module. Or you can download the files <a href=""var/uploads/File/pageform.zip"">HERE</a>. </p> <ul> 	<li>modules/xarpages/xarfuncapi/pageform.php</li> 	<li>modules/xarpages/xarfuncapi/pageaction.php</li> 	<li>modules/xarpages/xarfuncapi/pageform-helpers.php</li> 	<li>modules/xarpages/xartemplates/page-pageform.xd</li> 	<li>modules/xarpages/xartemplates/page-pageaction.xd</li><li>modules/xarpages/xardata/pageform.xml</li><li>modules/xarpages/xardata/pageaction.xml<br /></li> </ul> <h3> Create Page Type: pageform</h3><p>You can import the xml files, or do it manually.</p><p>To Import:</p><ul><li>use Xarpages &gt; Add page type to add &quot;pageform&quot; type, not the type ID (ptid) </li><li>use DD &gt; Utilities &gt; Import, to create and import the object from the XML</li><li>then edit the objects, and change their &#39;itemtype&#39; to the same itemtype as the page types </li></ul><p>To Create Page Type Manually: </p> <ol> 	<li>&gt; Admin &gt; Content &gt; Xarpages &gt; Add Page Type<br /> 	</li> 	<li>Name: <strong>pageform</strong></li> 	<li>&gt; Add<br /> 	</li> 	<li>&gt; pageform: Modify<br /> 	</li> 	<li>&gt; dynamic data fields: Modify<br /> 	<br /> 	</li> 	<li>Label: <strong>body</strong><br /> 	Property Type: large text area<br /> 	&gt; Update Properties<br /> 	<br /> 	</li> 	<li>Label: <strong>data</strong><br /> 	Property Type: object reference<br /> 	Validation: objects:name:objectid<br /> 	(NOTE: this is changed from v0.1 which used :itemtype)<br /> 	<br /> 	</li> 	<li>Label: <strong>required</strong><br /> 	Property Type: textbox<br /> 	<br /> 	</li> 	<li>Label: <strong>formlayout</strong><br /> 	Property Type: textbox<br /> 	<br /> 	Added with v0.2:<br /> 	<br /> 	</li> 	<li>Label: <strong>reset_php</strong><br /> 	Property Type: large text area<br /> 	<br /> 	</li> 	<li>Label: <strong>always_reset</strong><br /> 	Property Type: checkbox<br /> 	<br /> 	</li> 	<li>Label: <strong>hide_nav</strong><br /> 	Property Type: checkbox<br /> 	</li> 	<li>Label: <strong>hide_cancel</strong><br /> 	Property Type: checkbox</li> 	<li>Label: <strong>hide_back</strong><br /> 	Property Type: checkbox</li> 	<li>Label: <strong>hide_skip</strong><br /> 	Property Type: checkbox<br /> 	<br /> 	</li> 	<li>Label: <strong>submit_label</strong><br /> 	Property Type: textbox<br /> 	</li> </ol> <h3>Create Page Type: pageaction</h3><p>You can import the xml files, or do it manually.</p><p>To Import:</p> <ul><li>use Xarpages &gt; Add page type to add &quot;pageaction&quot; type, not the type ID (ptid) </li><li>use DD &gt; Utilities &gt; Import, to create and import the object from the XML</li><li>then edit the objects, and change their &#39;itemtype&#39; to the same itemtype as the page types </li></ul>  <p>To Create Page Type Manually: <br /></p> <ol> 	<li>&gt; Admin &gt; Content &gt; Xarpages &gt; Add Page Type<br /> 	</li> 	<li>Name: <strong>pageaction</strong></li> 	<li>&gt; Add<br /> 	</li> 	<li>&gt; pageform: Modify<br /> 	</li> 	<li>&gt; dynamic data fields: Modify<br /> 	<br /> 	</li> 	<li>Label: <strong>validation_php</strong><br /> 	Property Type: large text area<br /> 	&gt; Update Properties<br /> 	<br /> 	</li> 	<li>Label: <strong>validation_func</strong><br /> 	Property Type: textbox<br /> 	<br /> 	</li> 	<li>Label: <strong>batch_validations</strong><br /> 	Property Type: checkbox<br /> 	<br /> 	</li> 	<li>Label: <strong>processing_php</strong><br /> 	Property Type: large text area<br /> 	<br /> 	</li> 	<li>Label: <strong>processing_func</strong><br /> 	Property Type: textbox<br /> 	<br /> 	</li> 	<li>Label: <strong>debug</strong><br /> 	Property Type: checkbox<br /> 	<br /> 	</li> 	<li>Label: <strong>dont_execute</strong><br /> 	Property Type: checkbox<br /> 	<br /> 	Added in v0.2:</li> 	<li>Label: <strong>redirect_nav</strong><br /> 	Property Type: Dropdown list<br /> 	Validation: &quot;;form_url;action_url;cancel_url;back_url;nextform_url&quot;<br /> 	</li> </ol> <p>&nbsp;</p> <p> <!--pagebreak--> <br /> </p> <h2>Pageform Reference Manual </h2> <h3>Pageform Page Options<br /> </h3> <p> When creating a new pageform page, you can set the following fields:  </p> <ul> 	<li><strong>body</strong>: contains any body text to display on the page before the form (optional)<br /> 	</li> 	<li><strong>data</strong>: item type of the DD object that defines the field properties on the form (required)<br /> 	</li> 	<li><strong>required</strong>: comma-delimited list of fieldnames that are required and may not be left blank by the user when form is submitted (optional)<br /> 	</li> 	<li><strong>formlayout</strong>: optional alternative layout for the form, in the object&#39;s showform template (optional)</li> 	<li><strong>reset_php</strong>: contains php code snippet to reset any of the field values in the form, executed the first time the pageform is displayed (optional)</li> 	<li><strong>always_reset</strong>: when checked, forces the reset_php code to be executed every time the pageform is displayed (optional)</li> 	<li><strong>hide_nav, hide_cancel, hide_back, hide_skip</strong>: when checked, the corresponding link is not displayed (see pageform.xd template)</li> 	<li><strong>submit_label</strong>: text to use in the submit button (default=&quot;Submit&quot;)</li> </ul> <p> Be sure to specify the  Custom Page Function: <strong>pageform</strong> </p> <p> And position the page under its parent page. </p> <p> If reset_php contains php code, it will be executed (presumably to reset the form values) if no data is already cached for this form. Thus, if you nav to apage/form (where &quot;form&quot; is a pageform), reset_php code is called. But after you submit the form and hit Back link (e.g. now url conains ?pf=123), reset_php is not called. This code has access to $values array (fieldname =&gt; value) which it can modify to preset values. This code can make xaraya api calls, or whatever.  </p> <h3>Pageaction Page Options<br /> </h3> <p> When creating a new pageaction page, you can set the following fields:  </p> <ul> 	<li><strong>validation_php</strong>: contains php code snippet to check the validation of any fields in the form, and set invalid messages</li> 	<li><strong>validation_func</strong>: 	name of php function to call to check the validation of any fields in 	the form, and set invalid messages. Actual function name will be 	pageform_[pagename]_[funcname]</li> 	<li><strong>batch_validations</strong>: when checked, pageaction will go through all the validation checks before returning to the form with error messages</li> 	<li><strong>processing_php</strong>: contains php code snippet to process the form data</li> 	<li><strong>processing_func</strong>: name of php function to call to process the form data. Actual function name will be pageform_[pagename]_[funcname]</li> 	<li><strong>redirect_nav</strong>: choose where the pageaction redirects to after 	it successfully executes (default:nextform_url). For example, set to 	form_url if it should return to the previous form after completion.</li> 	<li><strong>debug</strong>: when checked, dump the form data, invalid messages. and processed data; dont return to form or redirect to next page</li> 	<li><strong>dont_execute</strong>: 	when both debug and dont_execute is checked, do not call any of the php 	snippets or functions, just dump the input data (and invalid messages 	generated by the properties&#39; own checkInput validation)</li> </ul> <p> Be sure to specify the  Custom Page Function: <strong>pageaction</strong> </p> <p> And position the page under its parent page.  </p> <h3>Pageaction Validation Php</h3> <p> The following variables are available to the php snippet in the validation_php field: </p> <ul> 	<li>$values - array of field values posted by the form (fieldname =&gt; value) <br /> 	</li> 	<li>$invalids - array of field invalid messages (fieldname =&gt; invalid)</li> </ul> <p> $values will contain any values posted by the form. </p> <p> $invalids will contain any invalid messages generated by the checkInput() function performed prior to the php snippet. These messages are produced as the result of any property-specific validations on the object itemtype. </p> <p> The php code may change any of the values and/or invalid strings. The php code may call other xaraya api functions.<br /> </p> <p> The snippet may return 0 at any time, indicating the form is Invalid. </p> <p> If the snippet returns 1 or nothing, the the $invalids array is checked for any non-empty values to determine if the form is invalid. If invalid, the user will be returned back to the form.  </p> <p> Note: $inobj is also available to the snippet if you prefer direct access to the input object.  </p> <h3>Pageaction Processing Php</h3> <p> The following variables are available to the php snippet in the processing_php field: </p> <ul> 	<li>$values - array of input field values posted by the form (fieldname =&gt; value) <br /> 	</li> 	<li>$outvalues - array of output field values posted by the form (fieldname =&gt; value) <br /> 	</li> 	<li>$invalids - array of input field invalid messages (fieldname =&gt; invalid)</li> 	<li>$outinvalids - array of output field invalid messages (fieldname =&gt; invalid)</li> </ul> <p> $values will contain any values posted by the form. Fields correspond to the data itemtype in the preceeding pageform page. </p> <p> The php code is expected to set the $outvalues output values as a result of its processing. Field correspond to the data itemtype in the following pageform page.  </p> <p> $invalids should contain empty strings for each field because you wouldn&#39;t get to the procesing stage if any fields were invalid.  </p> <p> If in the course of processing, errors are found in the input values, the php code may perform further validation, and change any of the values and/or invalid string.  </p> <p> The snippet may return 0 at any time, indicating the form is Invalid. </p> <p> The snippet may also set $outinvalids messages if, for example, you want to continue to the next form, but show an invalid message for some fields as well.  </p> <p> If the snippet returns 1 or nothing, the the $invalids array is checked for any non-empty values to determine if the form is invalid. If invalid, the user will be returned back to the form.  </p> <p> Note: $inobj and $outobj are also available to the snippet if you prefer direct access to the input and output objects.  </p> <h3>The Pageaction Functions</h3> <p> If your php snippets are long-ish, it might be better to put them into functions. This is handled by making use of the xarpages module customapi directory. </p> <p> There is one php file that contains the validate and/or processing functions. The actual customapi function is left empty as a dumy function. The other functions should be defined in the same file., and conform to naming conventions: pageform_[pagename]_[funcname]  </p> <p> (If this technique seems a bit kludgey, it&#39;s because had to come up with a solution that let us call functions with an argument list that does not conform to the Xaraya API conventions, and still locate, load, and cache the functions. Again, its actually quite convenient, as the php file acts as a library of related functions.) </p> <p> For example, if your pageaction page is named &quot;myactions&quot;: </p> <ul> 	<li>file is modules/xarpages/xarcustomapi/myactions.php</li> 	<li>loader function is function xarpages_customapi_myactions( $args)</li> 	<li>validate function is pageform_myactions_validate(  &amp;$inobj )</li> 	<li>processing function is pageform_myaction_process( &amp;$inobj, &amp;$outobj )<br /> 	</li> </ul> <p> The post-pended names &quot;validate&quot; and &quot;process&quot; are arbitrary, you can use any names you like. In this case, you would specifiy in the pageaction validation_func field the value &quot;validate&quot;, and the processing_func field the value &quot;process&quot;. Objects are passed by reference so you can modify them in the function.  </p> <p> If you like the convenience of the $values and $invalids arrays (and $outvalues and $outinvalids) your function can call in the beginning,<br /> </p> <p> formaction_obj2arrays( $inobj, $values, $invalids );<br /> </p> <p> and before returning, </p> <p> formaction_arrays2obj( $values, $invalids, $inobj )  </p> <p> See the examples for more info. </p> <p>&nbsp;</p> <h3>Other Things</h3> <p> If you don&#39;t want the string &quot;Invalid&quot; pre-pended to all your invalid messages, you will need to edit the individual property templates for each property type you are using. For example, to fix the textbox property, found in modules/base/xartemplates/properties/showinput-textbox.xd, change it to contain </p> <p> &lt;xar:if condition=&quot;!empty($invalid)&quot;&gt;<br /> &lt;xar:if condition=&quot;substr($invalid,0,8) eq &#39;Invalid &#39;&quot;&gt;<br /> &lt;xar:set name=&quot;invalid&quot;&gt;substr($invalid,8)&lt;/xar:set&gt;<br /> &lt;/xar:if&gt;<br /> &lt;span class=&quot;xar-error&quot;&gt;#$invalid#&lt;/span&gt;<br /> &lt;/xar:if&gt;<br /> </p> <p>&nbsp;</p> <h3>Unique Instances</h3> <p> If you want/need every instance of a page visit to have a unique data cache, you can add another page option, <strong>unique_key</strong> checkbox on both the pageform and pageaction page types. When checked, every time a user visits the form, a unique cache key is generated. For example, if the user has multiple browser windows open and each goes to the form, normally both forms will be populated with previous values from this session, but with <strong>unique_key</strong> each form will have its own data cache.   </p> <p> Note, unique_key was the default behavior in v0.1, but the session cache, limited to 64k, can get filled (especially during testing), so now its an option instead.  </p> <p>&nbsp;</p> <p> <!--pagebreak--> <br /> </p> <h2>Example 1: A Simple Form</h2> <p> In this example we&#39;ll make a simple Add News Article form for submitting an articles module news item. This could be done with a custom admin template in the articles module, but we&#39;ll add an unusual validation check and a bit of processing before creating the item (which would be difficult without extra javascript in the form). </p> <p> <strong>Create form object </strong> </p> <ol> 	<li>&gt; Admin &gt; Content &gt; Dynamic Data &gt; New Dynamic Object Item</li> 	<li>Name: <strong>ex1object</strong><br /> 	&gt; Create</li> 	<li>&gt; ex1object Edit &gt; Modify Dynamic Properties</li> 	<li>Label: title<br /> 	Property Type: text box<br /> 	&gt; Update Properties</li> 	<li>Label: body<br /> 	Property Type: large text area<br /> 	&gt; Update Properties</li> </ol> <p> <strong>Create parent page</strong> </p> <ol> 	<li>&gt; Admin &gt; Xarpages &gt; Add Page</li> 	<li>Page Type: (any, doesnt matter)<br /> 	&gt; Next</li> 	<li>Name: <strong>example1</strong> <br /> 	Status: Empty<br /> 	&gt; Add</li> </ol> <p> <strong>Create form page</strong> </p> <ol> 	<li>&gt; Admin &gt; Xarpages &gt; Add Page</li> 	<li>Page Type: pageform<br /> 	&gt; Next<br /> 	</li> 	<li> Name: <strong>ex1form</strong><br /> 	Custom Page Function: pageform<br /> 	In relation to: example1<br /> 	Position: The first child page<br /> 	Data: ex1object<br /> 	Required: title,body<br /> 	&gt; Add</li> </ol> <p> <strong>Create action page</strong> </p> <ol> 	<li>&gt; Admin &gt; Xarpages &gt; Add Page</li> 	<li>Page Type: pageaction<br /> 	&gt; Next</li> 	<li>Name: <strong>ex1action</strong><br /> 	Custom Page Function: pageaction<br /> 	In relation to: /example1/ex1form<br /> 	Position: Right after, in the same level</li> 	<li>Validation_php: paste the php below<br /> 	</li> 	<li>Processing_php: paste the php below<br /> 	</li> 	<li>Batch_validations: Check</li> 	<li>&gt; Add</li> </ol> <blockquote> 	<p> 	<strong>Validation_php:</strong> 	</p> 	<p> 	if (!stristr($values[&#39;title&#39;], &#39;xaraya&#39;)) {<br /> 	$invalids[&#39;title&#39;] = &quot;Title must contain the word &#39;Xaraya&#39;! Please retry.&quot;;<br /> 	} else {<br /> 	$values[&#39;title&#39;] = ucwords($values[&#39;title&#39;]);<br /> 	} <br /> 	</p> 	<p> 	<strong>Processing_php: </strong> 	</p> 	<p> 	$aid = xarModApiFunc(&#39;articles&#39;,&#39;admin&#39;,&#39;create&#39;,<br /> 	array( &#39;title&#39; =&gt; $values[&#39;title&#39;],<br /> 	&#39;body&#39; =&gt; $values[&#39;body&#39;],<br /> 	&#39;ptid&#39; =&gt; 1 )); 	</p> </blockquote> <p> Try it!! </p> <p> After you successfully submit your form, a new news article should be created. And you&#39;re returned to the home page.  </p> <blockquote> </blockquote> <p> <strong>Create result page</strong> </p> <p> Now we create a more friendly results page.  </p> <ol> 	<li>&gt; Admin &gt; Xarpages &gt; Add Page</li> 	<li>Page Type: pageform<br /> 	&gt; Next<br /> 	</li> 	<li> Name: <strong>ex1result</strong><br /> 	Custom Page Function: pageform<br /> 	In relation to: /example1/ex1action<br /> 	Position: Right after, same level<br /> 	Data: ex1object<br /> 	Formlayout: results<br /> 	&gt; Add</li> 	<li>Now copy modules/dynamicdata/xartemplates/objects/showform.xd to<br /> 	themes/[yourtheme]/modules/dynamicdata/objects/showform-ex1object.xt</li> 	<li>Edit the showform template, bBefore the last &lt;xar:else/&gt; add the following and save the file.<br /> 	</li> </ol> &lt;xar:elseif condition=&quot;$layout eq &#39;results&#39;&quot; /&gt;<br /> &lt;p&gt;Your article is titled: &lt;xar:data-output property=&quot;$properties[&#39;title&#39;]&quot; /&gt;&lt;/p&gt;<br /> &lt;xar:else /&gt;<br /> <p> Try it!   </p> <p> <strong>Notes</strong> </p> <p> To get this example to work for an anonymous user, especially if you did a minimal install of your site, you&#39;ll need to create some privileges under CasualAccess, such as: </p> <ul> 	<li>viewXarpages: Module:Xarpages, Component:Page, Level:Read, PageName:All, PageType:All</li> 	<li>addNews: Module:Articles, Component:Article, Level:Comment, Instances:1:All:Myself:All</li> </ul> <p>&nbsp;</p> <p>&nbsp;</p> <p> <!--pagebreak-->  </p> <h2>Example 2: A Custom Registration Wizard</h2> <p> Consider your site needs only a simplified registration process. The user only needs to specify his email address and a password. Since Xaraya requires a unique username and a display name for each user, we&#39;ll use the email address for both of these (see Note below).  </p> <p> (This time around, i&#39;ll skip some of the obvious detail that was included in Example 1 above.) </p> <ol> 	<li>Create an empty parent page named &quot;<strong>example2</strong>&quot;</li> 	<li>Create a new DD object item, named <strong>ex2object</strong>, with properties:<br /> 	email: E-Mail <br /> 	password: Password Text Box (validation &quot;0:&quot;)<br /> 	password again: Password Text Box (validation &quot;0:&quot;)<br /> 	message: Text Box<br /> 	</li> 	<li>Create a new pageform page, named <strong>ex2form</strong>, as child of example2, with<br /> 	data: ex2object<br /> 	required:email,password,password_again</li> 	<li>Create a new pageaction page, name <strong>ex2action</strong>, after ex2form, with<br /> 	validation_func: validate<br /> 	processing_func: process</li> 	<li>Copy the custom api php file, <strong>ex2action.php</strong>, to modules/xarpages/xarcustomapi/ex2action.php . The file is checked into monotone, or you can <a href=""var/uploads/File/ex2action.zip"">download here</a> .<br /> 	</li> 	<li>Create a new pageform page, name <strong>ex2result</strong>, after ex2action, with<br /> 	data: ex2object</li> 	<li>Create DD object template showform-ex2object.xt, and add the folowing before the &lt;xar:else /&gt;<br /> 	</li> </ol> &lt;xar:elseif condition=&quot;$layout eq &#39;results&#39;&quot; /&gt;<br /> &lt;p&gt;Registration results: &lt;xar:data-output property=&quot;$properties[&#39;message&#39;]&quot; /&gt;&lt;/p&gt;<br /> &lt;xar:else /&gt;<br /> <p> <strong> ex2action.php file:</strong> </p> <p> <a href=""var/uploads/File/ex2action.zip"">DOWNLOAD</a> the file and drop it into your modules/xarpages/xarcustomapi/ directory.<br /> </p> <p>&nbsp;</p> <p> <strong>Notes</strong> </p> <p> For login, you may want to install the authemail module, so users can change their email address and then log in with their updated email address. In that case, the username isn&#39;t really used at all, and maybe should be something other than the email address, perhaps a random number. (See comments in the ex2action_process function).  </p> <p> The default minimum length for the Password Text Box property is 5 characters. You can change it by setting its validation field, such as &quot;3:&quot; for min 3 chars. In this example we set it to zero, and then use the minimum length set in the registration module configuration instead. </p> <p> In this example we do not handle the minimum age set in the registration module configuration. (We&#39;ll leave that as an exercise to the reader...)  </p> <p> To get this example to work for an anonymous user, especially if you did a minimal install of your site, you&#39;ll need to create some privileges under CasualAccess, such as: </p> <ul> 	<li>viewXarpages: Module:Xarpages, Component:Page, Level:Read, PageName:All, PageType:All</li> </ul> <p> You may also change the Roles Edit Profile template, user-user_menu_form.xd . </p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> ",linoj,4565,37,xaraya,"pageform,xarpages,forms",Pageform_-_a_meta-module_for_xaraya_forms
65,"Javascript and Php","Combining server side php code with client side javascript.",3,1162506266,9,,0,"<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<h2>from httpete 11/2/06</h2>
<p>
&lt;xar:if condition=&quot;in_array(39,$cids) || in_array(50,$cids)&quot;&gt;<br />
   &lt;xar:set name=&quot;colnum&quot;&gt;&quot;4&quot;&lt;/xar:set&gt;<br />
&lt;xar:else /&gt;<br />
   &lt;xar:set name=&quot;colnum&quot;&gt;&quot;3&quot;&lt;/xar:set&gt;<br />
&lt;/xar:if&gt;<br />
    <br />
&lt;xar:set name=&quot;jstrigga&quot;&gt;<br />
&quot;var Filter = new tableFilter($(&#39;selector&#39;), $colnum, $(&#39;schedulecontainer&#39;).getElementsByTagName(&#39;table&#39;)[0] );&quot;<br />
&lt;/xar:set&gt;<br />
<br />
&lt;xar:base-include-javascript position=&quot;body&quot; type=&quot;code&quot; code=&quot;$jstrigga&quot; /&gt; 
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,0,41,webdev,"php,javascript",Javascript_and_Php
64,"Monotone for xaraya development","Notes on installing and using the source code repository for Xaraya.",3,1162439438,9,,2,"<p>
&nbsp;
</p>
<h1>Setup</h1>
<h2>Download the program</h2>
<p>
from http://venge.net/monotone
</p>
<p>
I got the osx (universal) version.
</p>
<p>
mv it to /usr/local<br />
chmod +x
</p>
<h2>Download the databases</h2>
<p>
from http://mt.xaraya.com/ 
</p>
<p>
Grab the &quot;Initial download&quot; databases. 
</p>
<p>
I&#39;ll make my project directory ~/xaraya/mtn/ . Uncompress the downloads into there.
</p>
<p>
Create a security key:
</p>
<p>
mtn -d modules.db genkey your@validemail.com <br />
(creates ~/.monotone/keys/your@validemail.com file containing key pair)
</p>
<h2>Setup the scripts </h2>
<p>
download xaraya.rc from http://mt.xaraya.com/ into ~/.monotone
</p>
<p>
Create a script monotonrc something like as follows:
</p>
<p>
qa_location= &quot;/Users/jonathan/xaraya/mtn/qatests/tests/&quot;<br />
dofile(&quot;/Users/jonathan/.monotone/xaraya.rc&quot;)<br />
function get_passphrase(identity)<br />
if (identity == &quot;your@validemail.com&quot;)<br />
then return &quot;secret&quot; end<br />
end <br />
</p>
<p>
get Johnny&#39;s scripts from http://www.xaraya.com/~johnny (i can get you a copy too if these go away):
</p>
<p>
xarpull<br />
xarcomods<br />
xarcothemes
</p>
<p>
And edit the scripts for correct pathnames
</p>
<p>
(I also made a xarcocore for the core db) 
</p>
<h2>Pull most recent branches</h2>
<p>
cd ~/xaraya/mtn 
</p>
<p>
mtn -d core.db pull mt.xaraya.com com.xaraya.core<br />
mtn -d core.db pull mt.xaraya.com com.xaraya.documentation<br />
mtn -d core.db pull mt.xaraya.com com.xaraya.qa.test
</p>
<p>
mtn -d modules.db pull mt.xaraya.com com.xaraya.modules.*<br />
mtn -d themes.db pull mt.xaraya.com com.xaraya.themes.* 
</p>
<p>
or 
</p>
<p>
./xarpull
</p>
<h2>Check out working copies</h2>
<p>
mkdir qatests<br />
mtn -d core.db co -b com.xaraya.qa.tests qatests<br />
mkdir core<br />
mtn -d core.db co -b com.xaraya.core core<br />
./xarcomods<br />
./xarcothemes<br />
</p>
<p>
(first time through, the scripts create the directories).
</p>
<h1>Working and Using</h1>
<p>
Edit you code, then commit it to the local database. But make sure the local db is up to date first from the repository, or you&#39;ll create some splits that will need to be merged.  
</p>
<h2>Refresh Local Copy </h2>
<p>
Pull again
</p>
<p>
./xarpull
</p>
<p>
Update working directory
</p>
<p>
./xarcocore<br />
./xarcomods<br />
./xarcothemes <br />
</p>
<p>
(this time the scrips use &quot;update&quot; command)
</p>
<h2>Commit </h2>
<p>
mtn commit -m &quot;This is my message, <br />
put more lines here,<br />
Bug number&quot; and/specify/file/if/necssary.txt
</p>
<p>
<strong>Divergence</strong>
</p>
<p>
When committing, if my change creates a divergence,  
</p>
<p>
mtn merge
</p>
<p>
To see the diff of the divergence,
</p>
<p>
mtn log --last=2
</p>
<p>
mtn diff file.php -r 1c9239f1d33acc18ca1fa7a40d9c355e86215050 -r c93128f60037cb613771cfa11bc9ea518eb0a401
</p>
<p>
&nbsp;
</p>
<h2>Push</h2>
<p>
Push your local db to the central repository. 
</p>
<p>
mtn -d modules.db push mt.xaraya.com com.xaraya.modules.example<br />
or<br />
mtn -d core.db push mt.xaraya.com com.xaraya.core <br />
</p>
<h2>Bugzilla</h2>
<p>
If one, update the bugzilla posting for this fix.
</p>
<p>
&nbsp;
</p>
<h1>Other</h1>
<p>
<strong>Additional comments</strong>
</p>
<p>
mtn comment --revision=myrevid
</p>
<p>
<strong>
what&#39;s changed</strong>
</p>
<p>
mtn ls changed
</p>
<p>
<strong>accessing a db other than default</strong>
</p>
<p>
may need to specify the key on the command, such as
</p>
<p>
-kjlinowes@xaraya.com 
</p>
<p>
&nbsp;
</p>
<h2>The Manifest (list of files it knows about)</h2>
<p>
<strong>add a new file</strong>
</p>
<p>
mtn add file.nam
</p>
<p>
<strong>status</strong> 
</p>
<p>
mtn ls unknown
</p>
<p>
mtn ls unknown .
</p>
<p>
(dot says look in subdir)
</p>
<p>
mtn ls missing
</p>
<p>
&nbsp;
</p>
<h2>Errors</h2>
<p>
<strong>When committing:</strong>
</p>
<p>
mtn: warning: restriction includes unknown path &#39;path/to/file.name&#39;
</p>
<p>
File isnt in the db, use &#39;mtn add&#39; command.
</p>
<p>
&nbsp;
</p>
<p>
<!--pagebreak-->
</p>
<h2>Setting up Monotone for Other Projects </h2>
<p>
OK, so now we&#39;re all set as a committer to the Xaraya project, using the Xaraya repositories.  Now I want to use monotone for my own web projects. (And for now, just on my local machine. I&#39;ll add the synchronizing over the network later). So this is just the basics as covered in the documentation tutorial.
</p>
<p>
Create a Database<br />
$ cd to the www dir (above all the webroots)<br />
<br />
$ mtn db init --db=&quot;parkerhill.mtn&quot;<br />
<br />
generate key<br />
$ mtn genkey jonathan@parkerhill.com<br />
: enter passphrase<br />
mtn: storing key-pair &#39;jonathan@parkerhill.com&#39; in /Users/jonathan/.monotone/keys/<br />
<br />
define a get_passphrase function so dont have to enter it all the time<br />
(see tutorial pg 23)<br />
<br />
Start a new project as a branch<br />
<br />
$ cd to web root<br />
<br />
- create a workspace, in current dir (dir name blank) with given db name and branch name<br />
$ mtn --db=../parkerhill.mtn --branch=com.parkerhill.mysite setup<br />
<br />
Add Files<br />
from web root<br />
$ mtn add themes/talumbiz<br />
<br />
Check In Changes<br />
$ mtn commit --message=&quot;initial checkin of project&quot;<br />
$ mtn commit --message=&quot;what i did today&quot;<br />
<br />
Where am I?<br />
$ mtn status<br />
$ mtn diff<br />
$ mtn heads<br />
 
</p>
<p>
[Note, the Xaraya qa tests got annoying at this point, so I temporarily comment them out by adding &quot;-- &quot; to the first 2 lines of ~/.monotone/monotonerc . I need to figure out how to make them conditional, or some way to avoid having to use the --rcfile= option every time we run mtn]
</p>
<p>
&nbsp;
</p>
<br />
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,3984,"41,37","webdev,xaraya","monotone,mtn",Monotone_for_xaraya_development
63,"Intro to Dynamic Properties API","Summary of the dynamic properties object api",3,1162220769,9,,0,"<p>
&nbsp;
</p>
<p>
From dynamicdata/class/properties.php
</p>
<h2>class Dynamic_Property_Master</h2>
<p>
<strong>function getProperties($args)</strong>
</p>
<p>
     * Get the dynamic properties of an object<br />
     *<br />
     * @param $args[&#39;objectid&#39;] the object id of the object, or<br />
     * @param $args[&#39;moduleid&#39;] the module id of the object +<br />
     * @param $args[&#39;itemtype&#39;] the itemtype of the object<br />
     * @param $args[&#39;objectref&#39;] a reference to the object to add those properties to (optional)<br />
     * @param $args[&#39;allprops&#39;] skip disabled properties by default<br />
</p>
<p>
<strong>function addProperty($args, &amp;$objectref)</strong>
</p>
<p>
     * Add a dynamic property to an object<br />
     *<br />
     * @param $args[&#39;name&#39;] the name for the dynamic property<br />
     * @param $args[&#39;type&#39;] the type of dynamic property<br />
     * @param $args[&#39;label&#39;] the label for the dynamic property<br />
     * ...<br />
     * @param $objectref a reference to the object to add this property to<br />
</p>
<p>
<strong>function &amp;getProperty($args)</strong>
</p>
<p>
     * Class method to get a new dynamic property of the right type<br />
</p>
<p>
<strong>function createProperty($args)</strong>
</p>
<p>
&nbsp;
</p>
<p>
<strong>function updateProperty($args) </strong>
</p>
<p>
&nbsp;
</p>
<p>
<strong>function deleteProperty($args)</strong>
</p>
<p>
&nbsp;
</p>
<p>
<strong>function getPropertyTypes()</strong>
</p>
<p>
     * Class method listing all defined property types<br />
</p>
<p>
&nbsp;
</p>
<h2>class Dynamic_Property</h2>
<p>
<strong>function getValue()</strong>
</p>
<p>
     * Get the value of this property (= for a particular object item)<br />
     *<br />
     * @returns mixed<br />
     * @return the value for the property<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>function setValue($value)</strong>
</p>
<p>
     * Set the value of this property (= for a particular object item)<br />
     *<br />
     * @param $value the new value for the property
</p>
<p>
&nbsp;
</p>
<p>
<strong>function checkInput($name = &#39;&#39;, $value = null) </strong>
</p>
<p>
     * Check the input value of this property<br />
     *<br />
     * @param $name name of the input field (default is &#39;dd_NN&#39; with NN the property id)<br />
     * @param $value value of the input field (default is retrieved via xarVarFetch())<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>function validateValue($value = null)</strong>
</p>
<p>
     * Validate the value of this property<br />
     *<br />
     * @param $value value of the property (default is the current value)<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>function getItemValue($itemid)</strong>
</p>
<p>
     * Get the value of this property for a particular item (= for object lists)<br />
     *<br />
     * @param $itemid the item id we want the value for<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>function getItemValue($itemid)</strong>
</p>
<p>
&nbsp;
</p>
<p>
<strong>function setItemValue($itemid, $value)</strong>
</p>
<p>
     * Set the value of this property for a particular item (= for object lists)<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>function showInput($args = array())</strong>
</p>
<p>
     * Show an input field for setting/modifying the value of this property<br />
     *<br />
     * @param $args[&#39;name&#39;] name of the field (default is &#39;dd_NN&#39; with NN the property id)<br />
     * @param $args[&#39;value&#39;] value of the field (default is the current value)<br />
     * @param $args[&#39;id&#39;] id of the field<br />
     * @param $args[&#39;tabindex&#39;] tab index of the field<br />
     * @returns string<br />
     * @return string containing the HTML (or other) text to output in the BL template<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>function showOutput($args = array())</strong>
</p>
<p>
     * Show some default output for this property<br />
     *<br />
     * @param $args[&#39;value&#39;] value of the property (default is the current value)<br />
     * @returns string<br />
     * @return string containing the HTML (or other) text to output in the BL template<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>function showLabel($args = array())</strong>
</p>
<p>
     * Show the label for this property<br />
     *<br />
     * @param $args[&#39;label&#39;] label of the property (default is the current label)<br />
     * @param $args[&#39;for&#39;] label id to use for this property (id, name or nothing)<br />
     * @returns string<br />
     * @return string containing the HTML (or other) text to output in the BL template<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>function showHidden($args = array())</strong>
</p>
<p>
     * Show a hidden field for this property<br />
     *<br />
     * @param $args[&#39;name&#39;] name of the field (default is &#39;dd_NN&#39; with NN the property id)<br />
     * @param $args[&#39;value&#39;] value of the field (default is the current value)<br />
     * @param $args[&#39;id&#39;] id of the field<br />
     * @returns string<br />
     * @return string containing the HTML (or other) text to output in the BL template<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>function getBasePropertyInfo()</strong>
</p>
<p>
     * Get the base information for this property.<br />
     *<br />
     * @returns array<br />
     * @return base information for this property<br />
</p>
<p>
        $baseInfo = array(<br />
                          &#39;id&#39;         =&gt; 0,<br />
                          &#39;name&#39;       =&gt; &#39;propertyName&#39;,<br />
                          &#39;label&#39;      =&gt; &#39;Property Label&#39;,<br />
                          &#39;format&#39;     =&gt; &#39;0&#39;,<br />
                          &#39;validation&#39; =&gt; &#39;&#39;,<br />
                          &#39;source&#39;     =&gt; &#39;&#39;,<br />
                          &#39;dependancies&#39; =&gt; &#39;&#39;,    // semi-colon seperated list of files that must be present for this property to be available (optional)<br />
                          &#39;requiresmodule&#39; =&gt; &#39;&#39;, // this module must be available before this property is enabled (optional)<br />
                          &#39;aliases&#39; =&gt; &#39;&#39;,        // If the same property class is reused directly with just different base info, supply the alternate base properties here (optional)<br />
                          &#39;args&#39; =&gt; serialize( array() ),<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>function showValidation($args = array())</strong>
</p>
<p>
     * Show the current validation rule in a specific form for this property type<br />
     *<br />
     * @param $args[&#39;name&#39;] name of the field (default is &#39;dd_NN&#39; with NN the property id)<br />
     * @param $args[&#39;validation&#39;] validation rule (default is the current validation)<br />
     * @param $args[&#39;id&#39;] id of the field<br />
     * @param $args[&#39;tabindex&#39;] tab index of the field<br />
     * @returns string<br />
     * @return string containing the HTML (or other) text to output in the BL template
</p>
<p>
&nbsp;
</p>
<p>
<strong>function updateValidation($args = array())</strong>
</p>
<p>
     * Update the current validation rule in a specific way for this property type<br />
     *<br />
     * @param $args[&#39;name&#39;] name of the field (default is &#39;dd_NN&#39; with NN the property id)<br />
     * @param $args[&#39;validation&#39;] validation rule (default is the current validation)<br />
     * @param $args[&#39;id&#39;] id of the field<br />
     * @returns bool<br />
     * @return bool true if the validation rule could be processed, false otherwise<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>function getModule()</strong>
</p>
<p>
     * Return the module this property belongs to<br />
     *<br />
     * @returns string module name<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>function getTemplate()</strong>
</p>
<p>
    * Return the name this property uses in its templates<br />
    *<br />
    * @returns string template name<br />
 
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,0,37,xaraya,"dynamic data,properties",Intro_to_Dynamic_Properties_API
62,"Managing online ads with phpadsnew","just notes so far, havent tried it",3,1161219075,9,,0,"<p>
&nbsp;
</p>
<p>
http://phpadsnew.com/two/index.html
</p>
<p>
 why?
</p>
<p>
fcd:
</p>
<p>
keyword targeting, geo targeting, hit counting, putting the right number of hits on a given ad
</p>
<p>
&nbsp;
</p>
<p>
Jason:
</p>
<p>
You don&#39;t need a module - just a PHP block will do it
</p>
<p>
If you use the &#39;invokation code&#39; feature, you can literally paste the code into a block and that&#39;s it
</p>
<p>
I tend to use the &#39;source&#39; to target compaigns to specific pages
</p>
<p>
just set a &#39;cached var&#39; anywhere in the page generation, to indicate which section of the site you are on, and then read that var in the block and pass it in as the &#39;source&#39;. Easy peasy.
</p>
<p>
&nbsp;
</p>
<pre>
require(getenv(<span class=""s""><span class=""dl"">&#39;</span><span class=""k"">DOCUMENT_ROOT</span><span class=""dl"">&#39;</span></span>).<span class=""s""><span class=""dl"">&#39;</span><span class=""k"">/banners/phpadsnew.inc.php</span><span class=""dl"">&#39;</span></span>);<br />
 <br />
<span class=""r"">if</span> (!isset(<span class=""gv"">$phpAds_context</span>)) <span class=""gv"">$phpAds_context</span> = array();<br />
<br />
<span class=""rx""><span class=""dl"">//</span></span> <span class=""co"">Loop</span> up to six times<br />
<span class=""r"">for</span>(<span class=""gv"">$i</span>=<span class=""i"">0</span>;<span class=""gv"">$i</span>&lt;=<span class=""i"">5</span>;<span class=""gv"">$i</span>+=<span class=""i"">1</span>) {<br />
   <span class=""rx""><span class=""dl"">//</span></span> <span class=""co"">Display</span> each banner, taking into account the previous banners<br />
   <span class=""gv"">$phpAds_raw</span> = view_raw(<span class=""s""><span class=""dl"">&#39;</span><span class=""k"">zone:17</span><span class=""dl"">&#39;</span></span>, <span class=""i"">0</span>, <span class=""s""><span class=""dl"">&#39;&#39;</span></span>, <span class=""s""><span class=""dl"">&#39;&#39;</span></span>, <span class=""s""><span class=""dl"">&#39;</span><span class=""k"">1</span><span class=""dl"">&#39;</span></span>, <span class=""gv"">$phpAds_context</span>);<br />
   <span class=""r"">if</span> (!empty(<span class=""gv"">$phpAds_raw</span>[<span class=""s""><span class=""dl"">&#39;</span><span class=""k"">html</span><span class=""dl"">&#39;</span></span>])) {<br />
      <span class=""gv"">$phpAds_id</span> = <span class=""gv"">$phpAds_raw</span>[<span class=""s""><span class=""dl"">&#39;</span><span class=""k"">bannerid</span><span class=""dl"">&#39;</span></span>];<br />
      <span class=""gv"">$phpAds_context</span>[] = array(<span class=""s""><span class=""dl"">&#39;</span><span class=""k"">!=</span><span class=""dl"">&#39;</span></span> =&gt; <span class=""gv"">$phpAds_id</span>);<br />
      echo <span class=""s""><span class=""dl"">&#39;</span><span class=""k"">&lt;div style=&quot;margin: 0.5em 0; padding: 0.5em 0; border-bottom: 1px solid #999999; text-align: center;&quot;&gt;</span><span class=""dl"">&#39;</span></span> . <span class=""gv"">$phpAds_raw</span>[<span class=""s""><span class=""dl"">&#39;</span><span class=""k"">html</span><span class=""dl"">&#39;</span></span>] . <span class=""s""><span class=""dl"">&#39;</span><span class=""k"">&lt;/div&gt;</span><span class=""dl"">&#39;</span></span>;<br />
   } <span class=""r"">else</span> {<br />
      <span class=""rx""><span class=""dl"">//</span></span> <span class=""co"">No</span> more banners - exit now<br />
      <span class=""r"">return</span> <span class=""pc"">true</span>;<br />
   }<br />
}
</pre>
<p>
&nbsp;
</p>
<p>
That pasty thing will display up to six banners from zone 17, displaying each banner no more than once. I use it for a 120x60 column of buttons. 
</p>
<p>
just put it into a base/content block, with &#39;php/echo capture&#39; selected, and adjust the parameters to suit.
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,0,41,webdev,"ads,advertising",Managing_online_ads_with_phpadsnew
61,"Google Sitemaps","A step by step how I added Google Sitemaps to this site. ",3,1161127440,9,,2,"<p>
Thanks to Wyome, he created a googlesitemaps theme. It&#39;s probably obvious to anyone what then to do with it, but I&#39;m documenting it anyway.<br />
</p>
<p>
&nbsp;
</p>
<p>
1. Download the googlesitemaps theme. 
</p>
<p>
<a href=""http://wyome.com/index.php?module=articles&amp;func=display&amp;ptid=7&amp;aid=452"">Download it from here</a> 
</p>
<p>
Put the theme into your themes/ directory.
</p>
<p>
&nbsp;
</p>
<p>
2. Modify the templates.
</p>
<p>
For each articles module pubtype,
</p>
<ul>
	<li>create the modules/articles/user-summary-XXX.xt tempate (copy existing one and rename)</li>
	<li>edit the base/user-main.xt to include a &lt;xar:module&gt;  for the pubtype, such as</li>
	<ul>
		<li>&lt;xar:module main=&quot;false&quot; module=&quot;articles&quot; ptid=&quot;9&quot; numitems=&quot;1000&quot; /&gt;</li>
	</ul>
</ul>
<p>
Note, you can also add tags for &lt;changefreq&gt; and &lt;priority&gt; for specific pubtypes (or even specific articles), such as
</p>
<blockquote>
	<pre>
			<em><em>    &lt;<a href=""https://www.google.com/webmasters/sitemaps/docs/en/protocol.html#changefreqdef""> changefreq</a>&gt;monthly&lt;/changefreq&gt;<br />
	&lt;<a href=""https://www.google.com/webmasters/sitemaps/docs/en/protocol.html#prioritydef""> priority</a>&gt;0.8&lt;/priority&gt;</em></em>
	</pre>
</blockquote>
<pre>
And you can add similar templates for other modules (like xarpages). [Add explanation here, once i do it myself]. <br />
</pre>
<p>
&nbsp;
</p>
<p>
3. Install the theme via Admin &gt; Global &gt; Themes
</p>
<p>
&nbsp;
</p>
<p>
4. Tell google
</p>
<p>
Assuming you already have a webmaster tools account on google, go to My Sites and tell it your URL for the sitemaps, e.g.
</p>
<p>
http://www.vaporbase.com/index.php?module=base&amp;theme=googlesitemap
</p>
<p>
&nbsp;
</p>
<p>
REFERENCES
</p>
<ul>
	<li>https://www.google.com/webmasters/sitemaps/docs/en/protocol.html</li>
	<li>http://www.xaraya.com/index.php/release/displaynote/137.html<br />
	</li>
	<li>http://wyome.com/blog/Google_SiteMap<br />
	</li>
	<li>http://wyome.com/index.php?module=articles&amp;func=display&amp;ptid=7&amp;aid=452</li>
</ul>
Note recent announcement between Google, Yahoo! and MSN to adopt this protocol as a web standard. <a href=""http://www.sitemaps.org/"">http://www.sitemaps.org</a>  
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<br />
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,3731,37,xaraya,sitemaps,Google_Sitemaps
59,"Intro to Dynamic Data Objects API","How to create and use dd objects natively. (Article under construction). This is Xar 1.x only.",3,1160414397,9,,2,"<p>
&nbsp;
</p>
<h2>Create Dynamic Object </h2>
<p>
<strong>Define New Object </strong>
</p>
<p>
Admin &gt; Content &gt; Dynamic Data &gt; View Objects, 
</p>
<p>
click New Dynamic Object Item 
</p>
<blockquote>
	<p>
	Name: name of the dd object type<br />
	Label: descriptive name<br />
	Module: Dynamic Data<br />
	Item Type: 0 (will get assigned (?)<br />
	URL Param: itemid (?)<br />
	Max Id: 0 (?)<br />
	Config: (?)<br />
	Alias in short URLs: checked
	</p>
	<p>
	Create 
	</p>
</blockquote>
<p>
<strong>Create Properties</strong>
</p>
<p>
Admin &gt; Content &gt; Dynamic Data &gt; View Objects,
</p>
<p>
click Edit for the item type, then Modify Dynamic Properties
</p>
<p>
First one should always be &quot;Item ID&quot; (even if you dont think you&#39;ll need it, its better to be safe than sorry)
</p>
<blockquote>
	<p>
	Label: itemid<br />
	Property type: Item ID
	</p>
</blockquote>
<p>
then add additional properties as needed
</p>
<p>
&nbsp;
</p>
<h2>Object API</h2>
<p>
Get an empty object of itemtype $itype
</p>
<p>
$object = xarModApiFunc(&#39;dynamicdata&#39;, &#39;user&#39;, &#39;<strong>getobject</strong>&#39;, array(&#39;module&#39;=&gt;&#39;dynamicdata&#39;, &#39;itemtype&#39; =&gt; $itype));
</p>
<p>
&nbsp;
</p>
<p>
Get a saved object, by item id
</p>
<p>
$object = xarModApiFunc(&#39;dynamicdata&#39;, &#39;user&#39;, &#39;<strong>getitem</strong>&#39;, array(&#39;module&#39;=&gt;&#39;dynamicdata&#39;, &#39;itemtype&#39; =&gt; $itype, &#39;itemid&#39; =&gt; $iid, &#39;getobject&#39;=&gt;true )); 
</p>
<p>
&nbsp;
</p>
<p>
Populate fields from POST or GET vars, and check validation
</p>
<p>
$isvalid = $object-&gt;<strong>checkInput</strong>(); 
</p>
<p>
&nbsp;
</p>
<p>
Set the value of property
</p>
<p>
$object2-&gt;properties[&#39;propname&#39;]-&gt;<strong>setValue</strong>( $value );
</p>
<p>
&nbsp;
</p>
<p>
Save object in database and get item id 
</p>
<p>
$iid = $object-&gt;<strong>createItem</strong>(); 
</p>
<p>
&nbsp;
</p>
<p>
Dump object contents to page
</p>
<p>
echo &quot;&lt;pre&gt;&quot;; var_dump($object); echo &quot;&lt;/pre&gt;&quot;;
</p>
<br />
<p>
&nbsp;
</p>
<h2>
Referencing Other Objects</h2>
<p>
When defining an object that refences another object, there are Properties available.
</p>
<p>
<strong>Item Type </strong>
</p>
<p>
My first use-case of this is where I have extended Xarpages with hooked DD, and I&#39;m adding fields. One field to reference an object type associated with that page.
</p>
<p>
Property: Object Reference 
</p>
<p>
Validation: <br />
Which object contains the property to reference:              objects<br />
Which property should be use as the value to DISPLAY?     name<br />
Which property should be used as the value to STORE?      itemtype
</p>
<p>
The funky thing here is while this property is mostly intended to reference specific object instances, I&#39;m using it here against &quot;objects&quot;, so its presenting a list of item types.
</p>
<p>
&nbsp;
</p>
<h1>API Method Reference<br />
</h1>
<h3>Complete list of object api methods (objects.php)<br />
</h3>
<p>
Produced using get_class_methods($object) 
</p>
<pre>
Array<br />
(<br />
[0] =&gt; dynamic_object_master<br />
[1] =&gt; getdatastores<br />
[2] =&gt; property2datastore<br />
[3] =&gt; adddatastore<br />
[4] =&gt; getproperties<br />
[5] =&gt; addproperty<br />
[6] =&gt; getobjects<br />
[7] =&gt; getobjectinfo<br />
[8] =&gt; getobject<br />
[9] =&gt; getobjectlist<br />
[10] =&gt; getobjectinterface<br />
[11] =&gt; createobject<br />
[12] =&gt; updateobject<br />
[13] =&gt; deleteobject<br />
[14] =&gt; jointable<br />
[15] =&gt; dynamic_object<br />
[16] =&gt; getitem<br />
[17] =&gt; checkinput<br />
[18] =&gt; showform<br />
[19] =&gt; showdisplay<br />
[20] =&gt; getfieldvalues<br />
[21] =&gt; getdisplayvalues<br />
[22] =&gt; createitem<br />
[23] =&gt; updateitem<br />
[24] =&gt; deleteitem<br />
[25] =&gt; getnextitemtype<br />
)<br />
</pre>
<p>
&nbsp;
</p>
<h3>function Dynamic_Object_Master($args) <br />
</h3>
<p>
* Default constructor to set the object variables, retrieve the dynamic properties<br />
* and get the corresponding data stores for those properties<br />
*<br />
* @param $args[&#39;objectid&#39;] id of the object you&#39;re looking for, or<br />
* @param $args[&#39;moduleid&#39;] module id of the object to retrieve +<br />
* @param $args[&#39;itemtype&#39;] item type of the object to retrieve, or<br />
* @param $args[&#39;table&#39;] database table to turn into an object<br />
* @param $args[&#39;catid&#39;] categories we&#39;re selecting in (if hooked)<br />
*<br />
* @param $args[&#39;fieldlist&#39;] optional list of properties to use, or<br />
* @param $args[&#39;status&#39;] optional status of the properties to use<br />
* @param $args[&#39;allprops&#39;] skip disabled properties by default<br />
<br />
</p>
<p>
function &amp;getDataStores($reset = false) 
</p>
<p>
* Get the data stores where the dynamic properties of this object are kept<br />
</p>
<p>
function property2datastore(&amp;$property) 
</p>
<p>
* Find the datastore name and type corresponding to the data source of a property<br />
</p>
<p>
function addDataStore($name = &#39;_dynamic_data_&#39;, $type=&#39;data&#39;) 
</p>
<p>
* Add a data store for this object<br />
*<br />
* @param $name the name for the data store<br />
* @param $type the type of data store<br />
</p>
<p>
function &amp;getProperties($args = array()) 
</p>
<p>
* Get the selected dynamic properties for this object<br />
</p>
<p>
function addProperty($args) 
</p>
<p>
* Add a property for this object<br />
*<br />
* @param $args[&#39;name&#39;] the name for the dynamic property (required)<br />
* @param $args[&#39;type&#39;] the type of dynamic property (required)<br />
* @param $args[&#39;label&#39;] the label for the dynamic property<br />
* @param $args[&#39;id&#39;] the id for the dynamic property<br />
* ...<br />
</p>
<p>
function &amp;getObjects() 
</p>
<p>
* Class method to retrieve information about all Dynamic Objects<br />
*<br />
* @returns array<br />
* @return array of object definitions
</p>
<p>
&nbsp;
</p>
<p>
function getObjectInfo($args) 
</p>
<p>
* Class method to retrieve information about a Dynamic Object<br />
*<br />
* @param $args[&#39;objectid&#39;] id of the object you&#39;re looking for, or<br />
* @param $args[&#39;name&#39;] name of the object you&#39;re looking for, or<br />
* @param $args[&#39;moduleid&#39;] module id of the object you&#39;re looking for +<br />
* @param $args[&#39;itemtype&#39;] item type of the object you&#39;re looking for<br />
* @returns array<br />
* @return array containing the name =&gt; value pairs for the object<br />
</p>
<p>
function &amp;getObject($args) 
</p>
<p>
* Class method to retrieve a particular object definition, with sub-classing<br />
* (= the same as creating a new Dynamic Object with itemid = null)<br />
*<br />
* @param $args[&#39;objectid&#39;] id of the object you&#39;re looking for, or<br />
* @param $args[&#39;moduleid&#39;] module id of the object to retrieve +<br />
* @param $args[&#39;itemtype&#39;] item type of the object to retrieve<br />
* @param $args[&#39;classname&#39;] optional classname (e.g. &lt;module&gt;_Dynamic_Object)<br />
* @returns object<br />
* @return the requested object definition
</p>
<p>
&nbsp;
</p>
<p>
function &amp;getObjectList($args)<br />
<br />
* Class method to retrieve a particular object list definition, with sub-classing<br />
* (= the same as creating a new Dynamic Object List)<br />
*<br />
* @param $args[&#39;objectid&#39;] id of the object you&#39;re looking for, or<br />
* @param $args[&#39;moduleid&#39;] module id of the object to retrieve +<br />
* @param $args[&#39;itemtype&#39;] item type of the object to retrieve<br />
* @param $args[&#39;classname&#39;] optional classname (e.g. &lt;module&gt;_Dynamic_Object[_List])<br />
* @returns object<br />
* @return the requested object definition
</p>
<p>
&nbsp;
</p>
<p>
function &amp;getObjectInterface($args) 
</p>
<p>
* Class method to retrieve a particular object interface definition, with sub-classing<br />
* (= the same as creating a new Dynamic Object Interface)<br />
*<br />
* @param $args[&#39;objectid&#39;] id of the object you&#39;re looking for, or<br />
* @param $args[&#39;moduleid&#39;] module id of the object to retrieve +<br />
* @param $args[&#39;itemtype&#39;] item type of the object to retrieve<br />
* @param $args[&#39;classname&#39;] optional classname (e.g. &lt;module&gt;_Dynamic_Object[_Interface])<br />
* @returns object<br />
* @return the requested object definition
</p>
<p>
<br />
function createObject($args)<br />
function updateObject($args)<br />
</p>
<p>
* Class method to create a new type of Dynamic Object<br />
*<br />
* @param $args[&#39;objectid&#39;] id of the object you want to create (optional)<br />
* @param $args[&#39;name&#39;] name of the object to create<br />
* @param $args[&#39;label&#39;] label of the object to create<br />
* @param $args[&#39;moduleid&#39;] module id of the object to create<br />
* @param $args[&#39;itemtype&#39;] item type of the object to create<br />
* @param $args[&#39;urlparam&#39;] URL parameter to use for the object items (itemid, exid, aid, ...)<br />
* @param $args[&#39;maxid&#39;] for purely dynamic objects, the current max. itemid (for import only)<br />
* @param $args[&#39;config&#39;] some configuration for the object (free to define and use)<br />
* @param $args[&#39;isalias&#39;] flag to indicate whether the object name is used as alias for short URLs<br />
* @param $args[&#39;classname&#39;] optional classname (e.g. &lt;module&gt;_Dynamic_Object)<br />
* @returns integer<br />
* @return the object id of the created item<br />
</p>
<p>
&nbsp;
</p>
<p>
function deleteObject($args)
</p>
<p>
* @param $args[&#39;objectid&#39;] id of the object you want to create (optional)<br />
* @param $args[&#39;moduleid&#39;] module id of the object to create<br />
* @param $args[&#39;itemtype&#39;] item type of the object to create<br />
* @param $args[&#39;classname&#39;] optional classname (e.g. &lt;module&gt;_Dynamic_Object)<br />
* @returns integer<br />
</p>
<p>
function joinTable($args) 
</p>
<p>
* Join another database table to this object (unfinished)<br />
* The difference with the &#39;join&#39; argument above is that we don&#39;t create a new datastore for it here,<br />
* and the join is handled directly in the original datastore, i.e. more efficient querying...<br />
*<br />
* @param $args[&#39;table&#39;] the table to join with<br />
* @param $args[&#39;key&#39;] the join key for this table<br />
* @param $args[&#39;fields&#39;] the fields you want from this table<br />
* @param $args[&#39;where&#39;] optional where clauses for those table fields<br />
* @param $args[&#39;andor&#39;] optional combination of those clauses with the ones from the object<br />
* @param $args[&#39;sort&#39;] optional sort order in that table (TODO)<br />
* ...<br />
</p>
<p>
&nbsp;
</p>
<h3>class Dynamic_Object extends Dynamic_Object_Master </h3>
<p>
function Dynamic_Object($args)<br />
</p>
<p>
* Inherits from Dynamic_Object_Master and sets the requested item id<br />
*<br />
* @param $args[&#39;itemid&#39;] item id of the object to get
</p>
<p>
&nbsp;
</p>
<p>
function getItem($args = array()) 
</p>
<p>
* Retrieve the values for this item
</p>
<p>
<br />
<br />
function checkInput($args = array()) 
</p>
<p>
* Check the different input values for this item<br />
</p>
<p>
function showForm($args = array())
</p>
<p>
* Show an input form for this item
</p>
<p>
&nbsp;
</p>
<p>
function showDisplay($args = array()) 
</p>
<p>
* Show an output display for this item<br />
</p>
<p>
&nbsp;
</p>
<p>
function getFieldValues($args = array())
</p>
<p>
* Get the names and values of<br />
</p>
<p>
&nbsp;
</p>
<p>
function getDisplayValues($args = array())
</p>
<p>
* Get the labels and values to include in some output display for this item<br />
</p>
<p>
&nbsp;
</p>
<p>
function createItem($args = array())
</p>
<p>
&nbsp;
</p>
<p>
function updateItem($args = array())
</p>
<p>
&nbsp;
</p>
<p>
function deleteItem($args = array())
</p>
<p>
&nbsp;
</p>
<p>
function getNextItemtype($args = array())
</p>
<p>
* Get the next available item type (for objects that are assigned to the dynamicdata module)<br />
*<br />
* @param $args[&#39;moduleid&#39;] module id for the object<br />
* @returns integer<br />
* @return value of the next item type<br />
</p>
<p>
&nbsp;
</p>
<h3>class Dynamic_Object_List extends Dynamic_Object_Master</h3>
<p>
function Dynamic_Object_List($args)
</p>
<p>
* Inherits from Dynamic_Object_Master and sets the requested item ids, sort, where, ...<br />
*<br />
* @param $args[&#39;itemids&#39;] array of item ids to return<br />
* @param $args[&#39;sort&#39;] sort field(s)<br />
* @param $args[&#39;where&#39;] WHERE clause to be used as part of the selection<br />
* @param $args[&#39;numitems&#39;] number of items to retrieve<br />
* @param $args[&#39;startnum&#39;] start number<br />
</p>
<p>
<br />
function setArguments($args)
</p>
<p>
&nbsp;
</p>
<p>
function setSort($sort)
</p>
<p>
&nbsp;
</p>
<p>
function setWhere($where)
</p>
<p>
&nbsp;
</p>
<p>
function setGroupBy($groupby)
</p>
<p>
&nbsp;
</p>
<p>
function setCategories($catid)
</p>
<p>
&nbsp;
</p>
<p>
function &amp;getItems($args = array())
</p>
<p>
&nbsp;
</p>
<p>
function countItems($args = array())
</p>
<p>
* Count the number of items that match the selection criteria<br />
* Note : this must be called *before* getItems() if you&#39;re using numitems !<br />
</p>
<p>
<br />
function showList($args = array())
</p>
<p>
&nbsp;
</p>
<p>
function showView($args = array())
</p>
<p>
&nbsp;
</p>
<p>
function &amp;getViewValues($args = array())
</p>
<p>
* Get the labels and values to include in some output view for these items<br />
</p>
<p>
&nbsp;
</p>
<p>
function getPager($currenturl = &#39;&#39;)
</p>
<p>
&nbsp;
</p>
<p>
function getNext($args = array())
</p>
<p>
* Get items one at a time, instead of storing everything in $this-&gt;items<br />
</p>
<p>
&nbsp;
</p>
<h2>Sample Object Dump</h2>
<p>
Here&#39;s a dump of a simple object, before and after validation (checkInput):
</p>
<p>
<strong>Before Validation (using print_r)<br />
</strong>
</p>
<pre>
pageform.xt object: dynamic_object Object<br />
(<br />
[objectid] =&gt; 22<br />
[name] =&gt; testdata1<br />
[label] =&gt; <br />
[moduleid] =&gt; 182<br />
[itemtype] =&gt; 7<br />
[urlparam] =&gt; itemid<br />
[maxid] =&gt; 0<br />
[config] =&gt; <br />
[isalias] =&gt; 1<br />
[properties] =&gt; Array<br />
(<br />
[itemid] =&gt; dynamic_itemid_property Object<br />
(<br />
[size] =&gt; 10<br />
[maxlength] =&gt; 30<br />
[id] =&gt; 119<br />
[name] =&gt; itemid<br />
[label] =&gt; itemid<br />
[type] =&gt; 21<br />
[default] =&gt; <br />
[source] =&gt; dynamic_data<br />
[status] =&gt; 1<br />
[order] =&gt; 1<br />
[validation] =&gt; <br />
[datastore] =&gt; _dynamic_data_<br />
[value] =&gt; <br />
[invalid] =&gt; <br />
[_objectid] =&gt; 22<br />
[_moduleid] =&gt; 182<br />
[_itemtype] =&gt; 7<br />
[_itemid] =&gt; <br />
[_items] =&gt; <br />
[min] =&gt; <br />
[max] =&gt; <br />
[regex] =&gt; <br />
)<br />
<br />
[firstname] =&gt; dynamic_textbox_property Object<br />
(<br />
[id] =&gt; 120<br />
[name] =&gt; firstname<br />
[label] =&gt; firstname<br />
[type] =&gt; 2<br />
[default] =&gt; <br />
[source] =&gt; dynamic_data<br />
[status] =&gt; 1<br />
[order] =&gt; 2<br />
[validation] =&gt; 1:<br />
[datastore] =&gt; _dynamic_data_<br />
[value] =&gt; <br />
[invalid] =&gt; <br />
[_objectid] =&gt; 22<br />
[_moduleid] =&gt; 182<br />
[_itemtype] =&gt; 7<br />
[_itemid] =&gt; <br />
[_items] =&gt; <br />
[size] =&gt; 50<br />
[maxlength] =&gt; 254<br />
[min] =&gt; 1<br />
[max] =&gt; <br />
[regex] =&gt; <br />
)<br />
<br />
[lastname] =&gt; dynamic_textbox_property Object<br />
(<br />
[id] =&gt; 121<br />
[name] =&gt; lastname<br />
[label] =&gt; lastname<br />
[type] =&gt; 2<br />
[default] =&gt; <br />
[source] =&gt; dynamic_data<br />
[status] =&gt; 1<br />
[order] =&gt; 3<br />
[validation] =&gt; <br />
[datastore] =&gt; _dynamic_data_<br />
[value] =&gt; <br />
[invalid] =&gt; <br />
[_objectid] =&gt; 22<br />
[_moduleid] =&gt; 182<br />
[_itemtype] =&gt; 7<br />
[_itemid] =&gt; <br />
[_items] =&gt; <br />
[size] =&gt; 50<br />
[maxlength] =&gt; 254<br />
[min] =&gt; <br />
[max] =&gt; <br />
[regex] =&gt; <br />
)<br />
<br />
[emall] =&gt; dynamic_email_property Object<br />
(<br />
[id] =&gt; 122<br />
[name] =&gt; email<br />
[label] =&gt; email<br />
[type] =&gt; 26<br />
[default] =&gt; <br />
[source] =&gt; dynamic_data<br />
[status] =&gt; 1<br />
[order] =&gt; 4<br />
[validation] =&gt; 1:<br />
[datastore] =&gt; _dynamic_data_<br />
[value] =&gt; <br />
[invalid] =&gt; <br />
[_objectid] =&gt; 22<br />
[_moduleid] =&gt; 182<br />
[_itemtype] =&gt; 7<br />
[_itemid] =&gt; <br />
[_items] =&gt; <br />
[size] =&gt; 50<br />
[maxlength] =&gt; 254<br />
[min] =&gt; 1<br />
[max] =&gt; <br />
[regex] =&gt; <br />
)<br />
<br />
)<br />
<br />
[datastores] =&gt; Array<br />
(<br />
[_dynamic_data_] =&gt; dynamic_variabletable_datastore Object<br />
(<br />
[name] =&gt; _dynamic_data_<br />
[type] =&gt; <br />
[fields] =&gt; Array<br />
(<br />
[119] =&gt; dynamic_itemid_property Object<br />
(<br />
[size] =&gt; 10<br />
[maxlength] =&gt; 30<br />
[id] =&gt; 119<br />
[name] =&gt; itemid<br />
[label] =&gt; itemid<br />
[type] =&gt; 21<br />
[default] =&gt; <br />
[source] =&gt; dynamic_data<br />
[status] =&gt; 1<br />
[order] =&gt; 1<br />
[validation] =&gt; <br />
[datastore] =&gt; _dynamic_data_<br />
[value] =&gt; <br />
[invalid] =&gt; <br />
[_objectid] =&gt; 22<br />
[_moduleid] =&gt; 182<br />
[_itemtype] =&gt; 7<br />
[_itemid] =&gt; <br />
[_items] =&gt; <br />
[min] =&gt; <br />
[max] =&gt; <br />
[regex] =&gt; <br />
)<br />
<br />
[120] =&gt; dynamic_textbox_property Object<br />
(<br />
[id] =&gt; 120<br />
[name] =&gt; firstname<br />
[label] =&gt; firstname<br />
[type] =&gt; 2<br />
[default] =&gt; <br />
[source] =&gt; dynamic_data<br />
[status] =&gt; 1<br />
[order] =&gt; 2<br />
[validation] =&gt; 1:<br />
[datastore] =&gt; _dynamic_data_<br />
[value] =&gt; <br />
[invalid] =&gt; <br />
[_objectid] =&gt; 22<br />
[_moduleid] =&gt; 182<br />
[_itemtype] =&gt; 7<br />
[_itemid] =&gt; <br />
[_items] =&gt; <br />
[size] =&gt; 50<br />
[maxlength] =&gt; 254<br />
[min] =&gt; 1<br />
[max] =&gt; <br />
[regex] =&gt; <br />
)<br />
<br />
[121] =&gt; dynamic_textbox_property Object<br />
(<br />
[id] =&gt; 121<br />
[name] =&gt; lastname<br />
[label] =&gt; lastname<br />
[type] =&gt; 2<br />
[default] =&gt; <br />
[source] =&gt; dynamic_data<br />
[status] =&gt; 1<br />
[order] =&gt; 3<br />
[validation] =&gt; <br />
[datastore] =&gt; _dynamic_data_<br />
[value] =&gt; <br />
[invalid] =&gt; <br />
[_objectid] =&gt; 22<br />
[_moduleid] =&gt; 182<br />
[_itemtype] =&gt; 7<br />
[_itemid] =&gt; <br />
[_items] =&gt; <br />
[size] =&gt; 50<br />
[maxlength] =&gt; 254<br />
[min] =&gt; <br />
[max] =&gt; <br />
[regex] =&gt; <br />
)<br />
<br />
[122] =&gt; dynamic_email_property Object<br />
(<br />
[id] =&gt; 122<br />
[name] =&gt; email<br />
[label] =&gt; email<br />
[type] =&gt; 26<br />
[default] =&gt; <br />
[source] =&gt; dynamic_data<br />
[status] =&gt; 1<br />
[order] =&gt; 4<br />
[validation] =&gt; 1:<br />
[datastore] =&gt; _dynamic_data_<br />
[value] =&gt; <br />
[invalid] =&gt; <br />
[_objectid] =&gt; 22<br />
[_moduleid] =&gt; 182<br />
[_itemtype] =&gt; 7<br />
[_itemid] =&gt; <br />
[_items] =&gt; <br />
[size] =&gt; 50<br />
[maxlength] =&gt; 254<br />
[min] =&gt; 1<br />
[max] =&gt; <br />
[regex] =&gt; <br />
)<br />
<br />
)<br />
<br />
[primary] =&gt; 119<br />
[sort] =&gt; Array<br />
(<br />
)<br />
<br />
[where] =&gt; Array<br />
(<br />
)<br />
<br />
[groupby] =&gt; Array<br />
(<br />
)<br />
<br />
[join] =&gt; Array<br />
(<br />
)<br />
<br />
[_itemids] =&gt; <br />
[cache] =&gt; 0<br />
)<br />
<br />
)<br />
<br />
[fieldlist] =&gt; Array<br />
(<br />
)<br />
<br />
[status] =&gt; <br />
[layout] =&gt; default<br />
[template] =&gt; testdata1<br />
[tplmodule] =&gt; dynamicdata<br />
[urlmodule] =&gt; <br />
[viewfunc] =&gt; view<br />
[primary] =&gt; itemid<br />
[secondary] =&gt; <br />
[filter] =&gt; <br />
[upload] =&gt; <br />
[fieldprefix] =&gt; <br />
[itemid] =&gt; <br />
[module] =&gt; dynamicdata<br />
)
</pre>
<p>
&nbsp;
</p>
<p>
<strong>After Validation: (using var_dump)</strong>
</p>
<pre>
object(dynamic_object)(25) {<br />
[&quot;objectid&quot;]=&gt;<br />
string(2) &quot;22&quot;<br />
[&quot;name&quot;]=&gt;<br />
string(9) &quot;testdata1&quot;<br />
[&quot;label&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;moduleid&quot;]=&gt;<br />
string(3) &quot;182&quot;<br />
[&quot;itemtype&quot;]=&gt;<br />
string(1) &quot;7&quot;<br />
[&quot;urlparam&quot;]=&gt;<br />
string(6) &quot;itemid&quot;<br />
[&quot;maxid&quot;]=&gt;<br />
string(1) &quot;0&quot;<br />
[&quot;config&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;isalias&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;properties&quot;]=&gt;<br />
array(4) {<br />
[&quot;itemid&quot;]=&gt;<br />
&amp;object(dynamic_itemid_property)(23) {<br />
[&quot;size&quot;]=&gt;<br />
int(10)<br />
[&quot;maxlength&quot;]=&gt;<br />
int(30)<br />
[&quot;id&quot;]=&gt;<br />
string(3) &quot;119&quot;<br />
[&quot;name&quot;]=&gt;<br />
string(6) &quot;itemid&quot;<br />
[&quot;label&quot;]=&gt;<br />
string(6) &quot;itemid&quot;<br />
[&quot;type&quot;]=&gt;<br />
string(2) &quot;21&quot;<br />
[&quot;default&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;source&quot;]=&gt;<br />
string(12) &quot;dynamic_data&quot;<br />
[&quot;status&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;order&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;validation&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;datastore&quot;]=&gt;<br />
string(14) &quot;_dynamic_data_&quot;<br />
[&quot;value&quot;]=&gt;<br />
int(0)<br />
[&quot;invalid&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;_objectid&quot;]=&gt;<br />
string(2) &quot;22&quot;<br />
[&quot;_moduleid&quot;]=&gt;<br />
string(3) &quot;182&quot;<br />
[&quot;_itemtype&quot;]=&gt;<br />
string(1) &quot;7&quot;<br />
[&quot;_itemid&quot;]=&gt;<br />
&amp;NULL<br />
[&quot;_items&quot;]=&gt;<br />
NULL<br />
[&quot;min&quot;]=&gt;<br />
NULL<br />
[&quot;max&quot;]=&gt;<br />
NULL<br />
[&quot;regex&quot;]=&gt;<br />
NULL<br />
[&quot;fieldname&quot;]=&gt;<br />
string(6) &quot;dd_119&quot;<br />
}<br />
[&quot;firstname&quot;]=&gt;<br />
&amp;object(dynamic_textbox_property)(23) {<br />
[&quot;id&quot;]=&gt;<br />
string(3) &quot;120&quot;<br />
[&quot;name&quot;]=&gt;<br />
string(9) &quot;firstname&quot;<br />
[&quot;label&quot;]=&gt;<br />
string(9) &quot;firstname&quot;<br />
[&quot;type&quot;]=&gt;<br />
string(1) &quot;2&quot;<br />
[&quot;default&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;source&quot;]=&gt;<br />
string(12) &quot;dynamic_data&quot;<br />
[&quot;status&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;order&quot;]=&gt;<br />
string(1) &quot;2&quot;<br />
[&quot;validation&quot;]=&gt;<br />
string(2) &quot;1:&quot;<br />
[&quot;datastore&quot;]=&gt;<br />
string(14) &quot;_dynamic_data_&quot;<br />
[&quot;value&quot;]=&gt;<br />
NULL<br />
[&quot;invalid&quot;]=&gt;<br />
string(41) &quot;text : must be at least 1 characters long&quot;<br />
[&quot;_objectid&quot;]=&gt;<br />
string(2) &quot;22&quot;<br />
[&quot;_moduleid&quot;]=&gt;<br />
string(3) &quot;182&quot;<br />
[&quot;_itemtype&quot;]=&gt;<br />
string(1) &quot;7&quot;<br />
[&quot;_itemid&quot;]=&gt;<br />
&amp;NULL<br />
[&quot;_items&quot;]=&gt;<br />
NULL<br />
[&quot;size&quot;]=&gt;<br />
int(50)<br />
[&quot;maxlength&quot;]=&gt;<br />
int(254)<br />
[&quot;min&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;max&quot;]=&gt;<br />
NULL<br />
[&quot;regex&quot;]=&gt;<br />
NULL<br />
[&quot;fieldname&quot;]=&gt;<br />
string(6) &quot;dd_120&quot;<br />
}<br />
[&quot;lastname&quot;]=&gt;<br />
&amp;object(dynamic_textbox_property)(23) {<br />
[&quot;id&quot;]=&gt;<br />
string(3) &quot;121&quot;<br />
[&quot;name&quot;]=&gt;<br />
string(8) &quot;lastname&quot;<br />
[&quot;label&quot;]=&gt;<br />
string(8) &quot;lastname&quot;<br />
[&quot;type&quot;]=&gt;<br />
string(1) &quot;2&quot;<br />
[&quot;default&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;source&quot;]=&gt;<br />
string(12) &quot;dynamic_data&quot;<br />
[&quot;status&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;order&quot;]=&gt;<br />
string(1) &quot;3&quot;<br />
[&quot;validation&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;datastore&quot;]=&gt;<br />
string(14) &quot;_dynamic_data_&quot;<br />
[&quot;value&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;invalid&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;_objectid&quot;]=&gt;<br />
string(2) &quot;22&quot;<br />
[&quot;_moduleid&quot;]=&gt;<br />
string(3) &quot;182&quot;<br />
[&quot;_itemtype&quot;]=&gt;<br />
string(1) &quot;7&quot;<br />
[&quot;_itemid&quot;]=&gt;<br />
&amp;NULL<br />
[&quot;_items&quot;]=&gt;<br />
NULL<br />
[&quot;size&quot;]=&gt;<br />
int(50)<br />
[&quot;maxlength&quot;]=&gt;<br />
int(254)<br />
[&quot;min&quot;]=&gt;<br />
NULL<br />
[&quot;max&quot;]=&gt;<br />
NULL<br />
[&quot;regex&quot;]=&gt;<br />
NULL<br />
[&quot;fieldname&quot;]=&gt;<br />
string(6) &quot;dd_121&quot;<br />
}<br />
[&quot;email&quot;]=&gt;<br />
&amp;object(dynamic_email_property)(23) {<br />
[&quot;id&quot;]=&gt;<br />
string(3) &quot;122&quot;<br />
[&quot;name&quot;]=&gt;<br />
string(5) &quot;email&quot;<br />
[&quot;label&quot;]=&gt;<br />
string(5) &quot;email&quot;<br />
[&quot;type&quot;]=&gt;<br />
string(2) &quot;26&quot;<br />
[&quot;default&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;source&quot;]=&gt;<br />
string(12) &quot;dynamic_data&quot;<br />
[&quot;status&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;order&quot;]=&gt;<br />
string(1) &quot;4&quot;<br />
[&quot;validation&quot;]=&gt;<br />
string(2) &quot;1:&quot;<br />
[&quot;datastore&quot;]=&gt;<br />
string(14) &quot;_dynamic_data_&quot;<br />
[&quot;value&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;invalid&quot;]=&gt;<br />
string(43) &quot;E-Mail : must be at least 1 characters long&quot;<br />
[&quot;_objectid&quot;]=&gt;<br />
string(2) &quot;22&quot;<br />
[&quot;_moduleid&quot;]=&gt;<br />
string(3) &quot;182&quot;<br />
[&quot;_itemtype&quot;]=&gt;<br />
string(1) &quot;7&quot;<br />
[&quot;_itemid&quot;]=&gt;<br />
&amp;NULL<br />
[&quot;_items&quot;]=&gt;<br />
NULL<br />
[&quot;size&quot;]=&gt;<br />
int(50)<br />
[&quot;maxlength&quot;]=&gt;<br />
int(254)<br />
[&quot;min&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;max&quot;]=&gt;<br />
NULL<br />
[&quot;regex&quot;]=&gt;<br />
NULL<br />
[&quot;fieldname&quot;]=&gt;<br />
string(6) &quot;dd_122&quot;<br />
}<br />
}<br />
[&quot;datastores&quot;]=&gt;<br />
array(1) {<br />
[&quot;_dynamic_data_&quot;]=&gt;<br />
&amp;object(dynamic_variabletable_datastore)(10) {<br />
[&quot;name&quot;]=&gt;<br />
string(14) &quot;_dynamic_data_&quot;<br />
[&quot;type&quot;]=&gt;<br />
NULL<br />
[&quot;fields&quot;]=&gt;<br />
array(4) {<br />
[119]=&gt;<br />
&amp;object(dynamic_itemid_property)(23) {<br />
[&quot;size&quot;]=&gt;<br />
int(10)<br />
[&quot;maxlength&quot;]=&gt;<br />
int(30)<br />
[&quot;id&quot;]=&gt;<br />
string(3) &quot;119&quot;<br />
[&quot;name&quot;]=&gt;<br />
string(6) &quot;itemid&quot;<br />
[&quot;label&quot;]=&gt;<br />
string(6) &quot;itemid&quot;<br />
[&quot;type&quot;]=&gt;<br />
string(2) &quot;21&quot;<br />
[&quot;default&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;source&quot;]=&gt;<br />
string(12) &quot;dynamic_data&quot;<br />
[&quot;status&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;order&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;validation&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;datastore&quot;]=&gt;<br />
string(14) &quot;_dynamic_data_&quot;<br />
[&quot;value&quot;]=&gt;<br />
int(0)<br />
[&quot;invalid&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;_objectid&quot;]=&gt;<br />
string(2) &quot;22&quot;<br />
[&quot;_moduleid&quot;]=&gt;<br />
string(3) &quot;182&quot;<br />
[&quot;_itemtype&quot;]=&gt;<br />
string(1) &quot;7&quot;<br />
[&quot;_itemid&quot;]=&gt;<br />
&amp;NULL<br />
[&quot;_items&quot;]=&gt;<br />
NULL<br />
[&quot;min&quot;]=&gt;<br />
NULL<br />
[&quot;max&quot;]=&gt;<br />
NULL<br />
[&quot;regex&quot;]=&gt;<br />
NULL<br />
[&quot;fieldname&quot;]=&gt;<br />
string(6) &quot;dd_119&quot;<br />
}<br />
[120]=&gt;<br />
&amp;object(dynamic_textbox_property)(23) {<br />
[&quot;id&quot;]=&gt;<br />
string(3) &quot;120&quot;<br />
[&quot;name&quot;]=&gt;<br />
string(9) &quot;firstname&quot;<br />
[&quot;label&quot;]=&gt;<br />
string(9) &quot;firstname&quot;<br />
[&quot;type&quot;]=&gt;<br />
string(1) &quot;2&quot;<br />
[&quot;default&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;source&quot;]=&gt;<br />
string(12) &quot;dynamic_data&quot;<br />
[&quot;status&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;order&quot;]=&gt;<br />
string(1) &quot;2&quot;<br />
[&quot;validation&quot;]=&gt;<br />
string(2) &quot;1:&quot;<br />
[&quot;datastore&quot;]=&gt;<br />
string(14) &quot;_dynamic_data_&quot;<br />
[&quot;value&quot;]=&gt;<br />
NULL<br />
[&quot;invalid&quot;]=&gt;<br />
string(41) &quot;text : must be at least 1 characters long&quot;<br />
[&quot;_objectid&quot;]=&gt;<br />
string(2) &quot;22&quot;<br />
[&quot;_moduleid&quot;]=&gt;<br />
string(3) &quot;182&quot;<br />
[&quot;_itemtype&quot;]=&gt;<br />
string(1) &quot;7&quot;<br />
[&quot;_itemid&quot;]=&gt;<br />
&amp;NULL<br />
[&quot;_items&quot;]=&gt;<br />
NULL<br />
[&quot;size&quot;]=&gt;<br />
int(50)<br />
[&quot;maxlength&quot;]=&gt;<br />
int(254)<br />
[&quot;min&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;max&quot;]=&gt;<br />
NULL<br />
[&quot;regex&quot;]=&gt;<br />
NULL<br />
[&quot;fieldname&quot;]=&gt;<br />
string(6) &quot;dd_120&quot;<br />
}<br />
[121]=&gt;<br />
&amp;object(dynamic_textbox_property)(23) {<br />
[&quot;id&quot;]=&gt;<br />
string(3) &quot;121&quot;<br />
[&quot;name&quot;]=&gt;<br />
string(8) &quot;lastname&quot;<br />
[&quot;label&quot;]=&gt;<br />
string(8) &quot;lastname&quot;<br />
[&quot;type&quot;]=&gt;<br />
string(1) &quot;2&quot;<br />
[&quot;default&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;source&quot;]=&gt;<br />
string(12) &quot;dynamic_data&quot;<br />
[&quot;status&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;order&quot;]=&gt;<br />
string(1) &quot;3&quot;<br />
[&quot;validation&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;datastore&quot;]=&gt;<br />
string(14) &quot;_dynamic_data_&quot;<br />
[&quot;value&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;invalid&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;_objectid&quot;]=&gt;<br />
string(2) &quot;22&quot;<br />
[&quot;_moduleid&quot;]=&gt;<br />
string(3) &quot;182&quot;<br />
[&quot;_itemtype&quot;]=&gt;<br />
string(1) &quot;7&quot;<br />
[&quot;_itemid&quot;]=&gt;<br />
&amp;NULL<br />
[&quot;_items&quot;]=&gt;<br />
NULL<br />
[&quot;size&quot;]=&gt;<br />
int(50)<br />
[&quot;maxlength&quot;]=&gt;<br />
int(254)<br />
[&quot;min&quot;]=&gt;<br />
NULL<br />
[&quot;max&quot;]=&gt;<br />
NULL<br />
[&quot;regex&quot;]=&gt;<br />
NULL<br />
[&quot;fieldname&quot;]=&gt;<br />
string(6) &quot;dd_121&quot;<br />
}<br />
[122]=&gt;<br />
&amp;object(dynamic_email_property)(23) {<br />
[&quot;id&quot;]=&gt;<br />
string(3) &quot;122&quot;<br />
[&quot;name&quot;]=&gt;<br />
string(5) &quot;email&quot;<br />
[&quot;label&quot;]=&gt;<br />
string(5) &quot;email&quot;<br />
[&quot;type&quot;]=&gt;<br />
string(2) &quot;26&quot;<br />
[&quot;default&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;source&quot;]=&gt;<br />
string(12) &quot;dynamic_data&quot;<br />
[&quot;status&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;order&quot;]=&gt;<br />
string(1) &quot;4&quot;<br />
[&quot;validation&quot;]=&gt;<br />
string(2) &quot;1:&quot;<br />
[&quot;datastore&quot;]=&gt;<br />
string(14) &quot;_dynamic_data_&quot;<br />
[&quot;value&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;invalid&quot;]=&gt;<br />
string(43) &quot;E-Mail : must be at least 1 characters long&quot;<br />
[&quot;_objectid&quot;]=&gt;<br />
string(2) &quot;22&quot;<br />
[&quot;_moduleid&quot;]=&gt;<br />
string(3) &quot;182&quot;<br />
[&quot;_itemtype&quot;]=&gt;<br />
string(1) &quot;7&quot;<br />
[&quot;_itemid&quot;]=&gt;<br />
&amp;NULL<br />
[&quot;_items&quot;]=&gt;<br />
NULL<br />
[&quot;size&quot;]=&gt;<br />
int(50)<br />
[&quot;maxlength&quot;]=&gt;<br />
int(254)<br />
[&quot;min&quot;]=&gt;<br />
string(1) &quot;1&quot;<br />
[&quot;max&quot;]=&gt;<br />
NULL<br />
[&quot;regex&quot;]=&gt;<br />
NULL<br />
[&quot;fieldname&quot;]=&gt;<br />
string(6) &quot;dd_122&quot;<br />
}<br />
}<br />
[&quot;primary&quot;]=&gt;<br />
int(119)<br />
[&quot;sort&quot;]=&gt;<br />
array(0) {<br />
}<br />
[&quot;where&quot;]=&gt;<br />
array(0) {<br />
}<br />
[&quot;groupby&quot;]=&gt;<br />
array(0) {<br />
}<br />
[&quot;join&quot;]=&gt;<br />
array(0) {<br />
}<br />
[&quot;_itemids&quot;]=&gt;<br />
NULL<br />
[&quot;cache&quot;]=&gt;<br />
int(0)<br />
}<br />
}<br />
[&quot;fieldlist&quot;]=&gt;<br />
array(0) {<br />
}<br />
[&quot;status&quot;]=&gt;<br />
NULL<br />
[&quot;layout&quot;]=&gt;<br />
string(7) &quot;default&quot;<br />
[&quot;template&quot;]=&gt;<br />
string(9) &quot;testdata1&quot;<br />
[&quot;tplmodule&quot;]=&gt;<br />
string(11) &quot;dynamicdata&quot;<br />
[&quot;urlmodule&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;viewfunc&quot;]=&gt;<br />
string(4) &quot;view&quot;<br />
[&quot;primary&quot;]=&gt;<br />
string(6) &quot;itemid&quot;<br />
[&quot;secondary&quot;]=&gt;<br />
NULL<br />
[&quot;filter&quot;]=&gt;<br />
NULL<br />
[&quot;upload&quot;]=&gt;<br />
bool(false)<br />
[&quot;fieldprefix&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;itemid&quot;]=&gt;<br />
&amp;NULL<br />
[&quot;module&quot;]=&gt;<br />
string(11) &quot;dynamicdata&quot;<br />
}<br />
</pre>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,2386,37,xaraya,"dynamic data",Intro_to_Dynamic_Data_Objects_API
57,"Admin, Editors, and Webmaster menus in my sites","How I configure my sites with separate Admin, Editors, and Webmasters menus. These can be selectively shown using privileges.",3,1159725193,9,,2,"<p>
The default built-in administrators menus in Xaraya provide access to all the modules&#39; configuration functions. This is great for the website developer. But other kinds of admin users, like Editors and Webmasters, don&#39;t need these plethora of options, so I also provide a separate Editors menu and Webmaster menu with quick links to common admin functions. 
</p>
<p>
My strategy of this has been evolving, and improves a bit with each new site I develop.
</p>
<p>
Present features include
</p>
<ul>
	<li>allows different admin menus for different users <br />
	</li>
	<li>full admin horizontal nav on the top, with dropdowns (using builtin adminmenu)</li>
	<li>custom menus on the right, are normal blocks, easily configurable<br />
	</li>
	<li>admin menus are displayed outside the actual page, to not disturb the page layout</li>
</ul>
<br />
<p>
<img style=""width: 491px; height: 425px"" src=""var/uploads/Image/iwa-adminmenus.jpg"" alt="" "" />
</p>
<p>
&nbsp;
</p>
<p>
Note, this is more a convenience than a security thing, since most
people will avoid clicking on things and changing things they don&#39;t
know about, especially if the instructions are clear where they can and
should click. To actually restrict access to specific admin config
pages, on a per module basis, can still be accomplished using the
Privileges system.
</p>
<h2>Create the Admin Menu Blocks</h2>
<p>
The admin menus on the right side are menu blocks (or any other blocks you want), in a blockgroup named &quot;admin&quot;. If you don&#39;t have one already, create a blockgroup named &quot;admin&quot;. Then create one or more base/menu blocks, such as editorsmenu (title &quot;Editors Menu&quot;), and webmaste (title &quot;Webmaster&quot;), etc. I also add a roles/online block (&quot;Who&#39;s Here&quot;).
</p>
<p>
The Editors menu might contain, for example, a link to &quot;Add News&quot; (&quot;?module=articles&amp;type=admin&amp;func=new&amp;ptid=1&quot;). The Webmasters menu might include a link to &quot;Edit About Page&quot; (&quot;?module=xarpages&amp;type=admin&amp;func=modifypage&amp;pid=1&quot;). And so on.<br />
</p>
<p>
The full admin menu is a block type base/adminmenu. It&#39;s presented as a
horizontal menubar with dropdown menus using the
verticallistbycats-top.xt template. No need to create a block instance,
however, as we&#39;ll create it on the fly using the &lt;xar:block&gt; tag.
</p>
<h2>Is User an Admin? </h2>
<p>
At the top of the page template, mytheme/pages/default.xt, we first determine whether the current user gets to see the admin menus. This can be done in a number of ways. I use the Cheap Trick method (Using privileges to display content by user or group, <a href=""http://www.xaraya.com/index.php/documentation/306"">http://www.xaraya.com/index.php/documentation/306</a> ). 
</p>
<p>
That is I create an empty priv named &quot;showAdminMenusFlag&quot;, and assign it directly to any users, or groups that are allowed to see the admin menus.
</p>
<p>
&lt;xar:if condition=&quot;xarModAPIFunc(&#39;roles&#39;,&#39;user&#39;,&#39;checkprivilege&#39;,
array(&#39;uid&#39; =&amp;gt; xarSessionGetVar(&#39;uid&#39;), &#39;privilege&#39; =&amp;gt;
&#39;showAdminMenusFlag&#39;))&quot;&gt;<br />
&lt;xar:set name=&quot;showAdminMenu&quot;&gt;1&lt;/xar:set&gt;<br />
&lt;/xar:if&gt;
</p>
<p>
Be sure to add the showAdminMenusFlag to the Administrators roles group. And it is up to you to ensure any other users or groups that receive this flag also have privileges to view the menu blocks and admin functions you are granting. 
</p>
<h2>Content Wrappers</h2>
<p>
In the page template in my theme, mytheme/pages/default.xt we put the admin navbar on top. And we make room for the right side admin menus using div wrappers -- wrap the
actual page body in an #outer-wrapper div, and wrap all of that inside an #admin-wrapper. This way the admin menus
outside are the page and do not disturb their formatting. <br />
</p>
<p>
&lt;xar:if condition=&quot;!empty($showAdminMenu)&quot;&gt;<br />
&lt;div id=&quot;xb-admin-wrapper&quot;&gt;<br />
&lt;xar:block module=&quot;base&quot; type=&quot;adminmenu&quot; template=&quot;mainnavbubble;top&quot; /&gt;<br />
&lt;div id=&quot;xb-admin&quot;&gt;    <br />
&lt;xar:blockgroup name=&quot;admin&quot; id=&quot;admin&quot; /&gt;<br />
&lt;/div&gt;<br />
&lt;/xar:if&gt;<br />
&lt;div id=&quot;xb-outer-wrapper&quot;&gt; <br />
... actual page content...<br />
&lt;/div&gt;<br />
&lt;xar:if condition=&quot;!empty($showAdminmenu)&quot;&gt;<br />
&lt;/div&gt;<br />
&lt;/xar:if&gt;    <br />
&lt;/body&gt;
</p>
<p>
&nbsp;
</p>
<p>
The styles for these div&#39;s are defined as follows:
</p>
<p>
#xb-admin-wrapper {<br />
margin: 0 140px 0 0;<br />
background-color: #EEE; /* browser background color */<br />
}
</p>
<p>
&nbsp;
</p>
<p>
#xb-admin {<br />
position: absolute;<br />
right: 0;<br />
background-color: #ddd;<br />
border: 1px black solid;<br />
width: 130px;<br />
}<br />
</p>
<p>
<br />
#xb-outer-wrapper {<br />
background-color: #FFF; /* page background color */<br />
width: 720px; /* for fixed width layouts */<br />
}
</p>
<p>
<br />
In the case of fluid-width layouts, the outer wrapper might look like this: (note, this won&#39;t work in IE, so for IE I make it fixed width anyway)<br />
</p>
<p>
#xb-outer-wrapper {<br />
background-color: #FFF; /* page background color */<br />
/* following lines for fluid width */<br />
margin: 0 auto;<br />
min-width: 600px;<br />
max-width: 1200px;<br />
/* ie doesnt support min width, hack it fixed */<br />
width:auto !important;<br />
width: 720px;<br />
}
</p>
<br />
<br />
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,8307,37,xaraya,admin,Admin%2C_Editors%2C_and_Webmaster_menus_in_my_sites
56,"Conditional user content via css","We all know that a CMS can select content and build pages based on certain conditions. But what about text entered by users via forms and wysiwyg editors? ",3,1159421457,9,,2,"<p>
Specifically I have pages that need to contain different text depending whether the user is logged in or not. &quot;Here&#39;s the benefits...Click here to Register&quot; versus &quot;Welcome, click here to do this&quot; 
</p>
<p>
I could have put all the content in a separate template for the page, with a big
&lt;xar:if&gt; and &lt;xar:else&gt; around it. That&#39;s the worst
scenario because I don&#39;t want my client messing with my templates. Beside we&#39;re not talking webmin-capable users here!
</p>
<p>
Or I could have defined 2 body fields on the object, one for the logged in user and one for the anonymous one. And then put a conditional in a separate template for the page.
</p>
<p>
Or, I could have just made 2 different pages, but then you need to put conditions in any links to those pages. 
</p>
<p>
OK, so what&#39;s the trick???
</p>
<p>
In my pages/default.xt template (used by all pages on my site), in the &lt;head&gt; section I add the conditional code:
</p>
<p>
&lt;style&gt;<br />
&lt;xar:if condition=&quot;xarUserIsLoggedIn()&quot;&gt;<br />
.user-not-loggedin { display: none; }<br />
&lt;xar:else /&gt;<br />
.user-is-loggedin { display: none; }<br />
&lt;/xar:if&gt;<br />
&lt;/style&gt;    <br />
</p>
<p>
Then, I create two styles in the css file used by TinyMCE wysiwyg editor (mine is named editor.css, and kept in mytheme/style/editor.css)
</p>
<p>
.user-is-loggedin {}<br />
.user-not-loggedin {}
</p>
<p>
When TinyMCE is configured properly, these styles now appear in the styles dropdown list available to users. 
</p>
<p>
A user can edit content as usual, but make a &lt;p&gt; or &lt;div&gt; or other element and give it a style of user-not-loggedin or user-is-loggedin. Then when the page displays, only the appropriate elements are visible.
</p>
<p>
Cool!
</p>
<p>
One drawback is that in fact both sets of content are actually in the page, if you view source, although only one set is displayed and visible to visitors. 
</p>
<p>
&nbsp;
</p>
<br />
<p>
&nbsp;
</p>
",linoj,2215,37,xaraya,"tinymce,css",Conditional_user_content_via_css
55,"A general return redirect mechanism","On a site, I wanted users to register and then continue a little workflow through several extra screens (sort of a registration wizard). But the registration process doesnt provide a return_url at the end. Here's a workaround, which is generalized for any functions that don't already support return_url's",3,1159350998,9,,2,"<p>
My registration wizard lets users register and continue along a registration process. I don&#39;t require they validate via email, so once registered they&#39;re logged in. That way the next steps they can create  items (such as articles) as required by my application.
</p>
<p>
However, the registration module&#39;s xaruser/register.php does not offer a return_url for the end of the registation process. Rather it redirects to the home page of the site. 
</p>
<p>
Perhaps I could have added return_url support to the code but since there are multiple phases and multiple templates it started to look complicated. Instead I let register return me to the home page, and from there redirect to where i really want to end up.
</p>
<p>
My solution is generalized. It uses a session variable to hold the redirection information, set in an initiating template. Then any potential &#39;landing&#39; page (where the you were sent by default) includes code the check for redirection and redirect from there.
</p>
<p>
<em>session variable: </em><br />
$session_redirect = array( <br />
&#39;referer&#39; =&gt; $referer_url, <br />
&#39;landing&#39; =&gt; $landing_url, <br />
&#39;redirect&#39; =&gt; $redirect_url );
</p>
<p>
For example:
</p>
<blockquote>
	Array<br />
	(<br />
	[referer] =&gt; http://localhost/alumbiz/registration/register<br />
	[landing] =&gt; http://localhost/alumbiz/<br />
	[redirect] =&gt; http://localhost/alumbiz/signup/schools<br />
	)<br />
	<p>
	&nbsp;
	</p>
</blockquote>
<h2>
1. Initialize the session_redirects in a template</h2>
<p>
For example, in the user-registerform.xd, saved as mytheme/modules/registrations/user-registerform.xt, contains the following near the top:
</p>
<p>
&lt;xar:comment&gt; workaround for no return_url in registration &lt;/xar:comment&gt;<br />
&lt;xar:set name=&quot;foo&quot;&gt;xarSessionSetVar( &#39;session_redirect&#39;, <br />
array( <br />
&#39;referer&#39; =&gt; xarServerGetCurrentURL(),<br />
&#39;landing&#39;=&gt;xarServerGetBaseURL(), <br />
&#39;redirect&#39;=&gt;xarModUrl(&#39;xarpages&#39;, &#39;user&#39;, &#39;display&#39;, array(&#39;pid&#39;=&gt;&#39;34&#39;))<br />
))&lt;/xar:set&gt;
</p>
<p>
When registration is done, we know it sends us to the home page (xarServerGetBaseURL()), coming from the register page. But we want to go to the xarpages pid 34 instead.
</p>
<h2>2. Redirect in the landing page </h2>
<p>
You could do this on a per page basis, or in the pages/default.xt template. I chose to do it in an xarpages custom function, and just ensure this function is in the config of the page. (In my case the home page is an xarpage so I know the function will get called with you go to web root).
</p>
<p>
The php code looks like
</p>
<p>
// workaround for missing return_urls (used in user-registerform.xt)<br />
$session_redirect = xarSessionGetVar( &#39;session_redirect&#39; );<br />
if (!empty($session_redirect) &amp;&amp; <br />
($session_redirect[&#39;landing&#39;] == xarServerGetCurrentURL()) &amp;&amp; //consider stripping get vars (here and where initialized)<br />
($session_redirect[&#39;referer&#39;] == $_SERVER[&#39;HTTP_REFERER&#39;]) ) //consider a php solution, HTTP_REFERER var &quot;isnt reliable&quot;<br />
{<br />
$redir = $session_redirect[&#39;redirect&#39;];<br />
xarSessionDelVar( &#39;session_redirect&#39; );<br />
xarResponseRedirect( $redir );<br />
}<br />
</p>
<p>
Basically I get the session var, check if we&#39;re on the specified landing page, and check that we came from the specified referer page. If so, we delete the session var (I assume it&#39;s only used once), and then do the redirect.
</p>
<p>
If you are putting this in a template, I&#39;ll leave the translation to BL tags an exercise for the reader...
</p>
<h2>3. Making it HTTP_REFERER Safe </h2>
<p>
Note, I use  $_SERVER[&#39;HTTP_REFERER&#39;] to see where we came from.
<a href=""http://us3.php.net/reserved.variables"">This is said</a>  to not always be reliable (it is set by the browser, not
the server). So I implemented a php substitute for this variable, using session variables. 
</p>
<p>
We save the current and
previous urls in a session var; and do this for every page on the site e.g.
from pages/default.xt , as follows:
</p>
<p>
&lt;xar:comment&gt; save referer url (make this a php function...)&lt;/xar:comment&gt;<br />
&lt;xar:set name=&quot;foo&quot;&gt;1; <br />
$session_referer = xarSessionGetVar(&#39;session_referer&#39;); <br />
if (!empty($session_referer[&#39;current&#39;]))<br />
$session_referer[&#39;referer&#39;] = $session_referer[&#39;current&#39;]; <br />
$session_referer[&#39;current&#39;] = xarServerGetCurrentURL(); <br />
xarSessionSetVar(&#39;session_referer&#39;, $session_referer)<br />
&lt;/xar:set&gt;<br />
<br />
</p>
<p>
&nbsp;
</p>
<p>
Then the redirection code above changes to:
</p>
<p>
// workaround for missing return_urls (used in user-registerform.xt)<br />
$session_redirect = xarSessionGetVar( &#39;session_redirect&#39; );<br />
$session_referer = xarSessionGetVar( &#39;session_referer&#39; ); <br />
if (!empty($session_redirect) &amp;&amp; !empty($session_referer) &amp;&amp;<br />
($session_redirect[&#39;landing&#39;] == xarServerGetCurrentURL()) &amp;&amp; <br />
($session_redirect[&#39;referer&#39;] == $session_referer[&#39;referer&#39;]) )<br />
{<br />
$redir = $session_redirect[&#39;redirect&#39;];<br />
xarSessionDelVar( &#39;session_redirect&#39; );<br />
xarResponseRedirect( $redir );<br />
}
</p>
<p>
&nbsp;
</p>
<p>
Note: I just noticed this considers a browser refesh a new page and thus the current url also becomes the referer.... whatever.<br />
</p>
<p>
&nbsp;
</p>
",linoj,5714,37,xaraya,"registration,redirect,php",A_general_return_redirect_mechanism
54,"Hitting ""Back"" during registration","What the heck is the point of a registration confirm page if when you hit back and then resubmit you get a Forbidden Operation authid error???",3,1159348934,9,,2,"<p>
The default behavior in Xaraya when registering as a new user, you fill out the registration form, hit submit, see a confirmation screen. If you  confirm, all moves forward fine. But there&#39;s not a back button, and if you hit the back button on the browser, you get a Forbidden Operation (authid) error message. <br />
<br />
Hopefully we&#39;ll post a fix and this article will be moot
</p>
<h2>User Friendly User Error Message </h2>
<p>
The first thing is to make the error message a lot less offensive. Its not really a user error at all, its Xaraya&#39;s security kicking in and kicking you in the butt.
</p>
<p>
So I edited the Base module&#39;s message-usererror.xd, saved it to mytheme/modules/base/message-usererror.xt, adding the following:
</p>
<p>
&lt;p&gt;I&#39;m sorry, the Back button cannot be used in the current circumstances.&lt;/p&gt;<br />
&lt;p&gt;Please restart the operation.&lt;/p&gt;<br />
&lt;h3&gt;&lt;a hraf=&quot;#xarServerGetCurrentURL()#&quot;&gt;Continue&lt;/a&gt;&lt;/h3&gt;<br />
</p>
<p>
Then in the other &lt;div&gt;&#39;s in the template, I add style=&quot;display:none&quot; so they are hidden, such as
</p>
<p>
&lt;div class=&quot;xar-mod-body&quot; style=&quot;display:none&quot;&gt;
</p>
<p>
This way the actual error information is still there if you need it, just View Source the page. 
</p>
<h2>Save the Registration Input Values in a Session Var</h2>
<p>
Next, lets remember what the usr has input ,and put the values into a session variable. We do this in the confirmation template, user-confirmregistration.xd, saved to mytheme/modules/registration/user-confirmregistration.xt. All the user input values are already available to the template, so this is easy.
</p>
<p>
At the top of the template you can add something like
</p>
<p>
&lt;xar:set name=&quot;reginput&quot;&gt;array( <br />
&#39;username&#39; =&gt; $username,<br />
&#39;realname&#39; =&gt; $realname,<br />
&#39;email&#39;=&gt;$email,<br />
&#39;firstname&#39;=&gt;$properties[&#39;firstname&#39;]-&gt;value,<br />
&#39;lastname&#39;=&gt;$properties[&#39;lastname&#39;]-&gt;value  )&lt;/xar:set&gt;<br />
&lt;xar:set name=&quot;asdf&quot;&gt;xarSessionSetVar(&#39;reginput&#39;, $reginput)&lt;/xar:set&gt;
</p>
<p>
Note the last 2 are examples of hooked dynamic data fields.
</p>
<p>
&nbsp;
</p>
<h2>Get the Saved Reg Values if Form is Empty</h2>
<p>
Finally, we fill in the saved values, if they exist, in the registration form. We do this in the registration form template, user-registerform.xd, saved to mytheme/modules/registration/user-registerform.xt . 
</p>
<p>
Note that there might already be default values for the reg form input fields, if you had tried to submit the form but register.php found validation errors, such as an invalid email address. So we want those returned values to take precedence. 
</p>
<p>
&lt;xar:set name=&quot;reginput&quot;&gt;xarSessionGetVar(&#39;reginput&#39;)&lt;/xar:set&gt;<br />
&lt;xar:if condition=&quot;!empty($reginput)&quot;&gt;<br />
&lt;xar:if condition=&quot;empty($values[&#39;username&#39;]) and !empty($reginput[&#39;username&#39;])&quot;&gt;<br />
&lt;xar:set name=&quot;sdf&quot;&gt;1;$values[&#39;username&#39;] = $reginput[&#39;username&#39;]&lt;/xar:set&gt;<br />
&lt;/xar:if&gt;<br />
&lt;xar:if condition=&quot;empty($values[&#39;realname&#39;]) and !empty($reginput[&#39;realname&#39;])&quot;&gt;<br />
&lt;xar:set name=&quot;sdf&quot;&gt;1;$values[&#39;realname&#39;] = $reginput[&#39;realname&#39;]&lt;/xar:set&gt;<br />
&lt;/xar:if&gt;<br />
&lt;xar:if condition=&quot;empty($values[&#39;email&#39;]) and !empty($reginput[&#39;email&#39;])&quot;&gt;<br />
&lt;xar:set name=&quot;sdf&quot;&gt;1;$values[&#39;email&#39;] = $reginput[&#39;email&#39;]&lt;/xar:set&gt;<br />
&lt;/xar:if&gt;<br />
&lt;xar:if condition=&quot;empty($values[&#39;firstname&#39;]) and !empty($reginput[&#39;firstname&#39;])&quot;&gt;<br />
&lt;xar:set name=&quot;sdf&quot;&gt;1;$properties[&#39;firstname&#39;]-&gt;value = $reginput[&#39;firstname&#39;]&lt;/xar:set&gt;<br />
&lt;/xar:if&gt;<br />
&lt;xar:if condition=&quot;empty($values[&#39;lastname&#39;]) and !empty($reginput[&#39;lastname&#39;])&quot;&gt;<br />
&lt;xar:set name=&quot;sdf&quot;&gt;1;$properties[&#39;lastname&#39;]-&gt;value = $reginput[&#39;lastname&#39;]&lt;/xar:set&gt;<br />
&lt;/xar:if&gt;<br />
&lt;/xar:if&gt;<br />
</p>
<p>
&nbsp;
</p>
",linoj,7910,37,xaraya,registration,Hitting_%22Back%22_during_registration
53,"Contents of $_SERVER","A sample dump of the $_SERVER array available to PHP code.",3,1159318325,9,,2,"<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<pre>
 array(35) {<br />
[&quot;DOCUMENT_ROOT&quot;]=&gt;<br />
string(28) &quot;/Library/WebServer/Documents&quot;<br />
[&quot;HTTP_ACCEPT&quot;]=&gt;<br />
string(99) &quot;text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5&quot;<br />
[&quot;HTTP_ACCEPT_CHARSET&quot;]=&gt;<br />
string(30) &quot;ISO-8859-1,utf-8;q=0.7,*;q=0.7&quot;<br />
[&quot;HTTP_ACCEPT_ENCODING&quot;]=&gt;<br />
string(12) &quot;gzip,deflate&quot;<br />
[&quot;HTTP_ACCEPT_LANGUAGE&quot;]=&gt;<br />
string(14) &quot;en-us,en;q=0.5&quot;<br />
[&quot;HTTP_CONNECTION&quot;]=&gt;<br />
string(10) &quot;keep-alive&quot;<br />
[&quot;HTTP_COOKIE&quot;]=&gt;<br />
string(120) &quot;TinyMCE_mce_editor_0_height=349; TinyMCE_mce_editor_0_width=339; XARAYASID=bc3a3229e02f5de6bb514598fb3616de; fontSize=67&quot;<br />
[&quot;HTTP_HOST&quot;]=&gt;<br />
string(9) &quot;localhost&quot;<br />
[&quot;HTTP_KEEP_ALIVE&quot;]=&gt;<br />
string(3) &quot;300&quot;<br />
[&quot;HTTP_REFERER&quot;]=&gt;<br />
string(34) &quot;http://localhost/alumbiz/advertise&quot;<br />
[&quot;HTTP_USER_AGENT&quot;]=&gt;<br />
string(92) &quot;Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en-US; rv:1.8.0.7) Gecko/20060909 Firefox/1.5.0.7&quot;<br />
[&quot;PATH&quot;]=&gt;<br />
string(71) &quot;/bin:/sbin:/usr/bin:/usr/sbin:/usr/libexec:/System/Library/CoreServices&quot;<br />
[&quot;REDIRECT_SCRIPT_URI&quot;]=&gt;<br />
string(31) &quot;http://dads-imac.local/alumbiz/&quot;<br />
[&quot;REDIRECT_SCRIPT_URL&quot;]=&gt;<br />
string(9) &quot;/alumbiz/&quot;<br />
[&quot;REDIRECT_STATUS&quot;]=&gt;<br />
string(3) &quot;200&quot;<br />
[&quot;REDIRECT_URL&quot;]=&gt;<br />
string(9) &quot;/alumbiz/&quot;<br />
[&quot;REMOTE_ADDR&quot;]=&gt;<br />
string(9) &quot;127.0.0.1&quot;<br />
[&quot;REMOTE_PORT&quot;]=&gt;<br />
string(5) &quot;63971&quot;<br />
[&quot;SCRIPT_FILENAME&quot;]=&gt;<br />
string(46) &quot;/Library/WebServer/Documents/alumbiz/index.php&quot;<br />
[&quot;SCRIPT_URI&quot;]=&gt;<br />
string(31) &quot;http://dads-imac.local/alumbiz/&quot;<br />
[&quot;SCRIPT_URL&quot;]=&gt;<br />
string(9) &quot;/alumbiz/&quot;<br />
[&quot;SERVER_ADDR&quot;]=&gt;<br />
string(9) &quot;127.0.0.1&quot;<br />
[&quot;SERVER_ADMIN&quot;]=&gt;<br />
string(18) &quot;[no address given]&quot;<br />
[&quot;SERVER_NAME&quot;]=&gt;<br />
string(15) &quot;dads-imac.local&quot;<br />
[&quot;SERVER_PORT&quot;]=&gt;<br />
string(2) &quot;80&quot;<br />
[&quot;SERVER_SIGNATURE&quot;]=&gt;<br />
string(67) &quot;<br />
Apache/1.3.33 Server at dads-imac.local Port 80<br />
<br />
&quot;<br />
[&quot;SERVER_SOFTWARE&quot;]=&gt;<br />
string(32) &quot;Apache/1.3.33 (Darwin) PHP/4.4.1&quot;<br />
[&quot;GATEWAY_INTERFACE&quot;]=&gt;<br />
string(7) &quot;CGI/1.1&quot;<br />
[&quot;SERVER_PROTOCOL&quot;]=&gt;<br />
string(8) &quot;HTTP/1.1&quot;<br />
[&quot;REQUEST_METHOD&quot;]=&gt;<br />
string(3) &quot;GET&quot;<br />
[&quot;QUERY_STRING&quot;]=&gt;<br />
string(0) &quot;&quot;<br />
[&quot;REQUEST_URI&quot;]=&gt;<br />
string(9) &quot;/alumbiz/&quot;<br />
[&quot;SCRIPT_NAME&quot;]=&gt;<br />
string(18) &quot;/alumbiz/index.php&quot;<br />
[&quot;PATH_TRANSLATED&quot;]=&gt;<br />
string(46) &quot;/Library/WebServer/Documents/alumbiz/index.php&quot;<br />
[&quot;PHP_SELF&quot;]=&gt;<br />
string(18) &quot;/alumbiz/index.php&quot;<br />
}
</pre>
<pre>
 <br />
</pre>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,2615,38,xamp,php,Contents%20of%20%24_SERVER
52,properties,,3,1159050286,9,,0,"<p>
For example if the original template contains:
</p>
<p>
&lt;xar:foreach in=&quot;$properties&quot; key=&quot;$name&quot;&gt;<br />
&lt;div class=&quot;xar-form-input-wrapper&quot;&gt;<br />
&lt;xar:data-label property=&quot;$properties[$name]&quot; label=&quot;id&quot; /&gt;<br />
&lt;xar:data-input property=&quot;$properties[$name]&quot; /&gt;<br />
&lt;/div&gt;<br />
</p>
<p>
and you want the &quot;narrative&quot; field to have a special tinymce class, you can add the condition as follows
</p>
<p>
&lt;xar:foreach in=&quot;$properties&quot; key=&quot;$name&quot;&gt;<br />
&lt;div class=&quot;xar-form-input-wrapper&quot;&gt;<br />
&lt;xar:if condition=&quot;$name eq &#39;narrative&#39;&quot;&gt;<br />
&lt;label for=&quot;dd_113&quot; class=&quot;xar-form-label&quot;&gt;Narrative&lt;/label&gt;<br />
&lt;div class=&quot;xar-form-container-after&quot;&gt;<br />
&lt;textarea class=&quot;simpleEditorConfig&quot; rows=&quot;10&quot; cols=&quot;30&quot; id=&quot;dd_113&quot;
name=&quot;dd_113&quot;
tabindex=&quot;0&quot;&gt;#$properties[$name]:value#&lt;/textarea&gt;<br />
&lt;/div&gt;<br />
&lt;xar:else /&gt;<br />
&lt;xar:data-label property=&quot;$properties[$name]&quot; label=&quot;id&quot; /&gt;<br />
&lt;xar:data-input property=&quot;$properties[$name]&quot; /&gt;<br />
&lt;/xar:if&gt;<br />
&lt;/div&gt;<br />
&lt;/xar:foreach&gt;<br />
</p>
<p>
Note the notation for including the property value,
#$properties[$name]:value# . This is equivalent to the PHP notation
$properties[$name]-&gt;value
</p>
<p>
&nbsp;
</p>
<br />
",linoj,0,37,xaraya,"properties,dynamic data",properties
51,"Handy PHP Snippets",,3,1158726115,9,,0,"<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
// cycles through list of each items, giving $key and $value in scope of the list 
</p>
<pre>
while (list($key, $value) = each($items)) { 
</pre>
<pre>
} 
</pre>
<p>
&nbsp;
</p>
<p>
while changes the array, foreachjust copies it 
</p>
<p>
&nbsp;
</p>
<p>
// foreach can change the array too (php5)<br />
</p>
<p>
foreach ($items as &amp;$item) {
</p>
<p>
} 
</p>
",linoj,0,38,xamp,php,Handy_PHP_Snippets
50,"Sorting items on a field","Here's a function to sort an array of items, where each item is a key indexed array, like that returned by the articles ""getall"" user api function.",3,1158540523,9,,2,"<p>
This is useful, for example, when you do an Aritlces getall and need to sort on a dynamic data field.
</p>
<p>
Example usage:
</p>
<p>
&lt;xar:set name=&quot;arts&quot;&gt;xarModApiFunc( &#39;articles&#39;, &#39;user&#39;, &#39;getall&#39;, array(&#39;ptid&#39;=&gt;&#39;12&#39;, &#39;extra&#39;=&gt;array(&#39;dynamicdata&#39;) ))&lt;/xar:set&gt;
</p>
<p>
xar:set name=&quot;sorted&quot;&gt;xarModApiFunc( &#39;articles&#39;, &#39;user&#39;, &#39;sortitems&#39;, array(&#39;items&#39;=&gt;$arts, &#39;field&#39;=&gt;&#39;year_founded&#39;, &#39;order&#39;=&gt;&#39;DESC&#39;))&lt;/xar:set&gt;
</p>
<p>
I&#39;ve <a href=""http://bugs.xaraya.com/show_bug.cgi?id=5927"">submitted</a>  this to the Xaraya development team, we&#39;ll see if it&#39;s accepted, rejected, or changed.
</p>
<p>
&nbsp;
</p>
<p>
&lt;?php<br />
/**<br />
 * author: linoj<br />
 *<br />
 * array $args[&#39;items&#39;] array of item arrays (like as returned by articles getall)<br />
 * string $args[&#39;field&#39;] name of field to sort on<br />
 * string $args[&#39;order&#39;] one of ASC, DESC, [default ASC]<br />
 * returns sorted array of items<br />
Note: I do bubble sort by hand because the $field arg is not in scope of a compare function for usort()<br />
TODO: allow &#39;field&#39; to be a list of fields and/or an array of fields<br />
*/<br />
<br />
function articles_userapi_sortitems( $args ) <br />
{<br />
    extract($args);<br />
<br />
    // Argument check<br />
    if (!isset($items) || count($items)&lt;1) {<br />
        $msg = xarML(&#39;Invalid #(1) for #(2) function #(3)() in module #(4)&#39;,<br />
                    &#39;items list&#39;, &#39;user&#39;, &#39;sortitems&#39;,<br />
                    &#39;Articles&#39;);<br />
        xarErrorSet(XAR_USER_EXCEPTION, &#39;BAD_PARAM&#39;,<br />
                       new SystemException($msg));<br />
        return false;<br />
    }<br />
    if (!isset($field)) {<br />
        $msg = xarML(&#39;Invalid #(1) for #(2) function #(3)() in module #(4)&#39;,<br />
                    &#39;field&#39;, &#39;user&#39;, &#39;sortitems&#39;,<br />
                    &#39;Articles&#39;);<br />
        xarErrorSet(XAR_USER_EXCEPTION, &#39;BAD_PARAM&#39;,<br />
                       new SystemException($msg));<br />
        return false;<br />
    }<br />
    <br />
    <br />
    $array_size = count($items);<br />
    <br />
    if (!empty($order) &amp;&amp; ($order == &#39;DESC&#39;)) <br />
    {<br />
        for($x = 0; $x &lt; $array_size; $x++) {<br />
          for($y = 0; $y &lt; $array_size; $y++) {<br />
            if($items[$x][$field] &gt; $items[$y][$field]) {<br />
              $hold = $items[$x];<br />
              $items[$x] = $items[$y];<br />
              $items[$y] = $hold;<br />
            }<br />
          }<br />
        }<br />
    }<br />
    else <br />
    { // assume ASC<br />
        for($x = 0; $x &lt; $array_size; $x++) {<br />
          for($y = 0; $y &lt; $array_size; $y++) {<br />
            if($items[$x][$field] &lt; $items[$y][$field]) {<br />
              $hold = $items[$x];<br />
              $items[$x] = $items[$y];<br />
              $items[$y] = $hold;<br />
            }<br />
          }<br />
        }<br />
    }<br />
<br />
    return $items;<br />
}<br />
<br />
?&gt; <br />
</p>
",linoj,2353,37,xaraya,"articles,sort,php",Sorting_items_on_a_field
49,"How I Setup and Transfer Xaraya Sites Between Hosts","I develop my websites locally, then publish them to a hosted  server on the Internet. And sometimes there's a 3rd, staging copy as well. ",3,1157419827,9,,0,"<p>
Stages of Development:
</p>
<ul>
	<li>Working on local host only</li>
	<li>Publish to Internet host, I own both copies</li>
	<li>Allowing others to work in Internet site, loca is the master <br />
	</li>
	<li>Publish to live site; local is the slave</li>
</ul>
<h2>Implementation</h2>
<p>
On local host: 
</p>
<ul>
	<li>Install one copy of Xaraya</li>
	<li>Setup a project directory with symlinks</li>
	<li>Start with an existing theme and dataase</li>
	<li>(build the new site) <br />
	</li>
	<li>Dump sql</li>
	<li>Tar my theme</li>
	<li>Tar other files (e.g. images/ )</li>
	<li>Copy sql, and tars to remote host<br />
	</li>
</ul>
<p>
 On remote host, first time:
</p>
<ul>
	<li>Install one copy of Xaraya</li>
	<li>Setup a project directory with symlinks</li>
	<li>Create database and set permissions</li>
	<li>Import database from sql</li>
	<li>Untar theme and other files</li>
	<li><br />
	</li>
</ul>
<p>
Installing a Xaraya Distro
</p>
<p>
&nbsp;
</p>
<p>
Setting Up a New Project Directory
</p>
<p>
&nbsp;
</p>
<p>
Setting Up a New Project Database from my Generic XB Theme
</p>
<p>
&nbsp;
</p>
<p>
Moving  
</p>
<p>
&nbsp;
</p>
",linoj,0,37,xaraya,,How_I_Setup_and_Transfer_Xaraya_Sites_Between_Hosts
48,"Setting up a site with named ""sections""","Over the past 18 months I have implemented several project that require the web site to have separate sections, each with similar structure but separate content for the section (e.g. group) members. This articles discusses how I have approached this issue with Xaraya.",3,1157403331,9,,0,"<p>
&nbsp;
</p>
<ul>
	<li><a href=""http://www.myvbi.org"" target=""_blank"">www.myvbi.org</a>  -- the &quot;free help&quot; section of this side is a database of business resources, organized by State (NY, CA, etc)</li>
	<li><a href=""http://www.careshare-cmhi.org"" target=""_blank"">www.careshare-cmhi.org</a>  -- a community collaboration site (for families of children with medical needs). Each community and family have their own section with shared notes, discussion forum, calendar, etc.</li>
	<li><a href=""http://alumbiz.parkerhill.com"" target=""_blank"">www.alumbiz.com</a>  --  a community networking site for college alumni. Each school has its own section with business ads and listings, alumni facebook and listings, forum, etc.<br />
	</li>
</ul>
<p>
Each time I do this, I do it a little differently. The problem is Xaraya does not have very clean support doing this, so I keep trying slightly different approaches in hope of finding one that works best.   
</p>
<h2>Case: Alumbiz </h2>
<h3>Implementation without using Categories or session variables.</h3>
<p>
<strong>
modules/xarpages/xarfuncapi/alumbix.php</strong>
</p>
<p>
The custom xarpages function gets the sch= GET var, looking up the corresponding Article data, and passing it to the page. 
</p>
<p>
function xarpages_funcapi_alumbiz($args)<br />
{<br />
xarVarFetch(&#39;sch&#39;, &#39;str&#39;, $sch, NULL, XARVAR_NOT_REQUIRED);<br />
<br />
if (!empty($sch)) {<br />
$item = xarModApiFunc(&#39;articles&#39;, &#39;user&#39;, &#39;get&#39;, array(&#39;pubtypeid&#39;=&gt;&#39;11&#39;, &#39;title&#39;=&gt;$sch ));<br />
if (!empty($item))<br />
$args[&#39;school&#39;] = $item;<br />
}<br />
return $args;<br />
}<br />
</p>
<p>
<strong>modules/xarpages/xardecodeapi/alumbiz.php</strong>
</p>
<p>
This function splits out the short url arg (such as &quot;dartmouth&quot; in mysite.com/bizad/dartmouth)
</p>
<p>
function xarpages_decodeapi_alumbiz($args)<br />
{<br />
// The first entry is always the module name or alias.<br />
array_shift($args);<br />
<br />
$get = array();<br />
$arg = array_shift($args);<br />
//   just assume its the school title<br />
$get[&#39;sch&#39;] = $arg;<br />
array_shift($args);<br />
<br />
return $get;<br />
}<br />
</p>
<p>
<strong>modules/xarpages/xarencodeapi/alumbiz.php</strong> <br />
</p>
<p>
function xarpages_encodeapi_alumbiz($args)<br />
{<br />
     extract($args);<br />
<br />
    // Initialise the return values.<br />
    $path = array();<br />
    $get = $args;<br />
<br />
    // Check if the sch is set<br />
    if (isset($sch)) {<br />
        // Set the path.<br />
        $path[] = $sch;<br />
<br />
        // &#39;consume&#39; the GET parameter.<br />
        unset($get[&#39;sch&#39;]);<br />
    }<br />
<br />
    return array(<br />
        &#39;path&#39; =&gt; $path,<br />
        &#39;get&#39; =&gt; $get<br />
    );<br />
}<br />
 
</p>
",linoj,0,37,xaraya,"xarpages,categories",Setting_up_a_site_with_named_%22sections%22
47,"Navigating with Javascript and Php",,3,1157004186,9,,2,"<p>
&nbsp;
</p>
<p>
To go back to previous page (same as pressing the back button on your browser)
</p>
<p>
&lt;a href=&quot;javascript:history.back()&quot;&gt;Cancel&lt;/a&gt;
</p>
<p>
To go back more than one page (e.g. 2 pages):
</p>
<p>
&lt;a href=&quot;javascript:history.go(-2)&quot;&gt;Return&lt;/a&gt;
</p>
<p>
To close this window
</p>
<p>
&lt;a href=&quot;javascript:window.close()&quot;&gt;Close this window&lt;/a&gt;
</p>
<p>
Both together:
</p>
<pre>
    &lt;xar:comment&gt;Allow back if there&#39;s a place to go, else Close window&lt;/xar:comment&gt;<br />
&lt;p&gt;<br />
&lt;script language=javascript type=&quot;text/javascript&quot;&gt;<br />
&lt;!--<br />
if (history.length &gt; 1) {<br />
document.write( &#39;&lt;a href=&quot;javascript:history.back();&quot;&gt;&lt;xar:mlstring&gt;or back to previous page&lt;/xar:mlstring&gt;&lt;/a&gt;&#39; );<br />
} else {<br />
document.write( &#39;&lt;a href=&quot;javascript:window.close()&quot;&gt;&lt;xar:mlstring&gt;or close this window&lt;/xar:mlstring&gt;&lt;/a&gt;&#39; );<br />
}<br />
--&gt;<br />
&lt;/script&gt;    <br />
&lt;/p&gt;<br />
</pre>
<p>
If you want to go back, but need to refresh the page you came from, you can use this (in Xaraya template)<br />
</p>
<p>
&lt;a href=&quot;$_SERVER[&#39;HTTP_REFERER&#39;&#39;]&quot;&gt;Done&lt;/a&gt;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,4036,41,webdev,javascript,Navigating_with_Javascript_and_Php
46,"Dropdown list property","Not just for ordinary select options lists, it's a handy property for linking items by the item id. Also a note about Country Dropdown property.",3,1157002553,9,,2,"<p>
The
Dropdown List property is handy, lets you make dropdown lists. In the
property validation you can specify the options in the format
id,name;id,name (e.g. 1,apple;2,peach). 
</p>
<p>
You can also specify a function
that generates the options list, a number of modules provide a dropdown
list user API function. So, for example, to get a list of articles of
pubtype &#39;12&#39;, the validation contains 
</p>
<p>
xarModApiFunc( &#39;articles&#39;, &#39;user&#39;, &#39;dropdownlist&#39;, array(&#39;ptid&#39;=&gt;&#39;12&#39;) )
</p>
<p>
Here&#39;s
an anomoly. Lets say you made the $notes field a dropdown list. When
you do a getall of your articles, $item[&#39;notes&#39;] contains the aid of
the option id (e.g 1, 2, or 3). But in the pubtype&#39;s display.xt
template, $body contains the option name (e.g. apple, peach).
</p>
<p>
Here&#39;s
another anomoly. When I print the value as [#$notes#], i expected to
get [apple] but i get [ apple ].  Looking at the source, it&#39;s really
this:
</p>
<p>
&lt;!-- start:
modules/base/xartemplates/properties/showoutput-dropdown.xd --&gt;
apple&lt;!-- end:
modules/base/xartemplates/properties/showoutput-dropdown.xd --&gt; 
</p>
<p>
because I have that option turned on in my themes config. 
</p>
<p>
In one case, I need to lookup the rest of that item&#39;s data, so it looks like this:
</p>
<p>
&lt;xar:set
name=&quot;fruilt&quot;&gt;xarModApiFunc(&#39;articles&#39;,&#39;user&#39;,&#39;get&#39;,
array(&#39;pubtypeid&#39;=&gt;&#39;12&#39;,
&#39;title&#39;=&gt;trim(strip_tags($notes))))&lt;/xar:set&gt;
</p>
<p>
Fortunately, strip_tags() which removes html tags from a string also removes html comments. Then trim() removes any leading and trailing white space chars. 
</p>
<p>
UPDATE:
</p>
<p>
I recently checked in a change to the Country Dropdown property. Now you can add options to the property&#39;s validation, and these options will now appear at the top of the list. 
</p>
<pre>
Thus, you could put in the validation <br />
</pre>
<pre>
us,United States;ca,Canada;uk,United Kingdom&quot;<br />
</pre>
<pre>
nd these will appear at the top of the country list, with the default value as<br />
&quot;United States&quot;, and the entire list below.
</pre>
<pre>
UPDATE:
</pre>
<p>
Another recent change. The articles dropdownlist now has an argument &#39;showunpub&#39; =&gt; &#39;1&#39; that allow non-admin to see unpublished articles. Without this argument, the arg &#39;status&#39; =&gt; array(0,2,3) for example would be ignored unless you are logged in as an Admin. With the &#39;showunpub&#39; set you can include unpublished articles in the dropdown list.
</p>
<p>
&nbsp;
</p>
<pre>
 
</pre>
<pre>
 
</pre>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,3193,37,xaraya,"dropdown list,country list",Dropdown_list_property
45,"Articles data and getall function","Articles has some built in data fields. And can be extended with Dynamic Data. Most of this is really great and convenient. But some functions are not available on the DD data.",3,1156719847,9,,2,"<p>
&nbsp;
</p>
<p>
Important update:
</p>
<p>
I&#39;ve submitted a patch to articles get.php and getall.php that resolves several of the discrepancies cited below, namely
</p>
<ul>
	<li>articles &#39;get&#39; now supports the &#39;extra&#39; arg, so it can retrieve hooked dd fields, using &#39;extra&#39;=&gt;&#39;dynamicdata&#39; (like in &#39;getall&#39;)<br />
	</li>
	<li>articles &#39;get&#39; now supports the &#39;fields&#39; arg (like in &#39;getall&#39;)</li>
	<li>articles &#39;getall&#39; now supports a &#39;wheredd&#39; clause for selecting on dynamic data</li>
</ul>
<p>
Here&#39;s the bugzilla post for the patch
</p>
<p>
patch for articles userapi get.php<br />
<a href=""http://bugs.xaraya.com/show_bug.cgi?id=5925"">http://bugs.xaraya.com/show_bug.cgi?id=5925</a> 
</p>
<p>
patch for articles userapi getall.php<br />
<a href=""http://bugs.xaraya.com/show_bug.cgi?id=5926"">http://bugs.xaraya.com/show_bug.cgi?id=5926 </a> 
</p>
<p>
&nbsp;
</p>
<hr />
<p>
&nbsp;
</p>
<p>
The Articles module can do more with its built in data fields than it can with extended hooked in Dynamic Data fields. <br />
</p>
<ul>
	<li>built in fields have a limited number of properties.</li>
	<li>DD fields have a full range of properties.</li>
	<li>to set validation on built in fields, click the field name (on the left)</li>
	<li>to set validation on dd fields, there&#39;s a &quot;validation&quot; link once you clicked &quot;modify&quot; dd<br />
	</li>
	<li>articles &quot;get&quot; function is limited to the built-in fields, it cannot retrieve any hooked dd fields </li>
	<li>you must use articles &quot;getall&quot; function if you want any dd fields, using &#39;extra&#39;=&gt;array(&#39;dynamicdata&#39;)</li>
	<li>&#39;sort&#39; arg only works on built-in fields<br />
	</li>
	<li>&#39;where&#39; clause arg only works on built-in fields</li>
	<li>search only works on built-in field (both in getall, and the search hook used by the Search module)</li>
	<li>conveniently, DD fields provide the raw data ($myfield) and the output processed data ($myfield_output) so you dont need to do that yourself<br />
	</li>
</ul>
<p>
<br />
Some other hooked modules are more tightly integrated, namely categories, ratings, and hitcount. Read the comments at the top of getall.php for specific fields you can filter on.
</p>
<p>
If you need to filter articles on a DD value(s), here&#39;s how: First you get the dd objects that meet your criteria, extract the article id&#39;s from results, and then getall the articles.
</p>
<p>
&lt;xar:set name=&quot;dditems&quot;&gt;xarModApiFunc(&#39;dynamicdata&#39;,&#39;user&#39;,&#39;getitems&#39;, array(&#39;module&#39;=&gt;&#39;articles&#39;, &#39;itemtype&#39;=&gt;&#39;12&#39;, &#39;where&#39;=&gt;&quot;year_founded eq 1996&quot;))&lt;/xar:set&gt;
</p>
<p>
&lt;xar:if condition=&quot;!empty($dditems)&quot;&gt; 
</p>
<p>
&lt;xar:set name=&quot;aids&quot;&gt;array_keys($dditems)&lt;/xar:set&gt;<br />
</p>
<p>
&lt;xar:set name=&quot;arts&quot;&gt;xarModApiFunc( &#39;articles&#39;, &#39;user&#39;, &#39;getall&#39;, array(&#39;aids&#39;=&gt;$aids, &#39;extra&#39;=&gt;array(&#39;dynamicdata&#39;)))&lt;/xar:set&gt;
</p>
<p>
&lt;/xar:if&gt;
</p>
<p>
You need to check for empty $dditems, otherwise the getall will return all articles if the aids list is null. 
</p>
<pre>
<br />
</pre>
",linoj,3009,37,xaraya,"articles,dynamic data",Articles_data_and_getall_function
44,"Accessing dynamic data via hooks and tags","Although you can hook Dynamic Data to many modules, the way of access this data varies if the module has native support for this data.",3,1156699168,9,,2,"<p>
&nbsp;
</p>
<h2>Articles DD Display<br />
</h2>
<p>
In the display and summary templates, as well as the user API getall function, the dd fields come in to you directly. 
</p>
<p>
For example, in the templates, just like you can access $body and $summary, you also have variables for $myfield1 and $myfield2 (if those are the dd field names).
</p>
<p>
This is the raw content of the field. If you want it processed for
output, well, they already did that for you (thank you), its referenced
as
</p>
<p>
#$myfield1_output# 
</p>
<p>
Similarly, using the user API &quot;getall&quot; function (&quot;get&quot; doesnt support dd yet):
</p>
<p>
&lt;xar:set name=&quot;stufflist&quot;&gt;xarModAPIFunc(&#39;articles&#39;, &#39;user&#39;, &#39;getall&#39;, array(&#39;ptid&#39;=&gt;&#39;12&#39;, &#39;extra&#39;=&gt;array(&#39;dynamicdata&#39;)))&lt;/xar:set&gt;
</p>
<p>
&lt;xarset name=&quot;stuff&quot;&gt;current($stufflist)&lt;/xar:set&gt; 
</p>
<p>
#$stuff[&#39;myfield1&#39;]#
</p>
<p>
In this case, if you want it processed for output you dont get an &quot;_output&quot; field. For that you&#39;ll need to get the corresponding dd object directly for this pubtype like the general case (below), e.g. using 
</p>
<p>
&lt;xar:data-getitem name=&quot;$properties&quot; module=&quot;articles&quot; itemtype=&quot;$ptid&quot; itemid=&quot;$aid /&gt; 
</p>
<p>
and then access the properties by name, such as 
</p>
<p>
&lt;xar:data-output property=&quot;$properties[&#39;myfield1&#39;]&quot; /&gt; 
</p>
<p>
UPDATE:
</p>
<p>
articles get api now supports dd, so you can do:
</p>
<p>
&lt;xar:set name=&quot;stuff&quot;&gt;xarModAPIFunc(&#39;articles&#39;, &#39;user&#39;,
&#39;get&#39;, array(&#39;ptid&#39;=&gt;&#39;12&#39;,
&#39;extra&#39;=&gt;array(&#39;dynamicdata&#39;)))&lt;/xar:set&gt;<br />
#$stuff[&#39;myfield1&#39;]#<br />
</p>
<p>
&nbsp;
</p>
<h2>Xarpages DD Display<br />
</h2>
<p>
In an Xarpages item template, dynamic data is contained in an subarray of the $current_page array, as follows:
</p>
<p>
#$current_page[&#39;dd&#39;][&#39;myfield1&#39;]#
</p>
<p>
This is just the raw content, if you want it processed for output you&#39;ll need direct access to the Property objects array. You can make one for each dd object type (eh, that is, hook module item type). Go to Admin &gt; Content &gt; Dynamic Data &gt; View DD Objects to determine the object name. , For example<br />
</p>
<p>
mytheme/modules/dynamicdata/user-displayhook-xarpages_3.xt 
</p>
<p>
To access dd properties directly, use the general case...
</p>
<p>
&nbsp;
</p>
<h2>Roles DD</h2>
<p>
Dynamic Data hooked to Roles lets you define additional user profile variables.  These are directly accessible via the Roles api functions
</p>
<p>
$value = xarUserGetVar( &#39;fieldname&#39; );
</p>
<p>
xarUserSetVar( &#39;fieldname&#39;, $value );
</p>
<p>
These can take an optional 3rd arg, a $uid if other than the current logged in user.
</p>
<p>
To access all the dd fields in an array, use:
</p>
<p>
&lt;xar:data-getitems value=&quot;$profiles&quot; module=&quot;roles&quot; itemids=&quot;$uid&quot; /&gt;<br />
&lt;xar:set name=&quot;profile&quot;&gt;$profiles[$uid]&lt;/xar:set&gt;
</p>
<p>
The data-getitems tag returns an array of values per itemid. In this case it should return an array of one item. Then we take that item into the $profile variable array. 
</p>
<p>
Similarly, for example, to find all users who have a specific dd value, you can do:
</p>
<p>
&lt;xar:set name=&quot;wh&quot;&gt;&#39;myfield eq &#39; . $myvalue&lt;/xar:set&gt;<br />
&lt;xar:data-getitems value=&quot;$users&quot; module=&quot;roles&quot; where=&quot;$wh&quot; /&gt;
</p>
<p>
&lt;xar:foreach in=&quot;$users&quot; key=&quot;$uid&quot; value=&quot;$dd&quot;&gt;<br />
&lt;!-- do something --&gt;<br />
&lt;/xar:foreach&gt;<br />
</p>
<p>
This, of course, doesn&#39;t return the roles table data itself (such a uname, email, etc). If you need that you can call the roles getall, 
</p>
<p>
&lt;xar:set name=&quot;rolesdata&quot;&gt;xarModApiFunc(&#39;roles&#39;,&#39;user&#39;,&#39;getall&#39;,array(&#39;uidlist&#39;=&gt;$uids))&lt;/xar:set&gt;
</p>
<p>
$rolesdata will be sorted by &quot;name&quot;, or you can specify as &#39;order&#39;=&gt; field. But that doesnt let you sort by a dd field. 
</p>
<p>
I tried using data-getitems with a join, and that works sort-of, as there are bugs. See http://bugs.xaraya.com/show_bug.cgi?id=6016 . 
</p>
<p>
Here&#39;s an example where I have a list of articles, and I want to get the profiles of  all the authors who have a specific dd field value, and sort using my sortitems function (http://www.vaporbase.com/postings/74)<br />
</p>
<p>
&lt;xar:set name=&quot;authors&quot;&gt;xarModApiFunc(&#39;articles&#39;,&#39;user&#39;,&#39;getauthors&#39;, array( &#39;ptid&#39;=&gt;&#39;10&#39; )&lt;/xar:set&gt; 
</p>
<p>
&lt;xar:set name=&quot;uids&quot;&gt;array_keys($authors)&lt;/xar:set&gt; 
</p>
<p>
&lt;xar:set name=&quot;wh&quot;&gt;&quot;uid in (&quot; . implode(&quot;,&quot;, $uids) . &quot;)&quot;&lt;/xar:set&gt;
</p>
<p>
 &lt;xar:data-getitems value=&quot;$useritems&quot; module=&quot;roles&quot; join=&quot;xar_roles&quot; where=&quot;$wh&quot; /&gt;
</p>
<p>
&lt;!-- sortitems only works in index arrays right now --&gt;<br />
&lt;xar:set name=&quot;$useritems&quot;&gt;array_values($useritems)&lt;/xar:set&gt; 
</p>
<p>
&lt;xar:set name=&quot;$useritems&quot;&gt;xarModApiFunc(&#39;misctools&#39;,&#39;user&#39;,&#39;sortitems&#39;, array(&#39;items&#39;=&gt;$useritems, &#39;field&#39;=&gt;&#39;lastname&#39;))&lt;/xar:set&gt; 
</p>
<p>
&nbsp;
</p>
<h2>Other (General Case DD Display)</h2>
<p>
You can always retrieve a dynamic data item directly using the DD tags (or api). The general use is:
</p>
<p>
&lt;xar:data-getitem name=&quot;$properties&quot; module=&quot;123&quot; itemtype=&quot;0&quot; itemid=&quot;$id&quot; fieldlist=&quot;$fieldlist&quot; .../&gt;
</p>
<p>
For example, 
</p>
<p>
&lt;xar:data-getitem name=&quot;$properties&quot; module=&quot;xarpages&quot; itemid=&quot;$pid&quot; itemtype=&quot;$current_page[&#39;dd&#39;][&#39;itemtype&#39;]&quot; /&gt;
</p>
<p>
&lt;xar:data-output property=&quot;$properties[&#39;myfield1&#39;]&quot; /&gt;
</p>
<p>
You can override the value as follows:
</p>
<p>
&lt;xar:data-output property=&quot;$properties[&#39;myfield1&#39;]&quot; value=&quot;$newvalue&quot; /&gt;<br />
</p>
<p>
Outputting in a loop:
</p>
<p>
&lt;xar:foreach in=&quot;$properties&quot; key=&quot;$name&quot;&gt;<br />
&lt;p&gt;<br />
&lt;strong&gt;<br />
&lt;xar:data-label property=&quot;$properties[$name]&quot; /&gt;<br />
&lt;/strong&gt;<br />
: <br />
&lt;xar:data-output property=&quot;$properties[$name]&quot; /&gt;<br />
&lt;/p&gt;<br />
&lt;/xar:foreach&gt;
</p>
<p>
&nbsp;
</p>
<h2>Input Forms</h2>
<p>
Sometimes you need to override the default property input tag. 
</p>
<ul>
	<li>You can do it by replacing the property&#39;s showinput template, but that will affect it everywhere on the site. That would be found, for example, in modules/base/xartemplates/properties/showinput-[propname].xd You can put an .xt version in your theme.</li>
</ul>
<ul>
	<li>Make a newhook or modifyhook template for the specific item type. For example, for dd hooked to an Articles pubtype, the object might be called &quot;articles_12&quot;, then you make a template named mytheme/modules/dynamicdata/admin-newhook-articles_12.xt or admin-modifyhook-articles_12.xt <br />
	</li>
</ul>
<ul>
	<li>Manage the dd object directly, such as
	</li>
</ul>
<p>
&lt;xar:data-getitem name=&quot;$properties&quot; module=&quot;xarpages&quot; itemid=&quot;$ptid&quot; /&gt; 
</p>
<p>
then in your form,
</p>
&lt;xar:data-input property=&quot;$properties[&#39;myfield&#39;]&quot; /&gt;
<p>
or even
</p>
<p>
&lt;xar:data-input name=&quot;myfield&quot; type=&quot;dropdown&quot; value=&quot;1&quot; validation=&quot;$options&quot; /&gt;
</p>
<p>
&nbsp;
</p>
<p>
NOTE: for the Articles module built-in fields, there&#39;s a separate Fields definition and
&lt;xar:articles-field&gt; tag you can use for input. See below (bottom
of this article). For example,<br />
</p>
<p>
&lt;xar:articles-field definition=&quot;$fields[&#39;body&#39;][&#39;definition&#39;]&quot; /&gt;
</p>
<p>
&nbsp;
</p>
<h2>What&#39;s in a Properties Data?</h2>
<p>
Example property array format and contents: 
</p>
dynamic_tinymce_property Object<br />
(<br />
[id] =&gt; 113<br />
[name] =&gt; narrative<br />
[label] =&gt; Narrative<br />
[type] =&gt; 205<br />
[default] =&gt; <br />
[source] =&gt; dynamic_data<br />
[status] =&gt; 1<br />
[order] =&gt; 4<br />
[validation] =&gt; <br />
[datastore] =&gt; _dynamic_data_<br />
[value] =&gt; Asdf asdf<br />
[invalid] =&gt; <br />
[_objectid] =&gt; 15<br />
[_moduleid] =&gt; 27<br />
[_itemtype] =&gt; 0<br />
[_itemid] =&gt; 3<br />
[_items] =&gt; <br />
[rows] =&gt; 10<br />
[cols] =&gt; 50<br />
[wrap] =&gt; soft<br />
)
<p>
&nbsp;
</p>
<h2>Dynamic Data Tags - Reference</h2>
<p>
Here&#39;s a synopsis of the DD tags (including usage both on hooked dd as well as dd objects)
</p>
<p>
<strong> *  &lt;xar:data-display ...&gt; display tags</strong><br />
* Format : &lt;xar:data-display module=&quot;123&quot; itemtype=&quot;0&quot; itemid=&quot;555&quot; fieldlist=&quot;$fieldlist&quot; static=&quot;yes&quot; .../&gt;<br />
*       or &lt;xar:data-display fields=&quot;$fields&quot; ... /&gt;<br />
*       or &lt;xar:data-display object=&quot;$object&quot; ... /&gt;<br />
*<br />
* @param array $args array containing the item that you want to display, or fields
</p>
<p>
&nbsp;
</p>
<p>
<strong> * &lt;xar:data-form ...&gt; form tags</strong><br />
* Format : &lt;xar:data-form module=&quot;123&quot; itemtype=&quot;0&quot; itemid=&quot;555&quot; fieldlist=&quot;$fieldlist&quot; static=&quot;yes&quot; ... /&gt;<br />
*       or &lt;xar:data-form fields=&quot;$fields&quot; ... /&gt;<br />
*       or &lt;xar:data-form object=&quot;$object&quot; ... /&gt;<br />
*<br />
* @param $args array containing the item for which you want to show a form, or fields 
</p>
<p>
&lt;xar:data-form currently does everything between the between form tags except hidden fields and the buttons 
</p>
<p>
<br />
<strong> *  &lt;xar:data-getitems ...&gt; getitems tags</strong><br />
* Format : &lt;xar:data-getitems name=&quot;$properties&quot; value=&quot;$values&quot; module=&quot;123&quot; itemtype=&quot;0&quot; itemids=&quot;$idlist&quot; fieldlist=&quot;$fieldlist&quot; .../&gt;<br />
*       or &lt;xar:data-getitems name=&quot;$properties&quot; value=&quot;$values&quot; object=&quot;$object&quot; ... /&gt;<br />
*<br />
* @param $args array containing the items that you want to display, or fields
</p>
<p>
name= returns an array of properties (&#39;propname&#39; =&gt; property object)<br />
</p>
<p>
value = returns an array of items values (&#39;itemid&#39; =&gt; array( &#39;fieldname&#39; =&gt; value))
</p>
<p>
you dont need both name= and value=, just one or the other, or both
</p>
<p>
&nbsp;
</p>
<p>
<strong> *  &lt;xar:data-getitem ...&gt; getitem tags</strong><br />
* Format : &lt;xar:data-getitem name=&quot;$properties&quot; module=&quot;123&quot; itemtype=&quot;0&quot; itemid=&quot;$id&quot; fieldlist=&quot;$fieldlist&quot; .../&gt;<br />
*       or &lt;xar:data-getitem name=&quot;$properties&quot; object=&quot;$object&quot; ... /&gt;<br />
*<br />
* @param $args array containing the module and item that you want to display, or fields<br />
* @returns string
</p>
<p>
N OTE: Use itemid=0 to get back the properties for an empty item, like for an input form to create new objects.
</p>
<p>
&nbsp;
</p>
<p>
<strong> * &lt;xar:data-input ...&gt; form field tags</strong><br />
* Format : &lt;xar:data-input name=&quot;thisname&quot; type=&quot;thattype&quot; value=&quot;$val&quot; ... /&gt;<br />
*       or &lt;xar:data-input field=&quot;$field&quot; /&gt; with $field an array containing the type, name, value, ...<br />
*       or &lt;xar:data-input property=&quot;$property&quot; /&gt; with $property a Dynamic Property object<br />
*<br />
* Special attributes :<br />
*     hidden=&quot;yes&quot; to show a hidden field regardless of the original property type<br />
*     preset=&quot;yes&quot; this can typically be used in admin-new.xd templates for individual<br />
*                  properties you&#39;d like to automatically preset via GET or POST parameters<br />
* Note: don&#39;t use this if you already check the input for the whole object or in the code<br />
* See also preview=&quot;yes&quot;, which can be used on the object level to preview the whole object<br />
*<br />
* @param $args array containing the input field definition or the type, name, value, ... 
</p>
<p>
&nbsp;
</p>
<p>
<strong> *  &lt;xar:data-label ...&gt; label tag</strong><br />
* Format : &lt;xar:data-label object=&quot;$object&quot; /&gt; with $object some Dynamic Object<br />
*       or &lt;xar:data-label property=&quot;$property&quot; /&gt; with $property some Dynamic Property<br />
*       &lt;xar:data-label property=&quot;$property&quot; label=&quot;id&quot; /&gt; will use &lt;label for=&quot;dd_$property-&gt;id&quot;&gt;...&lt;/label&gt;<br />
*       &lt;xar:data-label property=&quot;$property&quot; label=&quot;name&quot; /&gt; will use &lt;label for=&quot;$property-&gt;name&quot;&gt;...&lt;/label&gt;<br />
*       &lt;xar:data-label property=&quot;$property&quot; label=&quot;something&quot; /&gt; will use &lt;label for=&quot;something&quot;&gt;...&lt;/label&gt;<br />
*<br />
* @param $args array containing the object or property
</p>
<p>
&nbsp;
</p>
<p>
<strong> * &lt;xar:data-list ...&gt; list tags</strong><br />
* Format : &lt;xar:data-list module=&quot;123&quot; itemtype=&quot;0&quot; itemids=&quot;$idlist&quot; fieldlist=&quot;$fieldlist&quot; static=&quot;yes&quot; .../&gt;<br />
*       or &lt;xar:data-list items=&quot;$items&quot; labels=&quot;$labels&quot; ... /&gt;<br />
*       or &lt;xar:data-list object=&quot;$object&quot; ... /&gt;<br />
*<br />
* @param $args array containing the items that you want to list, or fields 
</p>
<p>
&nbsp;
</p>
<p>
<strong> *  &lt;xar:data-object ...&gt; object tag</strong><br />
* Format : &lt;xar:data-object object=&quot;$object&quot; property=&quot;$property&quot; /&gt; with $object some object and $property some property of this object<br />
*       or &lt;xar:data-object object=&quot;$object&quot; method=&quot;$method&quot; arguments=&quot;$args&quot; /&gt; with $object some object and $method some method of this object<br />
*<br />
* @param $args array containing the object and property/method<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong> *  &lt;xar:data-output ...&gt; form field tags</strong><br />
* Format : &lt;xar:data-output name=&quot;thisname&quot; type=&quot;thattype&quot; value=&quot;$val&quot; ... /&gt;<br />
*       or &lt;xar:data-output field=&quot;$field&quot; /&gt; with $field an array containing the type, name, value, ...<br />
*       or &lt;xar:data-output property=&quot;$property&quot; /&gt; with $property a Dynamic Property object<br />
*<br />
* @param $args array containing the input field definition or the type, name, value, ...<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong> * &lt;xar:data-view ...&gt; view tags</strong><br />
* Format : &lt;xar:data-view module=&quot;123&quot; itemtype=&quot;0&quot; itemids=&quot;$idlist&quot; fieldlist=&quot;$fieldlist&quot; static=&quot;yes&quot; .../&gt;<br />
*       or &lt;xar:data-view items=&quot;$items&quot; labels=&quot;$labels&quot; ... /&gt;<br />
*       or &lt;xar:data-view object=&quot;$object&quot; ... /&gt;<br />
*<br />
* @param $args array containing the items that you want to display, or fields<br />
<br />
</p>
<h2>Articles Fields</h2>
<p>
This is a bit off topic, but the Articles module has its own field definition and tag for the built in fields.
</p>
<p>
The field type is defined as follows (for example): 
</p>
<p>
[myfield] =&gt; Array<br />
(<br />
[label] =&gt; School<br />
[id] =&gt; body<br />
[definition] =&gt; Array<br />
(<br />
[name] =&gt; body<br />
[type] =&gt; dropdown<br />
[id] =&gt; body<br />
[value] =&gt; Harvard<br />
[validation] =&gt;
xarModApiFunc(&#39;articles&#39;,&#39;user&#39;,&#39;dropdownlist&#39;,array(&#39;ptid&#39;=&gt;&#39;11&#39;,&#39;field&#39;=&gt;&#39;summary&#39;,&#39;status&#39;=&gt;array(0,2,3)))<br />
)<br />
)
</p>
<p>
&nbsp;
</p>
<p>
<strong>&lt;xar:articles-field definition=&quot;$definition&quot; /&gt; </strong>
</p>
<p>
with $definition an array containing the type, name, value, ...<br />
</p>
<p>
or 
</p>
<p>
<strong>&lt;xar:articles-field name=&quot;thisname&quot; type=&quot;thattype&quot; value=&quot;$val&quot; ... /&gt;</strong> 
</p>
<p>
&nbsp;
</p>
",linoj,3993,37,xaraya,"dynamic data",Accessing_dynamic_data_via_hooks_and_tags
43,"Block Layout Anomolies","An on-going random list of tips, tricks, and gotcha in Xaraya's block layout (BL) templating system.",3,1156687765,9,,2,"<p>
&nbsp;
</p>
<h2>&lt;xar:set&gt; </h2>
<ul>
	<li>variables should not contain hyphens, probably gets confused with a minu sign in the php.</li>
	<li>content between the &lt;xar:set&gt; and &lt;/xar:set&gt; is plain ol&#39; php</li>
	<li>to set an array &lt;xar:set name=&quot;arr&quot;&gt;array( &#39;key1&#39;=&gt;$value1, &#39;key2&#39;=&gt;$value2 )</li>
	<li>to modify an existing array &lt;xar:set name=&quot;asdf&quot;&gt;1; arr[&#39;key1&#39;]=$value3;&lt;/xar:set&gt; </li>
</ul>
<h2> Array key<br />
</h2>
<ul>
	<li>if BL rejects an array reference, remove the single quotes around the key value, such as &lt;xar:image-resize src=&quot;$img_file[fileId]&quot;</li>
</ul>
<p>
&nbsp;
</p>
<h2>Embedding php</h2>
<p>
These are hacks for embedding php in the template. Note, this is not advised or &#39;supported&#39;, and I do it probably alot more often than I should. But sometimes practical implementation now trumps style and future maintenance (I&#39;ll pay dearly for this later, I know). Either of the following will work: 
</p>
<ul>
	<li>&lt;xar:set name=&quot;asdf&quot;&gt;1; [normal php code here]&lt;/xar:set&gt; </li>
	<li>&lt;xar:if condition=&quot;[normal php code here]&quot;&gt;&lt;/xar:if&gt;</li>
</ul>
<br />
",linoj,2231,37,xaraya,"block layout",Block_Layout_Anomolies
42,"Dynamic Extendable Templates in Xarpages","I really wish we could include blocklayout (BL) code in textarea fields. But we can't (now anyway). So, here's a few techniques for dynamically extending your templates, one of which involves making your own property type.",3,1156563936,9,,2,"<p>
To begin we&#39;ll assume we&#39;re in the Xarpages module, have a page type called &quot;html&quot;, and thus have a template named page-html.xt (residing in mytheme/modules/xarpages/).
</p>
<p>
Now, suppose you want to include some content that requires using Xaraya block layout (BL) tags. <br />
</p>
<p>
The way Xarpages works you&#39;d need separate Item Templates
for each page that has custom BL in it. That&#39;s ok, i guess, except that my templates
usually contain other layout and navigation and stuff so you&#39;d need to
make sure when changes are made, all are updated.
</p>
<p>
Instead, I use a dyanamic data (DD) field to dynamically extend the one template. 
</p>
<h2>Inserting Content From Another Module </h2>
<p>
Here&#39;s a specific example: your About section is a small hierarchy of pages, one is Board of Directors, another is Management, and a third is Partners. And suppose each of these are
implemented as separate pubtypes in the Articles module. You want to show
them on separate xarpages (for various reasons, not the least of which so they&#39;ll appear in an xarpages menu block). 
</p>
<p>
I could have separate item templates for each of these pages, which call the corresponding module function, such as
</p>
<p>
#xarModFunc( &#39;articles&#39;, &#39;user&#39;, &#39;view&#39;, array( &#39;ptid&#39;=&gt;&#39;12&#39; ) )# 
</p>
<p>
where &quot;12&quot; is the id of the &quot;directors&quot; pubtype. And two additional templates would each specify the pubtype id&#39;s for the others-- that being the only difference between the 3 of them.
</p>
<p>
(Note, I had used &lt;xar:module main=&quot;false&quot; ... tag here, but Jojo says its not good practice and to use the xarModFunc() instead). 
</p>
<p>
Instead, I create a DD textbox field called &quot;xarfunc&quot; that must be in the format:
</p>
<pre>
    modname:functype:func<br />
</pre>
<p>
or, if modname is &quot;articles&quot;, then it should be
</p>
<p>
modname:functype:func:ptid
</p>
<p>
Thus, i the first example, my xarfunc field contains:
</p>
<pre>
    articles:user:view:12<br />
</pre>
<p>
Then, in the page-html.xt template, I include the code:
</p>
<pre>
&lt;xar:comment&gt; quick wayto pull in content from another module, <br />
the field xarmodule is formatted module:type:func &lt;/xar:comment&gt;<br />
</pre>
<pre>
&lt;xar:if condition=&quot;!empty($current_page.dd.xarfunc)&quot;&gt;<br />
&lt;xar:set name=&quot;mod&quot;&gt;explode(&#39;:&#39;, $current_page[&#39;dd&#39;][&#39;xarfunc&#39;])&lt;/xar:set&gt;<br />
&lt;xar:if condition=&quot;isset($mod[3]) and $mod[0] eq &#39;articles&#39;&quot;&gt;<br />
#xarModFunc( $mod[0], $mod[1], $mod[2], array(&#39;ptid&#39;=&gt;$mod[3]) )#
</pre>
<pre>
&lt;xar:else /&gt;<br />
#xarModFunc( $mod[0], $mod[1], $mod[2] )#<br />
&lt;/xar:if&gt;<br />
&lt;/xar:if&gt;  <br />
</pre>
<p>
I&#39;ll usually sandwich this between a Body textarea field and a Conclusion textarea field, so there can be regular content before and after the list. An example where I use this, see <a href=""http://www.abi-nh.com/about/directors"">http://www.abi-nh.com/about/directors</a>  and <a href=""http://www.abi-nh.com/businesses"">http://www.abi-nh.com/businesses</a> <br />
</p>
<p>
&nbsp;
</p>
<h2>Inserting Arbitrary Blocks<br />
</h2>
<p>
If you prefer to use blocks for inserting content from another module, such as the Article topitems block, you could do a similar thing as above but the textbox contains the block instance name instead. Thus, different blocks appear on different pages. 
</p>
<p>
If you make a textbox field named &quot;xarblock&quot;, then your template would contain:
</p>
<pre>
&lt;xar:if condition=&quot;!empty($current_page.dd.xarblock)&quot;&gt;<br />
&lt;xar:block instance=&quot;$current_page[&#39;dd&#39;][&#39;xarblock&#39;])&quot; /&gt;
&lt;/xar:if&gt;  <br />
</pre>
<p>
&nbsp;
</p>
<h2>Including Other Templates</h2>
<p>
[Note: this section updated because I recently added the BLT property to the Xaraya core]. 
</p>
<p>
If your programming requirements are even more extensive, you still can avoid making separate item templates by including other BL templates. 
</p>
<p>
At this point you might be asking, what&#39;s the point? Well, on www.myvbi.org I have a page template (mytheme/pages/default.xt) that defines the overall page layout, &lt;head&gt;, banner, footer, etc. Then the middle section is defined by the xarpage item template (page-html-vbi.xt), which has the left column, intro paragraph, perhaps one or 2 blocks, etc. Finally, inside this middle section there may be dynamic content thats not satisfied by ordinary html or other xaraya property types. 
</p>
<p>
For example, on <a href=""http://www.myvbi.org/grow/program/nh"">http://www.myvbi.org/grow/program/nh</a> . You can see the middle section (below the banner area and above the footer) which comes from the xarpage item template is pretty complicated but stays the same for most of the pages in this section of the site. 
</p>
<p>
The categories list in the center is specific to this page, so I made a separate little template for it named &quot;vbi-freehelp-body.xt&quot; and put it into mytheme/modules/xarpages/includes/ directory.
</p>
<p>
In my page type I have a DD field named &quot;body_include&quot;, with property type &quot;BL Template&quot;. In the validation, I specify type as &quot;module&quot;, and module name as &quot;xarpages&quot;.  
</p>
<p>
When you create/edit a page, the dropdown list now contains all the templates you&#39;ve added to the includes/ directory. Its nice because these can be as small or large as needed and they&#39;re reusable on different pages.
</p>
<p>
Finally, add this to your page-html.xt template
</p>
<p>
&lt;xar:if condition=&quot;!empty($current_page.dd.body_include)&quot;&gt;<br />
    &lt;xar:data-getitem name=&quot;$properties&quot; module=&quot;xarpages&quot; itemid=&quot;$pid&quot; itemtype=&quot;$current_page[&#39;dd&#39;][&#39;itemtype&#39;]&quot; /&gt;<br />
    &lt;xar:data-output property=&quot;$properties[&#39;body_include&#39;]&quot; /&gt; <br />
&lt;/xar:if&gt;<br />
 
</p>
Note that unlike when you include an &lt;xar:template&gt; tag directly in your templates, when you use the BLTemplate property the included template does not inherit variables available in the calling template. So if you need to share values, either pass them with the &quot;bltsubdata&quot; validation field, or use the cache (xarVarSet/GetCached).
<p>
&nbsp;
</p>
<pre>
 <br />
</pre>
",linoj,2611,37,xaraya,"xarpages,articles,block layout,properties,BL Template",Dynamic_Extendable_Templates_in_Xarpages
41,"Uploading files in xaraya","There's several different ways to upload files to your website in Xaraya. I'll try to document current ""best practices"" separated from legacy methods.",3,1156377796,9,,2,"<h2>Articles + standard uploads </h2> 
<p>
This is the simplest case, and least flexible. Lets say you have a pubtype where the Body field contains an image file. Define the Body as property &quot;File Upload&quot;.<br />
</p>
<p>
Referencing it in a template 
</p>
<pre>
	&lt;img src=&quot;#$body#&quot; alt=&quot;#$title#&quot; /&gt;<br />
</pre>
<p>
Standard uploads Validations 
</p>
<ul>
	<li>Base directory: relative path where files are uploaded and stored</li>
	<li>File extensions: permitted file extensions</li>
	<li>File size: max file size (also subject to you php.ini upload_max_filesize setting)  </li>
</ul>
<p>
<strong>Caveats</strong>
</p>
<p>
Beware that some hooked transforms could screw up the File Uploads
field if that field is transformed. For example, line break transforms
performed by the HTML Module and/or BBCode Module. If you are using a built-in Articles field for File Upload, either don&#39;t hook a transforming module to this pubtype, or turn off the transform (in that module) (if its a Summary field you can also turn off transforms in the pubtype config settings). 
</p>
<p>
In this case, you could just turning off linebreaks everywhere and then manually transform textarea fields in the template. <em>Or, keep linebreaks on, and call strip_tags() on the uploads field.</em> That&#39;s probably better, if and when the problem occurs.<br />
</p>
<p>
&nbsp;
</p>
<h2>Articles + Uploads module </h2> 
<p>
Hook Uploads module to Articles. 
</p>
<p>
Your &quot;File Upload&quot; field now use the Uploads module (acts like an &quot;Upload&quot; prop) instead of standard &quot;file upload&quot;. 
</p>
<p>
For example, Pictures pubtype, Body property File Uploads. The call to current() grabs the first elemet of the array (we assume its an array of one).<br />
</p>
<blockquote>
	<p>
	&lt;xar:set name=&quot;fileInfo&quot;&gt;current( xarModAPIFunc( &#39;uploads&#39;, &#39;user&#39;, &#39;showoutput&#39;, array(&#39;value&#39;=&gt;$body, &#39;multiple&#39;=&gt;false)) )&lt;/xar:set&gt;<br />
	&lt;img src=&quot;#$fileInfo[&#39;fileLocation&#39;]#&quot; /&gt;
	</p>
</blockquote>
<p>
If you allow multiple attachments,<br />
</p>
<blockquote>
	<p>
	&lt;xar:set name=&quot;img_output&quot;&gt;xarModAPIFunc(&#39;uploads&#39;,&#39;user&#39;,&#39;showoutput&#39;,array(&#39;value&#39; =&gt; $body, &#39;multiple&#39; =&gt; true))&lt;/xar:set&gt;<br />
	&lt;xar:foreach in=&quot;$img_output&quot; key=&quot;$fileId&quot; value=&quot;$fileInfo&quot;&gt;<br />
	&lt;img src=&quot;#$fileInfo[&#39;fileLocation&#39;]#&quot; /&gt;<br />
	&lt;/xar:foreach&gt;
	</p>
</blockquote>
<p>
The fields in each $fileInfo are:
</p>
<ul>
	<li>fileName - original filename (w/o path info)<br />
	</li>
	<li>
	&#39;fileLocation&#39;    - full url of file (e.g. src=&quot;$fileInfo[&#39;fileLocation&#39;]&quot;)
	</li>
	<li>
	fileDownload - relative file location  
	</li>
	<li>
	fileId -            item id (in uploads module), (e.g. used in calls Images module <br />
	</li>
	<li>
	fileSize -            files size in bytes</li>
	<li>(others? check this)<br />
	</li>
</ul>
<p>
The caveat about hooked transforms applies here too. 
</p>
<h2>
Configuring Uploads module  
</h2>
<p>
Via Admin &gt; Global &gt; Uploads &gt; Modify Config
</p>
<p>
Uploads Directory:
</p>
<p>
&nbsp;
</p>
<h2>File Uploads Property Validation</h2>
<p>
Multiple: yes/no
</p>
<p>
Methods: trusted, external, uploads, stored
</p>
<p>
Upload Directory:
</p>
<p>
Trusted Directory:
</p>
<p>
Other Rule:
</p>
<p>
&nbsp;
</p>
<h2>Uploads Privileges </h2>
<p>
Note, if you want to constrain uploads to specific file or mime types, you do this in Privileges (not the upload property validation or uploads module configuration). Create a priv for the uploads module, and in &quot;Specify instances that apply&quot;, tell it the Mime Type, Subtype, User, and/or File, with Access Level (minimum Submit).
</p>
<p>
Another thing, if you require uploads be approved (default state &quot;submitted&quot;) the files may not be accessible until approved. This one got me because things were working fine, then seemed to stop. Turns out I was testing while logged in as Admin, then when testing as anon the uploaded pix weren&#39;t showing up (Uploads showout function returns null). 
</p>
<p>
&nbsp;
</p>
<h2>Content of the $myfield_output Array </h2>
<blockquote>
	<p>
	[tile_image] =&gt; ;23<br />
	[tile_image_output] =&gt; Array<br />
	(<br />
	[23] =&gt; Array<br />
	(<br />
	[fileId] =&gt; 23<br />
	[userId] =&gt; 3<br />
	[userName] =&gt; Administrator<br />
	[fileName] =&gt; 10050m.gif<br />
	[fileLocation] =&gt; var/uploads/10050m.gif<br />
	[fileSize] =&gt; 541<br />
	[fileStatus] =&gt; 2<br />
	[fileType] =&gt; image/gif<br />
	[fileTypeInfo] =&gt; Array<br />
	(<br />
	[typeId] =&gt; 5<br />
	[subtypeId] =&gt; 153<br />
	)<br />
	<br />
	[storeType] =&gt; 3<br />
	[mimeImage] =&gt; modules/mime/xarimages/image-gif.png<br />
	[fileDownload] =&gt; http://localhost/alumbiz/?module=uploads&amp;func=download&amp;fileId=23<br />
	[fileURL] =&gt; http://localhost/alumbiz/?module=uploads&amp;func=download&amp;fileId=23<br />
	[DownloadLabel] =&gt; Download file: 10050m.gif<br />
	[fileModified] =&gt; 1156709005<br />
	[fileDirectory] =&gt; imports<br />
	[fileHash] =&gt; 10050m.gif<br />
	[fileHashName] =&gt; imports/10050m.gif<br />
	[fileHashRealName] =&gt; imports/10050m.gif<br />
	[fileStatusName] =&gt; Approved<br />
	)<br />
	<br />
	)<br />
	</p>
</blockquote>
<p>
&nbsp;
</p>
<h2>Articles + DynamicData + Uploads module<br />
</h2> 
<p>
We can avoid the caveats by using DynamicData instead of a built-in articles field. For one, you dont run into the transform problems. And when dd is hooked to articles, a shortcut is provided -- the showoutput is already set in your $fieldname_output variable. <br />
</p>
<p>
Thus, if your field is named &quot;attachment&quot;, you say  
</p>
<blockquote>
	<p>
	&lt;xar:foreach in=&quot;$attachment_output&quot; key=&quot;$fileid&quot; value=&quot;$fileinfo&quot;&gt;<br />
	&lt;a href=&quot;http://www.vaporbase.com/index.php#$fileinfo[&#39;fileDownload&#39;]#&quot;&gt;#$fileinfo[&#39;fileName&#39;]#&lt;/a&gt;<br />
	&lt;/xar:foreach&gt;
	</p>
</blockquote>
<p>
&nbsp;
</p>
<p>
H ere&#39;s something unexpected: I have Uploads hooked to Articles, and I have a DD field with Uploads property (lets called it &quot;img&quot;). Then, in an Xarpages template I do an articles getall on the Articles items, the img_output field in blank. (Other non-upload fields do have their _output field). It turns out I had to also hook Uploads to Xarpages  for the img field, and then img_output contains the file info data. 
</p>
<p>
&nbsp;
</p>
<h2>Content of the myfield properties</h2>
<h2> Xarpages + DD </h2> 
<p>
not different, just another example 
</p>
<blockquote>
	<p>
	&lt;xar:set name=&quot;img_output&quot;&gt;current( xarModAPIFunc( &#39;uploads&#39;, &#39;user&#39;, &#39;showoutput&#39;, array(&#39;value&#39;=&gt;$current_page[&#39;dd&#39;][&#39;main_image&#39;], &#39;multiple&#39;=&gt;false)) )&lt;/xar:set&gt; <br />
	&lt;img src=&quot;#$img_output[&#39;fileLocation&#39;]#&quot; /&gt;<br />
	</p>
</blockquote>
<p>
OK, now on to something different:<br />
</p>
<h2>Tinymce Filebrowser</h2> 
<p>
( didn&#39;t i write this up somewhere else?)
</p>
<p>
&nbsp;
</p>
<h2>Files Module</h2> 
<p>
&nbsp;
</p>
<h2>&lt;input type=&quot;file&quot;&gt; and Php</h2>
<p>
Lets look under the hood a bit, at how to use a regular HTML &lt;input type=&quot;file&quot;&gt; and the Uploads module.<br />
</p>
<p>
In normal forms processing with Php, a file input field puts its values in the global $_FILES array rather than a POST var. 
</p>
<p>
Thus, in your template, the form:
</p>
<p>
&lt;form method=&quot;post&quot; name=&quot;post&quot; id=&quot;post&quot; action=&quot;doform.php&quot; enctype=&#39;multipart/form-data&#39;&gt;
</p>
<p>
&lt;input type=&quot;hidden&quot; name=&quot;MAX_FILE_SIZE&quot; value=&quot;1000000&quot; /&gt;<br />
&lt;input type=&quot;hidden&quot; name=&quot;imageupload_attach_type&quot; id=&quot;imageupload_attach_type&quot; value=&quot;7&quot; /&gt;<br />
&lt;input type=&quot;file&quot; name=&quot;imageupload&quot; id=&quot;imageupload&quot; /&gt;
</p>
<p>
etc.
</p>
<p>
&nbsp;
</p>
<p>
And in the doform.php :
</p>
<p>
echo &quot;&lt;pre&gt;&quot;; print_r($_FILES); echo &quot;&lt;/pre&gt;&quot;;
</p>
<p>
gives
</p>
<p>
Array<br />
(<br />
[imageupload] =&gt; Array<br />
(<br />
[name] =&gt; homeoffice.gif<br />
[type] =&gt; image/gif<br />
[tmp_name] =&gt; /var/tmp/phpHtehur<br />
[error] =&gt; 0<br />
[size] =&gt; 24255<br />
)<br />
<br />
)<br />
<br />
</p>
<p>
To integrate the upload with the Uploads module directly (rather than via hooks), you can use api functions at this point  . For  example, if your forms processing is  in php:
</p>
<p>
$fileinfo = xarModApiFunc(&#39;uploads&#39;,&#39;user&#39;, &#39;prepare_uploads&#39;, array(&#39;fileInfo&#39; =&gt;$_FILES[&#39;imageupload&#39;]) );
</p>
<p>
$imageinfo = xarModApiFunc(&#39;uploads&#39;,&#39;user&#39;, &#39;file_store&#39;, array(&#39;fileInfo&#39; =&gt; current($fileinfo)) );<br />
</p>
<p>
The results of these functions are:
</p>
<p>
$fileinfo:
</p>
<p>
Array<br />
(<br />
[boy.jpg] =&gt; Array<br />
(<br />
[fileType] =&gt; image/jpeg<br />
[fileSrc] =&gt; /var/tmp/phpux97l9<br />
[fileSize] =&gt; 6274<br />
[fileName] =&gt; boy.jpg<br />
[fileDest] =&gt; var/uploads/boy.jpg_6<br />
[fileLocation] =&gt; var/uploads/boy.jpg_6<br />
[isUpload] =&gt; 1<br />
)<br />
<br />
)
</p>
<p>
&nbsp;
</p>
<p>
$imageinfo :
</p>
<p>
Array<br />
(<br />
[fileType] =&gt; image/jpeg<br />
[fileSrc] =&gt; /var/tmp/phpux97l9<br />
[fileSize] =&gt; 6274<br />
[fileName] =&gt; boy.jpg<br />
[fileDest] =&gt; var/uploads/boy.jpg_6<br />
[fileLocation] =&gt; var/uploads/boy.jpg_6<br />
[isUpload] =&gt; 1<br />
[store_type] =&gt; 3<br />
[fileId] =&gt; 87<br />
) 
</p>
<p>
&nbsp;
</p>
<p>
The fileId field is whats to be saved in the File Upload field (with Uploads module hooked) of your item.
</p>
<p>
The inverse of this-- if you have a fileId and want the fileInfo[] stuff, you use this api call
</p>
<p>
$imageinfo = xarModApiFunc(&#39;uploads&#39;,&#39;user&#39;,&#39;db_get_file&#39;, array(&#39;fileId&#39;=&gt;$imageid));<br />
if (!empty($imageinfo))<br />
$imageinfo = current($imageinfo);
</p>
<p>
&nbsp;
</p>
<h2>One more thing</h2>
<p>
Just a quick reminder, when you have a form with an uploads field be sure the enctype is
</p>
<p>
enctype=&#39;multipart/form-data&#39;
</p>
<p>
and NOT
</p>
<p>
enctype=&#39;application/x-www-form-urlencoded&#39;
</p>
<p>
else the file will not upload. Not sure why the former is used in Xar templates, but afaik we can use the latter enctype any time.
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,3382,37,xaraya,"articles,uploads,dynamic data",Uploading_files_in_xaraya
40,"Implementing RSS feeds","Things I had to learn and do to get RSS feeds working on my sites.",3,1156272352,9,,0,"<p>
&nbsp;
</p>
<h2>RSS on Vaporbase<br />
</h2>
<p>
RSS is simply a different theme in Xaraya. 
</p>
<p>
My first experiment was on this personal blog site (www.vaporbase.com).  
</p>
<ul>
	<li>enable the rss theme</li>
	<li>The pubtype I&#39;m syndicating is &quot;postings&quot;, so in the rss theme, copy modules/articles/user-summary-news.xt to user-summary-postings.xt  <br />
	</li>
	<li>edited the rss icon to match my unsaturated colors, and add it to my page template as follows</li>
</ul>
&lt;a href=&quot;postings?theme=rss&quot; title=&quot;bookmark link for live rss feed&quot;&gt;&lt;img src=&quot;#$themedir#/images/rss-sm.gif&quot; style=&quot;position:relative;top:5px&quot; /&gt;&lt;/a&gt;
<p>
That pretty much did it.
</p>
<h2>Testing</h2>
<p>
I also had to learn to use a newsreader, being a newbie on both the producer and consumer end of this. 
</p>
<p>
Firefox live bookmarks. When I visit my site, the little rss icon automatically appears in the Firefox address field with tool tip &quot;Add live bookmark...&quot;.  Actually its not really what I want because it uses the current url as the feed link 
</p>
<p>
Sage for Firefox
</p>
<p>
Others - I looked at newsgator but i&#39;m not going to shell out the $30 just yet anyway.<br />
</p>
<h2>RSS on WindAction.org</h2>
<p>
&nbsp;
</p>
<h2>What About ATOM?</h2>
<p>
&nbsp;
</p>
<h2>Some good links</h2>
<p>
WSJ feeds page: http://online.wsj.com/page/0_0813.html
</p>
<p>
Sage plugin for Firefox: 
</p>
<p>
NewsGator: http://www.newsgator.com
</p>
<p>
Feedburner - Feed 101: http://www.feedburner.com/fb/a/aboutrss
</p>
<p>
Disecting feedburner&#39;s browser friendly page:<br />
http://feeds.wsjonline.com/~d/styles/rss2full.xsl<br />
 http://www.w3.org/Style/XSL/WhatIsXSL.html 
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,0,37,xaraya,rss,Implementing_RSS_feeds
39,"Adding ratings to articles","I decided to finally add user ratiings to articles on the news-oriented IWA site (http://www.windaction.org). Here's the steps (and some missteps) I went through.",3,1156037264,9,,2,"<h2>Enable Ratings module and hook it to articles</h2>
<p>
Simple enough, you&#39;d think. Well, I already had Ratings enabled, I guess I had played with it before, and had toyed with various configurations like should it be 5-stars, or x-out-of-ten, or x%, so when I settled on 5-stars, some existing rated articles should have been 100 but were actually 10&#39;s. I dont know, but deactivating/uninstalling, then re-installing the module cleared the db table and took care of that anomoly.
</p>
<p>
Then I hooked Ratings to just specific pubtypes in the Ariticles module. Well, that seemed to work fine for a while. Eventually though I had to change it to hook to all pubtypes. Why? I wanted a mix of any rated pubtypes in a topitems block. Xaraya apparently wont let you do that, either hook it to all pubtypes and enable all pubtypes in the block, or you&#39;re limited to one pubtype in the block. I opted for the former and just made sure the display template for each pubtype that does not support ratings skips that hook. See the <a href=""http://bugs.xaraya.com/show_bug.cgi?id=5875"">xaraya bug</a>  i filed.
</p>
<p>
I configured it for medium security- users can vote once per session. Actually I dont really care, but while testing I noticed that after someone votes, it may not be obvious that the vote was recorded so they might click it multiple times. But with the security, the voting widget disappears once the vote is recorded. Cool! 
</p>
<h2>Setup Ratings Config and Template<br />
</h2>
<p>
For this I configured it as 5 star. 
</p>
<p>
The default template handles all the options. One thing that bothered me about the star display is it&#39;s not necessarily obvious that the value is &quot;x out of 5&quot; when you only display x stars. Also the star icons that come with the module are the wrong color, so I created 3 new icons:
</p>
<ul>
	<li>star.gif    <img src=""var/uploads/Image/star.gif"" alt="" "" /></li>
	<li>starhalf.gif    <img src=""var/uploads/Image/starhalf.gif"" alt="" "" /></li>
	<li>starnone.gif    <img src=""var/uploads/Image/starnone.gif"" alt="" "" /></li>
</ul>
<p>
I also thought the default icons (16 x 16) were too big for my site, so I made these 12 x 12 pixels.
</p>
<p>
So the next step was modifying the ratings user display template so it shows the extra empty stars. Here&#39;s the template, stripped of the styles I know I&#39;m not using:
</p>
<p>
[code=xml]
&lt;xar:comment&gt; License: GPL http://www.gnu.org/copyleft/gpl.html &lt;/xar:comment&gt;
&lt;xar:comment&gt; try to eliminate spaces between star bitmaps &lt;/xar:comment&gt;
&lt;xar:if condition=&quot;!($intrating eq 0 and $fracrating eq 0)&quot;&gt;
&lt;xar:mlstring&gt;Visitor rating:&lt;/xar:mlstring&gt;  
&lt;xar:for start=&quot;$i = 0&quot; test=&quot;$i lt $intrating&quot; iter=&quot;$i++&quot;&gt;&lt;img src=&quot;themes/twindaction2/images/star.gif&quot; alt=&quot;star&quot; /&gt;&lt;/xar:for&gt;&lt;xar:if condition=&quot;$fracrating ge 5&quot;&gt;&lt;img src=&quot;themes/twindaction2/images/starhalf.gif&quot; alt=&quot;half star&quot; /&gt;&lt;xar:if condition=&quot;$i++&quot;&gt;&lt;/xar:if&gt;&lt;/xar:if&gt;&lt;xar:for start=&quot;$i&quot; test=&quot;$i lt 5&quot; iter=&quot;$i++&quot;&gt;&lt;img src=&quot;themes/twindaction2/images/starnone.gif&quot; alt=&quot;no star&quot; /&gt;&lt;/xar:for&gt;<br />
&lt;/xar:if&gt;
&lt;xar:if condition=&quot;empty($rated)&quot;&gt;
&lt;xar:if condition=&quot;xarSecurityCheck(&#39;CommentRatings&#39;,0)&quot;&gt;
&lt;form method=&quot;post&quot; action=&quot;&amp;xar-modurl-ratings-user-rate;&quot; id=&quot;post&quot; name=&quot;formrating&quot; enctype=&quot;application/x-www-form-urlencoded&quot; &gt;
&lt;span style=&quot;font-style:italic&quot;&gt;Rate this item: &lt;/span&gt;
&lt;select name=&quot;rating&quot; id=&quot;rating&quot; size=&quot;1&quot; onchange=&quot;submit()&quot;&gt;
&lt;option value=&quot;0&quot; selected=&quot;selected&quot;&gt;Select...&lt;/option&gt;
&lt;option value=&quot;20&quot;&gt;1 star (worst)&lt;/option&gt;
&lt;option value=&quot;40&quot;&gt;2 stars&lt;/option&gt;
&lt;option value=&quot;60&quot;&gt;3 stars&lt;/option&gt;
&lt;option value=&quot;80&quot;&gt;4 stars&lt;/option&gt;
&lt;option value=&quot;100&quot;&gt;5 stars (best)&lt;/option&gt;
&lt;/select&gt;
&lt;input type=&quot;hidden&quot; name=&quot;returnurl&quot; id=&quot;returnurl&quot; value=&quot;#$returnurl#&quot; /&gt;
&lt;input type=&quot;hidden&quot; name=&quot;modname&quot; id=&quot;modname&quot; value=&quot;#$modname#&quot; /&gt;
&lt;input type=&quot;hidden&quot; name=&quot;itemtype&quot; id=&quot;itemtype&quot; value=&quot;#$itemtype#&quot; /&gt;
&lt;input type=&quot;hidden&quot; name=&quot;objectid&quot; id=&quot;objectid&quot; value=&quot;#$objectid#&quot; /&gt;
&lt;input type=&quot;hidden&quot; name=&quot;authid&quot; id=&quot;authid&quot; value=&quot;#$authid#&quot; /&gt;
&lt;/form&gt;
&lt;/xar:if&gt;
&lt;/xar:if&gt;
[/code]
</p>
<p>
Notice I had to eliminate nice formatting in the loop with the &lt;img&gt; tag so no extra spaces were placed between images.
</p>
<p>
I also don&#39;t display any stars if the item is not rated (actually if the rating is zero, which is good enough). That&#39;s what&#39;s going on in the first if-statements.
</p>
<p>
As a result, i get something like this:  <img style=""width: 12px; height: 12px"" src=""var/uploads/Image/star.gif"" alt="" "" width=""12"" height=""12"" /><img style=""width: 12px; height: 12px"" src=""var/uploads/Image/star.gif"" alt="" "" width=""12"" height=""12"" /><img style=""width: 12px; height: 12px"" src=""var/uploads/Image/starhalf.gif"" alt="" "" width=""12"" height=""12"" /><img style=""width: 12px; height: 12px"" src=""var/uploads/Image/starnone.gif"" alt="" "" width=""12"" height=""12"" /><img style=""width: 12px; height: 12px"" src=""var/uploads/Image/starnone.gif"" alt="" "" width=""12"" height=""12"" />
</p>
<p>
For the form to vote a new rating, the default template has the user pick a value from the dropdown list and then click a submit button. I thought many users would not realize they need to click the button so their vote would not get recorded. Also, the dropdown shows a default value of &quot;3&quot;, not sure why but some users might confuse that with the current total ratings value. So I eliminated the zero choice and the submit button, and added onchange=&quot;submit()&quot; to the &lt;select&gt;. That works very nicely :)<br />
</p>
<h2>Articles Templates</h2>
<p>
The next step is to update the Articles templates to show the current ratings and allow visitors to rate items.
</p>
<p>
For each pubtype which I wanted to allow rating, i edited its user-display-xxx.xt template. The current rating should be after the title, on the line where I show the date, author, and publication information. It turned out to look best if I floated it to the right, thus,
</p>
<p>
[code=xml]
&lt;div class=&quot;xar-sub&quot; style=&quot;float:right; font-style:italic; padding:0 0 1em 1em&quot; &gt;
#$hooks[&#39;ratings&#39;]# 
&lt;/div&gt;
[/code]
</p>
<p>
and then at the bottom of the template, skip the default location for this hook:
</p>
<p>
[code=xml]
&lt;xar:foreach in=&quot;$hooks&quot; key=&quot;$hookmodule&quot;&gt;
&lt;xar:if condition=&quot;$hookmodule eq &#39;ratings&#39;&quot;&gt;&lt;xar:continue /&gt;&lt;/xar:if&gt;  
#$hooks[$hookmodule]#
&lt;/xar:foreach&gt;
[/code]
</p>
<p>
Be sure the Articles Config for each pubtype has Show Ratings checked. 
</p>
<h2>Enable for Anon Visitors</h2>
<p>
By default anonymous visitors don&#39;t have permission to rate articles. I added a priv as follows to my priv group named &quot;CasualAccess&quot;:
</p>
<p>
name: RatingsVote<br />
module: Ratings<br />
Component: Item<br />
Level: Comment
</p>
<p>
That should do it so users can rate the articles and see the ratings on article display.
</p>
<h2>Ratings in the Article Summary Template</h2>
<p>
Well, I also want the ratings to show in the articles view / summary page. This wasn&#39;t as obvious. It seems the ratings user-display template is not called for item summaries (only item display). However, fortunately, the rating <em>value</em> is available.
</p>
<p>
So, to format the value, I created a new template in mytheme/modules/ratings/includes/displayratings.xt that shows the stars like the ratings/user-display.xt template, without the input form:
</p>
<p>
[code=xml]
&lt;xar:comment&gt; basically dups whats in ratings/user-display.xt, without the input form, for articles view/summary and blocks &lt;/xar:comment&gt;
&lt;xar:if condition=&quot;!empty($rating)&quot;&gt;
&lt;xar:set name=&#39;rating&#39;&gt;(int)($rating/2)&lt;/xar:set&gt;
&lt;xar:set name=&quot;intrating&quot;&gt;(int)($rating/10)&lt;/xar:set&gt;
&lt;xar:set name=&quot;fracrating&quot;&gt;$rating - (10*$intrating)&lt;/xar:set&gt;
&lt;xar:for start=&quot;$i = 0&quot; test=&quot;$i lt $intrating&quot; iter=&quot;$i++&quot;&gt;&lt;img src=&quot;themes/twindaction2/images/star.gif&quot; alt=&quot;star&quot; /&gt;&lt;/xar:for&gt;&lt;xar:if condition=&quot;$fracrating ge 5&quot;&gt;&lt;img src=&quot;themes/twindaction2/images/starhalf.gif&quot; alt=&quot;half star&quot; /&gt;&lt;xar:if condition=&quot;$i++&quot;&gt;&lt;/xar:if&gt;&lt;/xar:if&gt;&lt;xar:for start=&quot;$i&quot; test=&quot;$i lt 5&quot; iter=&quot;$i++&quot;&gt;&lt;img src=&quot;themes/twindaction2/images/starnone.gif&quot; alt=&quot;no star&quot; /&gt;&lt;/xar:for&gt;
&lt;/xar:if&gt;
[/code]
</p>
<p>
Then in each pubtype&#39;s summary template, I insert the following line where I want it to go:
</p>
<p>
[code=xml]
&lt;xar:template type=&quot;module&quot; module=&quot;ratings&quot; file=&quot;displayrating&quot; /&gt;
[/code]
</p>
<h2>Top Rated Items Block</h2>
<p>
The last step is to create a topitems block with the top rated items. 
</p>
<p>
I created a block, type articles/topitems, as follows:
</p>
<p>
name: toprated<br />
title: Top Rated<br />
number of items: 30<br />
all publication types: checked<br />
link to publication type: checked<br />
all categories: checked<br />
dynamic block title: unchecked (doesnt matter)<br />
sort by: Rating<br />
show sort value: checked<br />
show summary: (doesnt matter)<br />
status: All pubished 
</p>
<p>
and
</p>
<p>
Instance Template:  ;ratings
</p>
<p>
Then, I modified the default topitems.xd template, saved as mytheme/modules/articles/blocks/topitems-ratings.xt as follows:
</p>
<p>
[code=xml]
&lt;xar:if condition=&quot;!empty($items)&quot;&gt;
&lt;xar:foreach in=&quot;$items&quot; value=&quot;$item&quot;&gt;
&lt;xar:comment&gt;&lt;pre&gt;&lt;xar:set name=&quot;asdf&quot;&gt;print_r($item)&lt;/xar:set&gt;&lt;/pre&gt;&lt;/xar:comment&gt;
&lt;xar:set name=&quot;rating&quot;&gt;$item[&#39;rating&#39;]&lt;/xar:set&gt;
&lt;xar:if condition=&quot;$rating eq 0&quot;&gt;&lt;xar:continue /&gt;&lt;/xar:if&gt;
&lt;div style=&quot;padding:1em&quot;&gt;
&lt;xar:template type=&quot;module&quot; module=&quot;ratings&quot; file=&quot;displayrating&quot; /&gt;
&lt;xar:if condition=&quot;empty($item[&#39;link&#39;])&quot;&gt;
#$item[&#39;title&#39;]#
&lt;xar:else /&gt;
&lt;a href=&quot;http://www.vaporbase.com/index.php#$item[&#39;link&#39;]#&quot;&gt;#$item[&#39;title&#39;]#&lt;/a&gt;
&lt;/xar:if&gt;
&lt;span style=&quot;font-size:90%; color: #888&quot;&gt;
&lt;xar:set name=&quot;datestr&quot;&gt;xarModApiFunc(&#39;misctools&#39;,&#39;user&#39;,&#39;shortdate&#39;,array(&#39;date&#39;=&gt;$item[&#39;pubdate&#39;]))&lt;/xar:set&gt;
(#$datestr#)
&lt;xar:foreach in=&quot;$item[&#39;cids&#39;]&quot; value=&quot;$cid&quot;&gt;
&lt;xar:set name=&quot;isloc&quot;&gt;xarModAPIFunc(&#39;categories&#39;,&#39;user&#39;,&#39;isdescendant&#39;,array(&#39;cid&#39;=&gt;$cid, &#39;branch&#39;=&gt;&#39;53&#39;))&lt;/xar:set&gt;
&lt;xar:if condition=&quot;$isloc&quot;&gt;
&lt;xar:set name=&quot;locname&quot;&gt;urldecode(xarModAPIFunc(&#39;categories&#39;,&#39;user&#39;,&#39;cid2name&#39;,array(&#39;cid&#39;=&gt;$cid)))&lt;/xar:set&gt;
[#$locname#] 
&lt;/xar:if&gt;
&lt;/xar:foreach&gt;
&lt;span style=&quot;font-style:italic&quot;&gt;in &lt;a href=&quot;http://www.vaporbase.com/index.php#$item[&#39;pubtypename&#39;]#?sort=rating&quot;&gt;#$item[&#39;pubtypedescr&#39;]#&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;
&lt;xar:if condition=&quot;!empty($item[&#39;summary&#39;])&quot;&gt;
#xarModAPIFunc(&#39;misctools&#39;,&#39;user&#39;,&#39;truncate_string&#39;, array(&#39;string&#39; =&gt; $item[&#39;summary&#39;], &#39;length&#39; =&gt; &#39;50&#39;, &#39;type&#39; =&gt; &#39;1&#39;, &#39;alt_text&#39; =&gt; &#39;...&#39;))#
&lt;/xar:if&gt;
&lt;/div&gt;    
&lt;/xar:foreach&gt;
&lt;/xar:if&gt; 
[/code]
</p>
<p>
&nbsp;
</p>
<p>
This is probably more detail than anyone cares about but briefly, walking through the code,<br />
</p>
<ul>
	<li>dont do anything if there&#39;s no items</li>
	<li>loop through each item</li>
	<li>commented out the dump item data</li>
	<li>define a variable $rating from the current item</li>
	<li>if the rating is 0, then skip it (we only want to show rated items in this block)</li>
	<li>display the rating stars, using &lt;xar:template &gt; tag</li>
	<li>the rest is not related to this article but is (will be) discussed in another posting</li>
</ul>
<p>
See the results at http://www.windaction.org
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,2880,37,xaraya,"ratings,articles",Adding_ratings_to_articles
38,"Streaming Video","Some notes in my venture into posting streaming videos on the web.",3,1155951461,9,,0,"<h2>Capture the Video</h2>
<p>
Case 1: our digital camera (Kodak V530) captures jpg for still photos, and mov for short video clips.
</p>
<p>
&nbsp;
</p>
<h2>Edit the Video</h2>
<p>
I&#39;m on an iMac and used iVideo. It&#39;s not great but it provides basic functionality. 
</p>
<p>
I export the finished compostion to .mov format. 
</p>
<p>
Web Streaming: 12fps, 320x240, medium stereo sound, streaming hints 
</p>
<p>
Expert Settings: Quicktime MOV, compression H.264 (whatever that is, it was the default), high quality, 640x480 (full resolution), current  frame rate, keyframe every 24,  data rate automatic
</p>
<p>
&nbsp;
</p>
<h2>Convert MOV to FLV</h2>
<p>
Not everyone has the QuickTime player (Apple), in fact a lot don&#39;t. Same with AVI (Microsoft). But most people have Flash (Adobe/Macromedia), so the FLV format is more universal. And it turns out, their performance, quality, and compression are superb.
</p>
<p>
I couldn&#39;t find any open source or shareware tools that run on the iMac to convert MOV to FLV, so ended up purchasing Video2SWF from VerticalMoon. Its slower than molassis but at least it works.
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<h2>Referencees</h2>
<p>
http://www.videoguys.com/firewireq&amp;a.htm 
</p>
<p>
&nbsp;
</p>
",linoj,0,37,xaraya,"video,flv",Streaming_Video
37,"Waterfall verb","After a 2.5 mile hike to the waterfall, Dad experiences a quick descent.",3,1154935638,9,,2,"<div style=""text-align: center; padding-top: 1em"">
<!-- 
<object height=""350"" width=""425"">
	<param name=""movie"" value=""http://www.youtube.com/v/HnQbKITNjkA"">
	</param>
	<embed src=""http://www.youtube.com/v/HnQbKITNjkA"" width=""425"" height=""350"" type=""application/x-shockwave-flash""></embed>
</object>
-->
<!--
<embed src=""http://video.google.com/googleplayer.swf?docId=522965516600892186&amp;hl=en"" type=""application/x-shockwave-flash"" style=""width: 400px; height: 326px""></embed> 
</div>
-->
<embed src=""http://video.google.com/googleplayer.swf?docId=-5647101604062214265&amp;hl=en"" type=""application/x-shockwave-flash"" style=""width: 400px; height: 326px""></embed> 
<p>
Credits: Cameraman: Jarrett Linowes
</p>
<p>
&nbsp;
</p>
<p align=""left"">
Also available at: 
</p>
<ul>
	<li>
	<div align=""left"">
	You Tube: http://www.youtube.com/watch?v=HnQbKITNjkA
	</div>
	</li>
	<li>
	<div align=""left"">
	Google Video: http://video.google.com/videoplay?docid=522965516600892186
	</div>
	</li>
	<li>
	<div align=""left"">
	Google Video (high resolution): http://video.google.com/videoplay?docid=-5647101604062214265
	</div>
	</li>
</ul>
<div align=""left"">
<br />
</div>
<p align=""left"">
&nbsp;
</p>
</div>
",linoj,2734,39,musings,"family,nature",Waterfall_verb
36,"Messing with authid","Authorisation ID is used inside xaraya as a security measure to make sure bots are not submitting input that only humans should be. But sometimes it gets in the way or gets confused. Especially when current module space template calls a form in another module.",3,1154759492,9,,2,"<p>
If you&#39;re editing an item in Xaraya, and open another window to edit another item, and then go back to the first one and try to save it, you probably will get an error like
</p>
<p>
User Error<br />
Forbidden Operation<br />
The operation you are attempting is not allowed in the current circumstances.
</p>
<p>
This is cause by an &quot;expired&quot; authid- authorization ID.
</p>
<p>
According to &quot;random&quot;, &quot;in most UI screens there is a hidden authid var; it gets put there by the code that calls the template; when you submit and go to the next page that value gets looked for and examined&quot;.
</p>
<p>
Why?
</p>
<p>
&quot;to make sure it&#39;s a human entering the data; security measure against bots; makes sure the submit page is preceded by the input page; widely used in the codebase; &quot;
</p>
<p>
The code for the 2 relevant functions is at the end of xarSecurity.php
</p>
<ul>
	<li>function xarSecGenAuthKey($modName = NULL) </li>
	<li>function xarSecConfirmAuthKey($modName = NULL, $authIdVarName = &#39;authid&#39;)</li>
</ul>
<p>
The authid is made up of a random number + the current module name, and encrypted.
</p>
<p>
&nbsp;
</p>
$key = xarSessionGetVar(&#39;rand&#39;) . strtolower($modName);
// Encrypt key
$authid = md5($key);
<p>
&nbsp;
</p>
<h2>Why I Care</h2>
<p>
Aside from appreciating whats going on, I ran into a problem when including the roles modify profile form inside an xarpages page. I use the following tag in the xarpages template: 
</p>
&lt;xar:module main=&quot;false&quot; module=&quot;roles&quot; type=&quot;user&quot; func=&quot;usermenu&quot; phase=&quot;form&quot; /&gt;
<p>
It displayed, but when I edit and hit submit, I get the Forbidden error.
</p>
<p>
That&#39;s because I&#39;m currently in the Xarpages module, while the roles template is in the Roles module. The authid was generated in the function modules/roles/xaruser/usermenu.php (in the roles module). Thus, the authid did not match (xarpages vs roles). 
</p>
<p>
To fix it, I had to go into the template containing the form (user-user_menu_form.xt) and add the following lines at the top:
</p>
&lt;xar:set name=&quot;authid&quot;&gt;xarSecGenAuthKey(&#39;roles&#39;);&lt;/xar:set&gt;
<p>
<br />
This replaces the authid generated in usermenu.php. That worked.
</p>
<p>
&nbsp;
</p>
<h2>A Core Fix</h2>
<p>
jojo then suggests a more direct fix. Just pass the module name with the original call. So, instead of doing it in the template, I changed usermenu.php, line 79 (1.1.1) from
</p>
<p>
$authid = xarSecGenAuthKey();
</p>
<p>
to
</p>
<p>
$authid = xarSecGenAuthKey(&#39;roles&#39;); 
</p>
<p>
That worked too. But may not be the right solution. I posted a bug and a discussion ensued. <a href=""http://bugs.xaraya.com/show_bug.cgi?id=5864"">http://bugs.xaraya.com/show_bug.cgi?id=5864</a> 
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,2619,37,xaraya,"authid,security",Messing_with_authid
35,"Tabbed menus for xarpages","A simple change to get tabbed menus in xarpages.",3,1154672886,9,,2,"<p>
Lets say you have a hierarchy of xarpages one level deep. For example, an About page, with a set of child pages. And you want the children to appear on a horizontal tabbed block.
</p>
<p>
Actually, I haven&#39;t tried this with pages more than one level deep. So, first, make the About page an &quot;empty&quot; page, and put the pages you want underneath them. 
</p>
<h2>Create menu block </h2>
<p>
Create an xarpages menu block, as follows (for example):
</p>
<ul>
	<li>Module / Type : xarpages / menu</li>
	<li>Name: abouttabs</li>
	<li>Title: [empty]</li>
	<li>Instance Template: ;tabs   (that&#39;s semicolon-t-a-b-s)</li>
</ul>
<p>
press Create Instance, then what I did (your preferences might be different): 
</p>
<ul>
	<li>check Hide the root page</li>
	<li>Source of current page:  Default - force to use the default page</li>
	<li>Default page: About</li>
	<li>leave other settings at default values</li>
</ul>
<p>
and Update the block definition.
</p>
<h2>Create tabbed menu templates </h2>
<p>
Next, copy the file modules/xarpages/blocks/menu.xd to themes/mytheme/modules/xarpages/blocks/menu-tabs.xt, and edit as follows:
</p>
<ul>
	<li>line 19: change reference file=&quot;menu&quot; to file=&quot;menu-tabs&quot;  </li>
</ul>
<p>
Copy the file modules/xarpges/includes/menu.xd to themes/mytheme/modules/xarpages/includes/menu-tabs.xt, and edit as follows:
</p>
<ul>
	<li>line 35: change &lt;ul&gt; to &lt;dl class=&quot;xar-tabs&quot;&gt; <br />
	</li>
	<li>line 69: change &lt;li&gt; to &lt;dd&gt;</li>
	<li>line 102: change &lt;/li&gt; to &lt;/dd&gt;</li>
	<li>line 105: change &lt;/ul&gt; to &lt;/dl&gt;</li>
</ul>
<h2>Create xarpages item template with tab block</h2> 
<p>
Finally add the block to your template. For example, if you have a template mytheme/modules/xarpages/page-html.xt, you might copy it to mytheme/modules/xarpges/page-html-about.xt, add the following line to insert the block
</p>
<p>
&lt;xar:block instance=&quot;abouttabs&quot; /&gt;
</p>
<p>
Then, modify the About page (the parent page) with Item Template set to  &quot;about&quot; (references page-html-about.xt). (Status should be &quot;empty&quot;). Press Modify.<br />
</p>
<p>
That should do it. 
</p>
<p>
This technique uses the default xar-tabs class. Naturally you can override the styles of this class, or substitute a different one.
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,2180,37,xaraya,"xarpages,tabs",Tabbed_menus_for_xarpages
34,"Xarpages tips","If you don't know what xarpages is, this article won't be very interesting to you. ",3,1154669376,9,,2,"<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<h2>Page Title</h2>
<p>
Set the page title at the end of your xarpages template. If you include content from another module, especially if you do it using &lt;xar:template&gt; tags, the other module may set the page title. So make the call the xarTplSet at the bottom of your xarpages template to make sure your title is it.
</p>
<p>
I frequently have a separate textbox field named &quot;page_title&quot;. And if left blank, I will use page description field instead.
</p>
<p>
I also sometimes want the xarpages content to start with the same page title (rather than explicitly putting it into the body field). Thus, I put the title text into a variable at the top of the tempalate,
</p>
<p>
&lt;xar:comment&gt; define title ($ttl) early in case want to use it in h1 tag or something &lt;/xar:comment&gt; &lt;xar:if condition=&quot;!empty($current_page.dd.page_title)&quot;&gt;<br />
&lt;xar:set name=&quot;ttl&quot;&gt;#$current_page.dd.page_title#&lt;/xar:set&gt;<br />
&lt;xar:else /&gt;<br />
&lt;xar:set name=&quot;ttl&quot;&gt;#$current_page.desc#&lt;/xar:set&gt;<br />
&lt;/xar:if&gt;
</p>
<p>
body content might look like this,<br />
<br />
&lt;h1&gt;#$ttl#&lt;/h1&gt;<br />
&lt;div&gt;#$current_page.dd.body#&lt;/div&gt;
</p>
<p>
and then set the page title at the bottom of the template:
</p>
&lt;xar:comment&gt; set title last in case another module tried to set it, above &lt;/xar:comment&gt;&lt;xar:set name=&quot;dummy&quot;&gt;#xarTplSetPageTitle($ttl)#&lt;/xar:set&gt;
<p>
&nbsp;
</p>
<h2>Next / Previous Page</h2>
<p>
To provide links to the Next and Previous page in your xarpages tree, there are not any built-in api functions. But you can use this snippet. This code loops through the $pages array, setting the $pages internal pointer to the current one. Then uses the prev() and next() functions to get the pid of the prev and next pages in sequence.  
</p>
<p>
reset($pages);<br />
while (key($pages) != $pid)<br />
next($pages);<br />
prev($pages); //note, might be parent if this is first child<br />
$prev_pid = key($pages);<br />
next($pages);<br />
next($pages);<br />
$next_pid = key($pages);<br />
if ($prev_pid != NULL)<br />
$prev_url = xarModUrl(&#39;xarpages&#39;,&#39;user&#39;,&#39;display&#39;,array(&#39;pid&#39;=&gt;$prev_pid));<br />
if ($next_pid != NULL)<br />
$next_url = xarModUrl(&#39;xarpages&#39;,&#39;user&#39;,&#39;display&#39;,array(&#39;pid&#39;=&gt;$next_pid));
</p>
<p>
Note, this only works with child pages under a parent page, since it requires the $pages array to be populated. 
</p>
<p>
&nbsp;
</p>
<h2>
Default Variables ($args)</h2>
<p>
Always wonder (or just forget) what are the standard values in the xarpages funcapi $args, and passed to  the template?
</p>
<p>
Short answer:
</p>
<ul>
	<li>&#39;ancestors&#39; - array of ancestor pages relative to current<br />
	</li>
	<li>&#39;children&#39; - array of child pages relative to current<br />
	</li>
	<li>&#39;siblings&#39; - array of sibling pages relative to current<br />
	</li>
	<li>&#39;current_page&#39;  - the current page</li>
	<li>&#39;root_page&#39;</li>
	<li>&#39;child_refs&#39; - representation of relative hierarchies</li>
	<li>&#39;inherited&#39;    - the current page overlayed onto all ancestors</li>
	<li>&#39;pages&#39;         - all pages relevant to this page</li>
	<li>&#39;pid&#39;           - ID of the current page</li>
</ul>
<p>
Need more specifics? Of course you do...
</p>
<p>
<strong>$child_refs</strong> is an array of<br />
    &#39;keys&#39; - array ( pid =&gt; array of child (pid =&gt; pid) )<br />
    &#39;names&#39; - array ( pid =&gt; array of child (name =&gt; pid) )<br />
    &#39;pages&#39; - array ( pid =&gt; pagearray ) (see further down)
</p>
<p>
Each of these are arranged reflecting the page hierarchy. In this example, curent page is pid 40, and it&#39;s parent is pid 43, 
</p>
<pre>
[child_refs] =&gt; Array<br />
        (<br />
            [keys] =&gt; Array<br />
                (<br />
                    [0] =&gt; Array<br />
                        (<br />
                            [43] =&gt; 43<br />
                        )<br />
                    [43] =&gt; Array<br />
                        (<br />
                            [40] =&gt; 40<br />
                            [44] =&gt; 44<br />
                            [41] =&gt; 41<br />
                        )<br />
                )<br />
<br />
            [names] =&gt; Array<br />
                (<br />
                    [0] =&gt; Array<br />
                        (<br />
                            [testform] =&gt; 43<br />
                        )<br />
                    [43] =&gt; Array<br />
                        (<br />
                            [testform1] =&gt; 40<br />
                            [testform1-action] =&gt; 44<br />
                            [testform2] =&gt; 41<br />
                        )<br />
                )<br />
<br />
            [pages] =&gt; Array<br />
                (<br />
                    [0] =&gt; Array<br />
                        (<br />
                            [43] =&gt; Array ( pagearray )<br />
 <br />
                   [43] =&gt; Array<br />
                        (<br />
                            [40] =&gt; Array ( pagearray )<br />
                            [44] =&gt; Array ( pagearray )<br />
                            [41] =&gt; Array ( pagearray )<br />
                        )<br />
                )
</pre>
<pre>
 
</pre>
<pre>
<strong>$ancestors </strong>is an index array of pagearrays. 
</pre>
<pre>
In the current example, it&#39;s 
</pre>
<pre>
[ancestors] =&gt; Array<br />
        (<br />
            [0] =&gt; pagearray 43<br />
            [1] =&gt; pagearray 40<br />
        )
</pre>
<p>
<strong>$root_page</strong> is a pagearray of the root page
</p>
<p>
In the current example, it&#39;s 43
</p>
<p>
<strong>$children</strong> is an array of child pagearrays. In the current example it&#39;s null
</p>
<p>
<strong>$siblings</strong> is an array of sibling pagearrays.
</p>
<p>
In the current example, it&#39;s 
</p>
<pre>
[siblings] =&gt; Array<br />
        (<br />
            [40] =&gt; pagearray<br />
            [44] =&gt; pagearray<br />
            [41] =&gt; pagearray<br />
   <br />
<strong>$inherited</strong> is a pagearray. In the current example it&#39;s 40.
</pre>
<p>
<strong>$pages</strong> is a flat key array( $pid =&gt; pagearray ) of the pages mentioned above
</p>
<p>
In this example it&#39;s
</p>
<pre>
[pages] =&gt; Array<br />
        (<br />
            [43] =&gt; pagearray<br />
            [40] =&gt; pagearray<br />
            [44] =&gt; pagearray<br />
            [41] =&gt; Array<br />
</pre>
<p>
<strong>pagearray</strong> is something like this:
</p>
<pre>
                    [pid] =&gt; 43<br />
                    [key] =&gt; 43<br />
                    [name] =&gt; testform<br />
                    [desc] =&gt; <br />
                    [itemtype] =&gt; 5<br />
                    [ptid] =&gt; 5<br />
                    [parent_key] =&gt; 0<br />
                    [parent_pid] =&gt; 0<br />
                    [left] =&gt; 68<br />
                    [right] =&gt; 75<br />
                    [template] =&gt; <br />
                    [page_template] =&gt; <br />
                    [theme] =&gt; <br />
                    [status] =&gt; EMPTY<br />
                    [encode_url] =&gt; <br />
                    [decode_url] =&gt; <br />
                    [function] =&gt; <br />
                    [pagetype] =&gt; Array<br />
                        (<br />
                            [ptid] =&gt; 5<br />
                            [name] =&gt; pageform<br />
                            [desc] =&gt; <br />
                        )<br />
<br />
                    [dd] =&gt; Array<br />
                        (<br />
                            [body] =&gt; <br />
                            [data] =&gt; 11<br />
                            [redirect_next] =&gt; 0<br />
                        )<br />
<br />
                    [child_keys] =&gt; Array<br />
                        (<br />
                            [40] =&gt; 40<br />
                            [44] =&gt; 44<br />
                            [41] =&gt; 41<br />
                        )<br />
<br />
                    [depth] =&gt; 0<br />
                    [pidpath] =&gt; Array<br />
                        (<br />
                            [0] =&gt; 43<br />
                        )<br />
<br />
                    [namepath] =&gt; Array<br />
                        (<br />
                            [43] =&gt; testform<br />
                        )<br />
<br />
                    [has_children] =&gt; 1<br />
                    [is_ancestor] =&gt; 1<br />
                )<br />
<br />
</pre>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,2142,37,xaraya,xarpages,Xarpages_tips
33,"Funniest pictures i've seen in a long time",,3,1154665265,9,,2,"<p>
I happened upon this site tonight, and ended up wasting a hour or 2 going through it
</p>
<p>
<a href=""http://outhouserag.typepad.com/outhouserag/photo/"">http://outhouserag.typepad.com/outhouserag/photo/</a>
</p>
<p>
&nbsp;
</p>
<p>
A few other funnies (today was a good day for not getting work done)
</p>
<p>
&nbsp;
</p>
<p>
&quot;The Powerbook Prank: He wanted a Powerbook. We gave him a P-P-P-Powerbook!&quot; <a href=""http://www.zug.com/pranks/powerbook/"">http://www.zug.com/pranks/powerbook/</a>
</p>
<p>
&nbsp;
</p>
<p>
&quot;YouTube - Testing a water bed&quot; <a href=""http://www.youtube.com/watch?v=rtODpwDbHvg&amp;NR"">http://www.youtube.com/watch?v=rtODpwDbHvg&amp;NR</a> 
</p>
<p>
&nbsp;
</p>
<p>
ok, enough of that...
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,3042,39,musings,,Funniest_pictures_i%27ve_seen_in_a_long_time
32,"Approaching 1:N relationships","Alot has been written on xaraya postings on how to implement 1:N relationships of items. As I am visiting the issue myself now, I'm taking notes.",3,1154539284,9,,0,"<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,0,37,xaraya,"dynamic data,articles",Approaching_1%3AN_relationships
31,"quotes I like","Just some clever quotables",3,1154484117,9,,0,"<p>
In theory, there is no difference between practice and theory.
</p>
<p>
In practice, there is. 
</p>
<hr />
<p>
&quot;the difference between sheep and goats is.... sheep fall into trouble and<br />
goats go looking for it&quot;
</p>
<hr />
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,0,39,musings,,quotes_I_like
30,"Construction of vaporbase.com site - a case study","This is a very basic xaraya-based site. After building many sites, I decided to try and write up what I did to get this one going, soup to nuts.",3,1154121995,9,,0,"<ul>
	<li><br />
	</li>
</ul>
<h2>Install New Project Directory - vapor</h2>
<p>
&nbsp;
</p>
<p>
Modules used: (deactive and uninstall others)
</p>
<p>
&nbsp;
</p>
<p>
Articles pubtypes: delete all
</p>
<p>
Categories: delete all
</p>
<p>
&nbsp;
</p>
<h2>Create New Project Theme - tvapor</h2>
<p>
&nbsp;
</p>
<h2>Page Structure</h2>
<p>
&nbsp;
</p>
<h2>Banner Header</h2>
<p>
&nbsp;
</p>
<h2>Footer</h2>
<p>
&nbsp;
</p>
<h2>Home Body</h2>
<p>
&nbsp;
</p>
<h2>Content Body</h2>
<p>
&nbsp;
</p>
<h2>Posting Pubtype</h2>
<p>
&nbsp;
</p>
<h2>Categories Module<br />
</h2>
<p>
&nbsp;
</p>
<h2>Tinymce Module</h2>
<p>
&nbsp;
</p>
<h2>Keywords Module </h2>
<p>
&nbsp;
</p>
<h2>Xarpages Module </h2>
<p>
&nbsp;
</p>
<h2>
RSS 
</h2>
<p>
Install modules:
</p>
<ul>
	<li>
	xmlrpcserver</li>
	<li>bloggerapi
	</li>
</ul>
<p>
(which may install some other modules)
</p>
<p>
Configure bloggerapi
</p>
<ul>
	<li>
	publication type: postings</li>
	<li>draft state: submitted</li>
	<li>published state: approved
	</li>
</ul>
<p>
And add link to leftmenu.xt, with rss icon, to &quot;postings?theme=rss&quot; 
</p>
<p>
&nbsp;
</p>
<h2>
Publish Live
</h2>
<p>
&nbsp;
</p>
",linoj,0,37,xaraya,"setup theme",Construction_of_vaporbase.com_site_-_a_case_study
29,"Dog caught driving 4-wheeler",,3,1154118489,9,,2,"<p>
Under-aged dog named Nikki gives two humans a ride on four-wheeler.
</p>
<div style=""text-align: center"">
 
</div>
<div style=""text-align: center"">
<img style=""width: 400px; height: 271px"" src=""var/uploads/Image/nikki-4wheeler.jpg"" alt=""Nikki the dog driving red 4-wheeler"" width=""400"" height=""271"" />
</div>
<br />
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,7840,39,musings,family,Dog_caught_driving_4-wheeler
28,"Misc notes about tinymce","tinymce is an open source browser-based wysiwyg html editor. xartinymce is a module that integrates it into xaraya. These are random notes about setting up and using it.",3,1154114441,9,,2,"<p>
This little article is fractured, incomplete, and certainly no substitute for the XarTinyMCE documentation, as found on the module&#39;s admin pages, the readme (/modules/tinymce/README.TXT) and doc files (modules/tinymce/xarincludes/docs/index.html)
</p>
<p>
&nbsp;
</p>
<h2>Non-GUI Configuration</h2>
<p>
To configure, copy the file in
/modules/tinymce/xartemplates/includes/tinymceconfig.inc into
/var/tinymce/tinymceconfig.inc and make your custom changes there.<br />
</p>
<p>
&nbsp;
</p>
<h2>Filebrowser vs iManager</h2>
<p>
TinyMCE includes multiple ways to insert external images and links into your content.
</p>
<p>
<strong>Filebrowser</strong> - directly integrated with TinyMCE, for file browsing and uploading for eg images, links, flash plugins 
</p>
<p>
<strong>iManager</strong> -  
</p>
<p>
&nbsp;
</p>
<h2>Configuring Filebrowser</h2>
<p>
In TinyMCE configuration, Advanced Theme Options:
</p>
<ul>
	<li>Check - use integrated Filebrowser</li>
	<li>Names of Plugins to Load: add advimage, advlink and/or flash plugin</li>
	<li>if you Build Your Own Layout of toolbar buttons, add &quot;image&quot; button (otherwise it&#39;s there by default) </li>
</ul>
<p>
In var/tinymce/tinymceconfig.inc,
</p>
<p>
$cfg[&#39;filebrowser_dir&#39;]= &#39;var/uploads/&#39;; //Filebrowser will look for images here and create allowed types directories<br />
</p>
<p>
Additionally you can constrain the uploads to specific file types and extensions. See tinymceconfig.inc for details.
</p>
<p>
&nbsp;
</p>
<h2>iBrowser, iManager, filebrowser</h2>
<p>
Built-in file browser for wysiwyg editing mode.
</p>
<ul>
	<li>load the iBrowser / iManager plug-ins (Advanced Config)</li>
	<li>add iBrowser / iManager buttons (Advanced Config)</li>
	<li>setup a var/tinymce/tinymceconfig.inc, edit the config for pathnames etc</li>
	<li>if you enable file manager, it will be available to those plugins that use it (such as adv-link for attaching files etc.)</li>
	<li>or adv-image<br />
	</li>
	<li>be sure &lt;img&gt; tag is enabled in HTML module</li>
	<li><br />
	</li>
</ul>
<p>
as to which to use, depends on what you are doing..... if just dropping in an image, no fancy popups, masking etc... then adv-image or iBrowser should be fine
</p>
<p>
if you want pop-ups, masking, croping, adding over/underlays etc.... iManager
</p>
<p>
I can get browser and manager.... but I can&#39;t get advimage with one of those as well<br />
[10:05a] Autocrat: so adv-image... OR ibrowser OR imanager or ibrowser and imanager  (so far any ways...)
</p>
<p>
&nbsp;
</p>
<h2>iBrowser / iManager for Dynamic Image Libraries</h2>
<p>
in tinymceconfig.inc:
</p>
<p>
$cfg[&#39;ilibs_dir&#39;]      = array(&#39;/mysite/var/uploads/&#39;); // image library path with slashes; absolute to xar root directory - please make sure that the directories have write permissions<br />
$cfg[&#39;ilibs_dir_show&#39;] = true;                  // show main library (true) or only sub-dirs (false)<br />
//You must uncomment the following to get dynamic library creation and scanning<br />
$cfg[&#39;ilibs_inc&#39;]      = &#39;scripts/rdirs.php&#39;;   // uncomment to allow dynamic file library<br />
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<h2>Spell Checking</h2>
<p>
There are two plug-ins for spell checking: iespell and spellchecker. 
</p>
<p>
As the name suggests, iespell is for Internet Explorer only using the spell checker built into IE. When enabled and in the icon toolbar, the icon only appears when you&#39;re using IE. 
</p>
<p>
spellchecker is a more generic, browser-independent spell checker that can use one of several spell check engines, including: aspell and Google. I&#39;ve never used or tried to install <a href=""http://aspell.sourceforge.net/"">aspell</a> , an open source GNU project, yet.
</p>
<p>
So Google seemed like the easiest way to go. 
</p>
<p>
To configure spellchecker, edit the file /modules/tinymce/xarincludes/plugins/spellchecker/config.php . Under &quot;Spellchecker class to use&quot; comment out all but the Google one.
</p>
<p>
Actually, I never did get this working either because the Google service does not seem to work on servers behind a proxy.  
</p>
<p>
Oh well, I guess we&#39;re stuck with &quot;spell checking only works under IE&quot; for now.
</p>
<p>
Note, when you have both iespell and spellchecker icons on the toolbar, the iespell one disappears when not using IE, but the spellchecker one is always there, so under IE you&#39;ll have 2 spell check icons. 
</p>
<p>
&nbsp;
</p>
<h2>Misc Plug-ins </h2>
<p>
Don&#39;t use the fullpage plugin. (This is not the same as the fullscreen plugin for opening up the editor full screen.) Rather, fullpage creates a stand alone html page, including &lt;head&gt; and &lt;body&gt; tags, etc.
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,3544,37,xaraya,tinymce,Misc_notes_about_tinymce
26,"Managing user variables","There are a bunch of different ways to keep data and pass them around between modules, pages, and sessions. I've collected my notes in one place, here.",3,1153841922,9,,2,"<p>
Xaraya uses different kinds of variables for different purposes: 
</p>
<ul>
	<li>Configuration vars - site wide configuration options</li>
	<li>Module vars - module specific configuration options</li>
	<li>Theme variables - theme-dependent variables</li>
	<li>Module User vars - user-dependent overrides for the module variables above</li>
	<li>User variables - user-dependent values (must be defined in roles/DD)</li>
	<li>Session variables - preferences etc specific for one user esssion</li>
	<li>Cached variables - temporary values cached for the duration of a page request (replaces GLOBALS in php)</li>
</ul>
<p>
I won&#39;t further describe the first 3 because I dont see anyone using them via templates or API (just the default admin templates). The others may be useful in various applications.  
</p>
<p>
Deciding which variable type to use depends on your situation and &quot;who owns&quot; the variable.
</p>
<p>
&nbsp;
</p>
<h2>Cached Vars </h2>
<p>
For sharing variables between modules and templates for the duration of a single page request (replaces GLOBALS in php). 
</p>
<p>
Cached vars are organized into separate &#39;collections&#39;. Each module for example may have its own variable cache. You too can make your own variable cache, or just use an existing one( like &#39;base&#39;).
</p>
<p>
xarVarSetCached( &#39;mycache&#39;, &#39;varname&#39;, $val )
</p>
<p>
$val = xarVarGetCached( &#39;mycache&#39;, &#39;varname&#39; )
</p>
<p>
Note, when using this its important to keep in mind the order in which templates are processed. The current order of execution is
</p>
<ol>
	<li>module function</li>
	<li>module function template</li>
	<li>page template</li>
	<li>blocks in page template (by group)  </li>
</ol>
<br />
<h2>Session Vars </h2>
<p>
If you want variables to persist across pages within the current session
</p>
<p>
xarSessionSetVar( &#39;varname&#39;, $val )
</p>
<p>
$val = xarSessionGetVar( &#39;varname&#39; )
</p>
<p>
xarSessionDelVar( &#39;varname&#39; ) 
</p>
<p>
&nbsp;
</p>
<h2>User Vars</h2>
<p>
for accessing values associated with the current user as stored in the Roles module, including vars in the default roles profile, and any extended with dynamicdata hooks.<br />
</p>
<p>
xarUserSetVar( &#39;varname&#39;, $val ) 
</p>
<p>
$val = xarUserGetVar( &#39;varame&#39; )
</p>
<p>
Examples: 
</p>
<p>
$uid = xarUserGetVar( &#39;uid&#39; );
</p>
<p>
Default roles vars:
</p>
<ul>
	<li>uid - id number of  the user <br />
	</li>
	<li>uname - handle or nick, must be unique </li>
	<li>name - display name, eg full name shown in user list<br />
	</li>
	<li>email</li>
	<li>userhome - users home page, shown when logs in</li>
	<li>primaryparent - main parent group takes precedence for group home page etc</li>
	<li>passwordupdate - date time of password last changed</li>
	<li>userlastlogin - date time of last login<br />
	</li>
</ul>
<p>
&nbsp;
</p>
<h2>
Module User Vars</h2>
<p>
User-specific variables can be stored on a module by module basis.  This is basically the same as xarModSetVar, but this allows for setting variable values which are tied to a specific user for a certain module.  Typical usage is storing user preferences. Only deviations from the module vars are stored.<br />
</p>
<p>
First, you have to create the variable in the db for the module, e.g.
</p>
<p>
xarModSetUserVar( &#39;roles&#39;, &#39;formcompleted&#39;, 0 )
</p>
<p>
call this only once for each new user. Then to access it,
</p>
<p>
$val = xarModGetUserVar( &#39;modname&#39;, &#39;varname&#39; )
</p>
<p>
xarModSetUserVar( &#39;modname&#39;, &#39;varname&#39;, $val ) 
</p>
<p>
<strong>function xarModSetUserVar($modName, $name, $value, $uid=NULL)</strong>
</p>
<p>
<strong>function xarModGetUserVar($modName, $name, $uid = NULL, $prep = NULL)</strong> 
</p>
<p>
<strong>function xarModDelUserVar($modName, $name, $uid=NULL)</strong> 
</p>
<p>
* @param modName The name of the module to set a user variable for<br />
 * @param name    The name of the variable to set<br />
 * @param value   Value to set the variable to.<br />
 * @param uid     User id for which value needs to be set<br />
 * @return bool true on success false on failure<br />
 
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,3081,37,xaraya,"sessions,user vars",Managing_user_variables
25,"Checking URL link integrity","It's a little confusing so here are instructions I wrote for clients describing how to use the Xaraya Sitetools Check Links tool.",3,1153519344,9,,2,"<p>
Check Links is a tool built into Xaraya for ensuring the integrity of the links in URL fields. Any article that has a web address in Web Link field will be checked.  Note, it does not check for links created inside text content itself, including the summary and body fields.
</p>
<p>
To begin,
</p>
<p>
Go to Check Links (Admin &gt; Miscellaneous &gt; Sitetools &gt; Check Links)
</p>
<p>
<br />
1. Choose which set of links you want to check,<br />
For example, if you want to check all the url&#39;s in a specific publication type, check all the boxes in that column and leave all the other boxes unchecked.
</p>
<p>
2. Click Find Links to collect the list of links in your search criteria.
</p>
<p>
3. Click Check Links to then check the status of each of the links in your selection set.<br />
This may take some time. Clicking the &quot;Refresh&quot; link (or reloading the page) will show the status of the check, eg &quot;160/241 links checked)
</p>
<p>
4. When the check is done the table shows the status code returned when the url was tested.
</p>
<p>
5. Click Show Broken Links Only. This will filter out the 200
</p>
<p>
6. Go through the list , update the url&#39;s that need fixing. <br />
Note on some sites you might need to scroll horizontally to see all the columns, as some URL&#39;s are long and may stretch the Link column width.
</p>
<p>
7. To retest using the same search criteria, to check the results of your updates, repeat from step 3.<br />
<br />
Status<br />
-1: unknown (ignore)<br />
0:  not checked yet<br />
200: ok<br />
301: permanent redirect (fix these)<br />
302: temporary redirect (leave these)<br />
4xx ones are probably broken<br />
5xx: may be a temporary server error (their server) unless the site doesnt exist any more<br />
See http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html<br />
<br />
<br />
<br />
</p>
",linoj,2219,37,xaraya,"sitetools weblinks",Checking_URL_link_integrity
24,"Working with Images in Xaraya","I keep collecting lots of disparate tidbits on how to use images as content in xaraya. This article is a bucket.",3,1153510661,9,,2,"<p>&nbsp;</p> <p>&nbsp;</p> <h2>Articles Module</h2> <p> A great reference by example is the default &#39;picture&#39; pubtype. Look at the user-display-picture.xd file for example. </p> <p> In general, we&#39;re talking about hooking both the Uploads module, and the Images module to Articles. I don&#39;t bother with any other combination. </p> <p> In this case the image uploads field contains something like this &quot;;602&quot;  The semicolon is (i think) a legacy to distinguish this from an &quot;older&quot; way of representing. But if you have mutlselect images, this value will represent an array. The &quot;602&quot; is the file id. </p> <p> Simple template code: </p>   <pre>&lt;xar:set name=&quot;img_output&quot;&gt;current( xarModAPIFunc( &#39;uploads&#39;, &#39;user&#39;, &#39;showoutput&#39;, <br />        array( &#39;value&#39;=&gt;$img, &#39;multiple&#39;=&gt;false) ) )&lt;/xar:set&gt;<br />&lt;xar:set name=&quot;img_file&quot;&gt;current($img_output)&lt;/xar:set&gt;<br />&lt;xar:image-resize src=&quot;$img_file[fileId]&quot; width=&quot;100px&quot; height=&quot;100px&quot;<br />        constrain=&quot;yes&quot; label=&quot;my image&quot; /&gt; <br /> </pre> <p> Notes: showoutput returns an array. We use current() to get the first one. In the image tag, src= will give an error unless you leave out the single quotes on the array key </p> <h2>Xarpage Module</h2><pre>&lt;xar:if condition=&quot;isset($current_page.dd.main_image)&quot;&gt;</pre><pre>    &lt;xar:set name=&quot;img_output&quot;&gt;current( xarModAPIFunc( &#39;uploads&#39;, &#39;user&#39;, &#39;showoutput&#39;, </pre><pre>        array( &#39;value&#39;=&gt;$current_page[&#39;dd&#39;][&#39;main_image&#39;],  &#39;multiple&#39;=&gt;false ) ) )&lt;/xar:set&gt; </pre><pre>    &lt;div id=&quot;xb-page-image&quot;&gt; </pre><pre>        &lt;img src=&quot;#$img_output[&#39;fileURL&#39;]#&quot; /&gt;</pre><pre>    &lt;/div&gt;<br />&lt;/xar:if&gt; </pre><p>&nbsp;</p> <p> Note: I used to use </p> <pre>&lt;img src=&quot;#$img_output[&#39;fileLocation&#39;]#&quot; /&gt; </pre> <p> which has a value something like &quot;var/uploads/myimage.jpg&quot;. But this doesnt work if you&#39;ve uploaded a file with a duplicate file name, so the location is more like .jpg_3 , the img tag doesn&#39;t work then. So you&#39;d better use the fileURL instead of a physical location. </p> <p> However, &#39;fileURL&#39; is really much slower than &#39;fileLocation&#39; so if you can configure Uploads to now allow duplicates, use &#39;fileLocation&#39;. </p> <h2> &quot;Unable to save resized image&quot;</h2> <p> If you see this on your page, its generated by the xar:image-resize tag, and could mean a number of different things: </p> <ul> 	<li>the data fed to image-resize is bad. For example, if the field isn&#39;t really a file uploads type, doesn&#39;t contain a valid uploads info (e.g. &quot;;123&quot;), <br /> 	</li> 	<li>the field is getting transformed (e.g. a body or summary field). You can turn off transforms in the pubtype config, unhook any transforming modules, and/or strip tags from the field first (such as &lt;xar:set name=&quot;body&quot;&gt;strip_tags($body)&lt;/xar:set&gt;</li> 	<li>the derivative directory doesnt exist or not enough permissions. Make sure the Images module is configured for a valid derivatives directory. And make sure your web server has read/write/execute permission (e.g. try chmod 777 but dont necesssarily leave it that way!) </li> </ul> <h2>Image Tags </h2> <p> use &lt;xar:image-resize&gt; with the data from abc_output if you want to resize it </p> <p> * Format : &lt;xar:image-resize src=&quot;fileId | URL&quot; width=&quot;[0-9]+(px|%)&quot; [height=&quot;[0-9]+(px|%)&quot; constrain=&quot;(yes|true|1|no|false|0)&quot;] label=&quot;text&quot; /&gt; </p> <p> * examples: </p> <p> * &lt;xar:image-resize src=&quot;32&quot; width=&quot;50px&quot; height=&quot;50px&quot; label=&quot;resize an image using pixels&quot; /&gt; </p> <p> NOTE: uses the admin api function resize_image  </p> <p> *  &lt;xar:image-resize src=&quot;somedir/some_image.jpg&quot; width=&quot;25%&quot; constrain=&quot;yes&quot; label=&quot;resize an image using percentages&quot; /&gt; </p> <p> * &lt;xar:image-resize src=&quot;32&quot; setting=&quot;JPEG 800 x 600&quot; label=&quot;process an image with predefined setting&quot; /&gt; </p> <p> * &lt;xar:image-resize src=&quot;32&quot; params=&quot;$params&quot; label=&quot;process an image with phpThumb parameters&quot; /&gt; </p> <p> NOTE: this one uses phpthumb library<br /> </p> <p> *<br /> * @param $args array containing the image that you want to resize and display<br /> * @return string the PHP code needed to invoke resize() in the BL template<br /> </p> <h3>Set phpthumb filters using the params arg to image-resize</h3>zoom crop (resize so min size fills thats dimension, then crop off the extra image from other dimension)  <pre>&lt;xar:set name=&quot;thumbparam&quot;&gt;array(&#39;w&#39;=&gt;100, &#39;h&#39;=&gt;100, &#39;zc&#39;=&gt;1)&lt;/xar:set&gt;  </pre> <p> fit image so it fits within the dimensions, preserving aspect ratio, centered, using background color for margin (like watching a widescreen video on a normal set)  </p> <pre>&lt;xar:set name=&quot;thumbparam&quot;&gt;array(&#39;w&#39;=&gt;100, &#39;h&#39;=&gt;100, &#39;far&#39;=&gt;1)&lt;/xar:set&gt; </pre> <pre>baraboom: &lt;xar:set name=&quot;param&quot;&gt;array(&#39;zc&#39; =&gt; 1, &#39;w&#39; =&gt; 180, &#39;h&#39; =&gt; 180, </pre><pre>&#39;fltr&#39; =&gt; array(&#39;/home/httpd/vhosts/path/htm//themes/gfx/activity_blog_thumb.png&#39;))&lt;/xar:set&gt;</pre><p> <br /> See images/xardocs/phpthumb.readme.txt for options. </p> <h2>Sample Dump of Img_Output</h2> <pre>Array(     [fileId] =&gt; 602     [userId] =&gt; 3     [userName] =&gt; Administrator     [fileName] =&gt; 100_3671.JPG     [fileLocation] =&gt; var/uploads/100_3671.JPG_1     [fileSize] =&gt; 554365     [fileStatus] =&gt; 2     [fileType] =&gt; image/jpeg     [fileTypeInfo] =&gt; Array(         [typeId] =&gt; 5         [subtypeId] =&gt; 155         )     [storeType] =&gt; 3     [mimeImage] =&gt; modules/mime/xarimages/image-jpeg.png     [fileDownload] =&gt; http://localhost/alumbiz/?module=uploads&amp;func=download&amp;fileId=602     [fileURL] =&gt; http://localhost/alumbiz/?module=uploads&amp;func=download&amp;fileId=602     [DownloadLabel] =&gt; Download file: 100_3671.JPG     [fileModified] =&gt; 1164862446     [fileDirectory] =&gt; imports     [fileHash] =&gt; 100_3671.JPG_1     [fileHashName] =&gt; imports/100_3671.JPG_1     [fileHashRealName] =&gt; imports/100_3671.JPG     [fileStatusName] =&gt; Approved     ) </pre> <p>&nbsp;</p> <h2>Here&#39;s another nice snippet of template code</h2> <pre>&lt;xar:if condition=&quot;xarModIsHooked(&#39;uploads&#39;,&#39;articles&#39;,$pubtypeid) and substr($body,0,1) eq &#39;;&#39;&quot;&gt;<br />    &lt;xar:set name=&quot;img_output&quot;&gt;xarModAPIFunc(&#39;uploads&#39;,&#39;user&#39;,&#39;showoutput&#39;,array(&#39;value&#39; =&gt; $body, &#39;multiple&#39; =&gt; true))&lt;/xar:set&gt;<br />    &lt;xar:foreach in=&quot;$img_output&quot; key=&quot;$fileId&quot; value=&quot;$fileInfo&quot;&gt;<br />        &lt;a href=&quot;http://www.vaporbase.com/index.php#$fileInfo[&#39;fileDownload&#39;]#&quot; title=&quot;#xarMl(&#39;View full sized image&#39;)#&quot;&gt;<br />        &lt;xar:if condition=&quot;xarModIsAvailable(&#39;images&#39;)&quot;&gt;<br />            &lt;xar:set name=&quot;file&quot;&gt;$fileInfo&lt;/xar:set&gt;<br />            &lt;!-- &lt;xar:image-resize src=&quot;$file[fileId]&quot; label=&quot;$title&quot; width=&quot;400px&quot; constrain=&quot;true&quot;/&gt; --&gt;<br />            &lt;xar:image-resize src=&quot;$file[fileId]&quot; label=&quot;$title&quot; setting=&quot;jpg400x400&quot;/&gt;<br />        &lt;xar:else /&gt;<br />            &lt;img src=&quot;#xarModURL(&#39;uploads&#39;, &#39;user&#39;, &#39;download&#39;, array(&#39;fileId&#39; =&gt; $fileInfo[&#39;fileId&#39;]))#&quot;  width=&quot;100%&quot; alt=&quot;#$title#&quot; id=&quot;thephoto&quot; /&gt;<br />        &lt;/xar:if&gt;<br />        &lt;/a&gt;<br />        &lt;br /&gt;<br />        &lt;span class=&quot;xar-sub&quot;&gt;Click to download full sized image&lt;/span&gt;<br />        &lt;xar:set name=&quot;size&quot;&gt;xarModAPIFunc(&#39;misctools&#39;,&#39;user&#39;,&#39;human_file_size&#39;, array(&#39;size&#39;=&gt;$fileInfo[&#39;fileSize&#39;]))&lt;/xar:set&gt;<br />        &lt;xar:set name=&quot;finfo&quot;&gt;xarModAPIFunc(&#39;images&#39;,&#39;user&#39;,&#39;getimageinfo&#39;,array(&#39;fileId&#39;=&gt;$fileInfo[&#39;fileId&#39;]))&lt;/xar:set&gt;<br />        &lt;table&gt;<br />            &lt;tr&gt;&lt;td align=&quot;right&quot;&gt;File name: &lt;/td&gt;&lt;td&gt;#$fileInfo[&#39;fileName&#39;]#&lt;/td&gt;&lt;/tr&gt;<br />            &lt;tr&gt;&lt;td align=&quot;right&quot;&gt;File size: &lt;/td&gt;&lt;td&gt;#$size#&lt;/td&gt;&lt;/tr&gt;<br />            &lt;xar:if condition=&quot;!empty($finfo[&#39;imageWidth&#39;])&quot;&gt;<br />                &lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Width x Height:&lt;/td&gt;&lt;td&gt;#$finfo[&#39;imageWidth&#39;]# x #$finfo[&#39;imageHeight&#39;]# pixels&lt;/td&gt;&lt;/tr&gt;<br />            &lt;/xar:if&gt;<br />        &lt;/table&gt;<br />    &lt;/xar:foreach&gt;<br />&lt;xar:else /&gt;<br />    &lt;img src=&quot;#$body#&quot; border=&quot;0&quot; alt=&quot;#$title#&quot; id=&quot;thephoto&quot; /&gt;<br />&lt;/xar:if&gt;<br /> </pre> <p>&nbsp;</p> <p>&nbsp;</p> <h2>Replacing the uploaded image with a resized one</h2> <p> This tag displays the original uploaded image: </p> <pre>&lt;img src=&quot;#$img_output[&#39;fileURL&#39;]#&quot; /&gt; <br /> </pre> <p> This tag displays the resized image from the derivative directory:  </p> <pre>&lt;xar:image-resize src=&quot;$img_output[fileId]&quot; width=&quot;100px&quot; height=&quot;100px&quot; constrain=&quot;yes&quot; label=&quot;my image&quot; /&gt; </pre> <p> I&#39;m not sure what happens if you delete the original (e.g via admin interface or commandline) , whether this tag will still work.<br /> </p> <p> But if you really want to replace the uploaded image with the resized one, you can use the replace_image api: </p> <pre>&lt;xar:set name=&quot;loc&quot;&gt;xarModApiFunc(&#39;images&#39;,&#39;admin&#39;,&#39;replace_image&#39;,  array(&#39;fileId&#39;=&gt;$img_output[&#39;fileId&#39;], &#39;width&#39;=&gt;&#39;100px&#39;, &#39;height&#39;=&gt;&#39;100px&#39;, &#39;constrain&#39;=&gt;&#39;1&#39;))&lt;/xar:set&gt;  </pre> <p> Unfortunately the constrain does not seem to work when both width and height are specified.  </p> <p> This uses some &quot;old&quot; api, which calls gd (or your other image libraries) directly, it does not call phpThumb.  </p> <p> Analysis of the code: </p> <p> replace_image calls resize_image, which calls load_image, which returns an object of class Image_Properties, extended by Image_GD class. Resize calls $image-&gt;resize() which is defined in the GD class, thus GD library is called directly, not phpThumb. </p> <p> Use the process_image api function instead...  </p> <p>&nbsp;</p> <h2>process_image function</h2> <p> Ah, the master of the universe! well, the phpThumb universe anyway. </p> <pre>$newLocationString = xarModApiFunc(&#39;images&#39;,&#39;admin&#39;,&#39;process_image&#39;, $params ); </pre> <pre>* @param   array   $image    The image info array (e.g. coming from getimageinfo or getimages/getuploads/getderivatives)<br /> * @param   integer $saveas   How to save the processed image (0 = derivative, 1 = [image]_new.[ext], 2 = replace, 3 = output)<br /> * @param   string  $setting  The predefined setting to use, or<br /> * @param   array   $params   The phpThumb parameters to use<br /> * @param   boolean $iscached Check if the processed file already exists (default FALSE)<br /> * @return  string the location of the newly processed image<br /> </pre> <h2>Not Working?</h2> <p> I had a problem that image resize wasn&#39;t working, just crashed. Actually the version of the tag that calls gd directly worked, the version that uses phpthumb crashed (see above). In the end I just needed to bump up my php memory limits (from 32m to 64m). </p> <p> There&#39;s some suggestions here: http://us3.php.net/imagecreatefromjpeg for dynamically increasing the memory limit based on the image size.  Here&#39;s my function (installed in my custom &quot;MiscTools&quot; module, xaruserapi/setmemoryforimage.php): </p>  <pre>&lt;?php<br />/**<br />* increases php memory limit for processing an jpg image<br />* @param $args[&#39;file&#39;] file name of image file<br />*/<br />function misctools_userapi_setmemoryforimage($args) {<br />    extract($args);<br />    return setMemoryForImage( $file );<br />}<br /><br /> /* ================= */<br /><br />function setMemoryForImage( $filename )<br />{<br />    $imageInfo = getimagesize($filename);<br />    $MB = Pow(1024,2);  // number of bytes in 1M<br />    $K64 = Pow(2,16);    // number of bytes in 64K<br />    $TWEAKFACTOR = 1.8;  // Or whatever works for you<br />    $memoryNeeded = round( ( $imageInfo[0] * $imageInfo[1]<br />                                * $imageInfo[&#39;bits&#39;]<br />                                * $imageInfo[&#39;channels&#39;] / 8<br />                                + $K64<br />                                ) * $TWEAKFACTOR );<br />    $memoryLimitMB = (integer) ini_get(&#39;memory_limit&#39;); // assumes compiled with &quot;--enable-memory-limit&quot;<br />    $memoryLimit = $memoryLimitMB * $MB;<br />    if ( function_exists(&#39;memory_get_usage&#39;) &amp;&amp;<br />         memory_get_usage() + $memoryNeeded &gt; $memoryLimit)<br />    {<br />        $newLimit = $memoryLimitMB + ceil( ( memory_get_usage()<br />                          + $memoryNeeded - $memoryLimit ) / $MB);<br />        $newLimit +=  3;  // additional fudge factor<br />        ini_set( &#39;memory_limit&#39;, $newLimit . &#39;M&#39; );<br />    } else {<br />        return false;<br />    }<br />}<br />?&gt; <br /> </pre> <p>&nbsp;</p><p><strong>UPDATE</strong>: I had a different case of using &lt;xar:image-resize&gt; on a reasonably sized jpg file crashing. It turns out it dies on the file open call in GD library, before the image is processed. I submitted a bug report with changes to file modules/images/xarclass/image_gd.php using this set_memory algorithm, but I&#39;m not sure its general enough to be a patch  http://bugs.xaraya.com/show_bug.cgi?id=6091</p><p>&nbsp;</p><h2>Privileges</h2> <p> Another thing, if you require uploads be approved (default state &quot;submitted&quot;) the files may not be accessible until approved. This one got me because things were working fine, then seemed to stop. Turns out I was testing while logged in as Admin, then when testing as anon the uploaded pix weren&#39;t showing up (Uploads showout function returns null). <br /> </p> <p>&nbsp;</p> <p> OH, AND... </p> <p> If you use short URL&#39;s on the Images module, and have an images/ directory in your web root, that could cause problems. (Or not, depending on how your web server is setup). Just one more thing to think about. </p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> ",linoj,6192,37,xaraya,"images phpthumb",Working_with_Images_in_Xaraya
23,"Software I've Installed on my iMac","List of software that I've added to my new iMac to create a complete workstation environment. This is mostly to document it because sometimes I forget (duh), and in a worst-case scenerio if I ever need to start over (or something like that).",3,1152769685,9,,2,"<h2> iMac Software - Installed</h2><p><strong>bold</strong> means I use it all the time<br /> <br /> - <strong>Path Finder</strong> (enhanced Finder) $<br /> - <strong>Adium</strong> (chat)<br /> - <strong>FireFox</strong> (browser)<br /> - <strong>Colloquy</strong> (irc)<br /> - <strong>TextMate</strong> (text editor) $<br /> - <strong>iGetter</strong> (downloader) $<br /> - Free Solitaire 3d (game) $<br /> - X11 (from OS X dvd)<br /> - <strong>witch</strong> (alt-tab)<br />- <strong>Neooffice</strong><br /> - <strong>Fireworks</strong> 8 (trial) $299<br /> - <strong>Transmit</strong> (ftp)<br /> - RealPlayer<br /> - http://www.unrarx.com/ (rar archiver)<br />- <strong>CocoaMySQL</strong> $<br /></p><p>- php5  (see  http://www.entropy.ch/software/macosx/php/ )<br /> </p><p>- <strong>MacPorts</strong> (package installer) http://trac.macosforge.org/projects/macports <br /> - Ruby/Rails installation (http://blog.duncandavidson.com/2006/04/sandboxing_rail.html):<br /> - port apache2<br /> - port mysql5<br /> - port subversion<br /> - port ruby<br /> - port rb-rubygems, rb-terminos, rb-mysql<br /> - gem rake, rails, capistrano, mogrel, mongrel_cluster<br /> </p><p> <br />- <strong>zigversion</strong>  (svn front-end) (http://zigzig.com/)  free for personal use</p><p>- inkscape - graphics editor (like Illustrator) </p><p>- Lingon ( <a rel=""nofollow"" href=""http://lingon.sourceforge.net/"" target=""_blank"">http://lingon.sourceforge.net/</a> ) GUI for launchd</p><p>- Trac</p><p><strong>- git</strong> </p><p> $ sudo port install git-core</p><p> -MenuMeters 1.3</p><p>&nbsp;</p><h2> Not using</h2><p>- Omni outliner $<br /> - WindowFinder $<br />  - Gimp, GimpShop <br />  - Dossier (notes manager)<br /></p><p> - Eclipse IDE</p><p>- Vortex (to do list)</p><p>- You Control Desktops $ (desktop switcher) </p> <p> - locomotive (self-contained ruby on rails )</p><p>- WindowFinder (&quot;witch&quot; is better) </p> <p>- svnX (svn front-end)  <br /> - VLC (media player)<br /> - Video2SWF (Vertical Moon) (+Audio2SWF, Slide2SWF) $45<br /> - Google Earth<br /> - Google SketchUp<br /> - monotone<br /> - doodim (http://www.lachoseinteractive.net/en/products/doodim/) : dims background windows</p><p>&nbsp;</p><h2> Trashed</h2><p> - psi (irc)</p><p> - conversation (irc)</p><p>&nbsp;</p><h2>Other Notes</h2><p>As good a place as any for notes about other mac resources. </p><p>http://www.digital-web.com/articles/mac_screencast_capturing</p><p>&nbsp;</p> ",linoj,3104,38,xamp,iMac,Software_I%27ve_Installed_on_my_iMac
22,"About Satellite Internet","I got an email from a friend asking about my satellite internet service. Here's my answer.",3,1152714760,9,,2,"<p>UPDATE (4/13/2007):</p><p>Last November we finished paying off our equipment costs, and at the some time I upgraded to the ProPlus package. That means we get 200k/1.5Mbps up/download speeds (max), 400MB threshold (before FAP kicks in, see below) for about $80/month.</p><p>I&#39;ve really learned to loath the FAP, so call &quot;fair use policy&quot;. We got hit by it the other day, inadvertantly, when my son was downloading a new game (500MB)-- downloads were running slow from 9pm to 1am, about 20 or 30MB per hour (far from the limit of 400MB over any consecutive 4 hour period) so we just let it run overnight. Then between 3 and 4am, it shot up to 345MB that hour which pushed us over the FAP limit. For the next 24 hours we were throttled down to dial-up speeds. Aaaaargg! </p><p>I wrote a loud, detailed letter to Hughes, and (gratefully) received a call back from someone in their executive offices, who told me they &quot;had a conference call this morning to discuss your issues&quot;! Anyway, she says among other things they&#39;re launching new satellites this August (2007) that will really boost performance, reduce the latency, and provide a more fair Fair Use Policy. Cool. But, we&#39;ll see...  </p><p>&nbsp;</p><hr /><p>&nbsp;</p><p> Hi, </p> <p> Here in the boondocks, I use Direcway satellite (now HughesNet). It costs about $110/mo for &quot;home professional&quot; bandwidth, which is supposed to give 1.0Mbps download and 200Kbps upload. Performance is pretty reliable. Its noticeably slower when several people are on the network,  like when the kids are home IM&#39;ing. </p> <p> For web browsing its fine. Faster than dial up. Slower than cable modem. </p> <p> Outages are directly related to weather, really only when thick rain clouds roll in, but that&#39;s also thunderstorm time too so its probably best not to be on the computer then anyway. Snow is not as much a problem as I had expected, though again whenever there&#39;s &quot;thick&quot; moisture in the air, I&#39;ll lose connection. I do have a modem setup in case of &quot;emergency&quot;. </p> <p> A new competing service is called WildBlue. I dont think they were around when I signed up for Direcway. I&#39;m told they&#39;re a little faster and a little cheaper. A neighbor is getting it, but I haven&#39;t seen it first hand. When comparing prices be sure to consider the up front &quot;equipment cost&quot;, that really levels the playing field. </p> <p> The most noticeable issue is the latency between sends and receives, the time it takes for your click to go up through the atmosphere to the satellite (20,000 miles), down to the NOC, to the website, back to the NOC, up, and down again is about 1/2 sec or more. Round trip is close to 100,000 miles! </p> <p> For telnet/ssh terminal sessions, it&#39;s painful. Each keystroke is one roundtrip, before you even hit Enter. But I&#39;ve learned to live with it (and to work on local servers as much as possible). </p> <p> Another annoying factor is Direcway&#39;s &quot;fair use policy&quot; which (under my plan) limits me to 300MB of downloads within any 4 hour period. If we exceed this limit, download slows down to 56k for several hours. In this day and age of open source application downloads, operating system and browser updates, and multimedia, its pretty easy to inadvertently reach this limit. One workaround, I found a download utility (iGetter for iMac) that lets me pause/resume so I can spread large downloads over several hours (it also splits downloads into multiple streams which helps optimize download performance). </p> <p> The dish itself is pretty large. And ours is right in the front yard, though partially hidden by a large lilac bush fortunately. I wanted to mount it on the back side of the house, where our TV dish is mounted but the line of sight angle wasn&#39;t right. Also, the shorter the distance from the dish to the modem the better. In our case, the modem is in the cellar (and then routed through the house LAN) near the front of the house. </p> <p> I&#39;m told if you use a higher grade coax cable from the dish (like that used by the cable companies to wire your neighborhood, rather than what you use inside your house, i don&#39;t recall the code though), you can move the dish much further away. I plan to do this when we put in the addition to the house, and run the cable underground. </p> <p> Hope this helps, </p> <p> Jonathan </p> <p>&nbsp;</p> ",linoj,2814,39,musings,satellite,About_Satellite_Internet
21,"Date Shorthands","A method of displaying date information on articles with less granularity.",3,1152583279,9,,2,"<p>
We wanted a way to specify dates with less granularity on articles. For example, instead of the full date like &quot;July 11, 2006&quot;, sometimes a document just has a month, like &quot;July, 2006&quot;, or even just a year &quot;2006&quot;. We never need to show the time-of-day of the publication.<br />
</p>
<p>
The technique I chose is to specify the Article Pulication Date as follows:
</p>
<ul>
	<li>
	If date is January 1, and the time of day is 00:00:00, then only show the year (&quot;1/1/2006 00:00:00&quot; displays as &quot;2006&quot;). 
	</li>
	<li>
	If date is the first of the month, and the time of day is 00:00:00 then don&#39;t show the day of the month (&quot;7/1/2006 00:00:00&quot; displays as &quot;July, 2006&quot;).
	</li>
	<li>
	If the date is the first of the month, but any other time, then show it as the first (&quot;7/1/2006 10:21:00&quot; displays as &quot;July 1, 2006&quot;).
	</li>
</ul>
<p>
Any other date shows as &quot;month day, year&quot;.
</p>
<p>
Here&#39;s the template code that goes into the pubtype summary and display templates:
</p>
<p>
&nbsp;
</p>
&lt;xar:if condition=&quot;date(&#39;j&#39;,$pubdate) eq &#39;1&#39; and date(&#39;H&#39;,$pubdate) eq &#39;00&#39;&quot;&gt;<br />
    &lt;xar:if condition=&quot;date(&#39;n&#39;,$pubdate) eq &#39;1&#39;&quot;&gt;<br />
        #xarLocaleFormatDate(&#39;%Y&#39;, $pubdate)#<br />
    &lt;xar:else /&gt;<br />
        #xarLocaleFormatDate(&#39;%B, %Y&#39;, $pubdate)#<br />
    &lt;/xar:if&gt;<br />
&lt;xar:else /&gt;<br />
     #xarLocaleFormatDate(&#39;%B %e, %Y&#39;, $pubdate)#<br />
&lt;/xar:if&gt;<br />
<p>
So, if you want just July, 2006 to display, then enter the Pubication Date of July 1, 2006 00:00:00. And if you want just &quot;2006&quot; to display, enter the Publication Date of January 1, 2006 00:00:00. 
</p>
<p>
Well, that worked just great, for a while. Then I upgraded to a newer version of Xaraya, and moved my site to a new server. The new server was set to a different time zone. And it is shared so I could not change the zone. Also, I think the new Xaraya version changed the way dates and locale are GMT is stored or calculated. Anyway, after a couple hours of tinkering with the Xaraya Base Config time zone, using gmdate() instead of date(), and some other futzing around, I decided it&#39;s enough to ignore the time, and check if the minutes:seconds are 00:00 instead.  So, it becomes
</p>
<p>
&nbsp;
</p>
&lt;xar:if condition=&quot;date(&#39;j&#39;,$pubdate) eq &#39;1&#39; and date(&#39;i&#39;,$pubdate) eq &#39;00&#39; and date(&#39;s&#39;,$pubdate) eq &#39;00&#39;&quot;&gt;<br />
&lt;xar:if condition=&quot;date(&#39;n&#39;,$pubdate) eq &#39;1&#39;&quot;&gt;<br />
#xarLocaleFormatDate(&#39;%Y&#39;, $pubdate)#<br />
&lt;xar:else /&gt;<br />
#xarLocaleFormatDate(&#39;%B, %Y&#39;, $pubdate)#<br />
&lt;/xar:if&gt;<br />
&lt;xar:else /&gt;<br />
#xarLocaleFormatDate(&#39;%B %e, %Y&#39;, $pubdate)#<br />
&lt;/xar:if&gt;<br />
<p>
Then I put it all into a php function under my &quot;misctools&quot; utility module, so it becomes instead,
</p>
<p>
&nbsp;
</p>
&lt;xar:set name=&quot;datestr&quot;&gt;xarModApiFunc(&#39;misctools&#39;,&#39;user&#39;,&#39;shortdate&#39;,array(&#39;date&#39;=&gt;$pubdate))&lt;/xar:set&gt;<br />
#$datestr#<br />
<p>
And added the file modules/misctools/xaruserapi/shortdate.php :
</p>
&lt;?php<br />
/**<br />
* return date string Month D, YYYY<br />
* but if minutes and seconds are zero then<br />
* and its the first of the month, just return Month, YYYY<br />
* or if its January 1, just return YYYY<br />
* @param $args[&#39;date&#39;] date (aka articles $pubdate)<br />
returns formatted date string <br />
*/<br />
function misctools_userapi_shortdate($args) {<br />
extract($args);<br />
if (!isset($date)) {<br />
$msg = xarML(&#39;Invalid #(1) for #(2) function #(3)() in module #(4)&#39;,<br />
&#39;string&#39;, &#39;user&#39;, &#39;shortdate&#39;, &#39;misctools&#39;);<br />
xarErrorSet(XAR_USER_EXCEPTION, &#39;BAD_PARAM&#39;,<br />
new SystemException($msg));<br />
return;<br />
}<br />
<br />
if (gmdate(&#39;j&#39;,$date) == &#39;1&#39; &amp;&amp; gmdate(&#39;i&#39;,$date) == &#39;00&#39; &amp;&amp; gmdate(&#39;s&#39;,$date) == &#39;00&#39;) {<br />
if (date(&#39;n&#39;,$date) == &#39;1&#39;) <br />
$s = xarLocaleFormatDate(&#39;%Y&#39;, $date);<br />
else<br />
$s = xarLocaleFormatDate(&#39;%B, %Y&#39;, $date);<br />
} <br />
else {<br />
$s = xarLocaleFormatDate(&#39;%B %e, %Y&#39;, $date);<br />
}<br />
return $s;<br />
}<br />
?&gt;
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,2051,37,xaraya,"date articles",Date_Shorthands
27,"Tabbed Blockgroups - How It Works","This article explains the details behind the Tabbed Blockgroups technique introduced in article <a href=""postings/20"">""Tabbed Blockgroups""</a>",3,1152165300,9,,2,"<h2>Overview</h2>
<p>
Tabbled blocks consist of the tabs, and the blocks. Tabs are created using the Xaraya tabnavs styles, each tab containing the name of a block. The blocks are displayed below the tabs. All the blocks are hidden (display:none) except the open one. Javascript is used in the tabs buttons to display the current block.
</p>
<p>
ID&#39;s are dynamically generated based on the block name, so we can identify each tab and corresponding block. The naming convention is xar-tabblocks-BLKNAME for the block div, and xar-tabblocks-BLKNAME-tab for the block&#39;s tab. 
</p>
<p>
The resulting structure of document object is as follows:
</p>
&lt;div class=&quot;xar-tabblocks&quot;&gt;<br />
&lt;div class=&quot;xar-tabblocks-tabs&quot;&gt;<br />
&lt;dl class=&quot;xar-tabs&quot;&gt;<br />
for each block in the blockgroup:<br />
&lt;dd id=&quot;xar-tabblocks-BLKNAME-tab&quot;&gt; block title &lt;/dd&gt;<br />
...<br />
&lt;/dl&gt;<br />
&lt;/div&gt;<br />
&lt;!-- blockgroup name=&quot;tabbed&quot; --&gt;<br />
for each block in the blockgroup:<br />
&lt;div id=&quot;xar-tabblocks-BLKNAME&quot; class=&quot;xar-tabblocks-block&quot;&gt;<br />
&lt;div class=&quot;xar-block-head&quot;&gt;<br />
&lt;div class=&quot;xar-block-title&quot;&gt; block title &lt;/div&gt;<br />
&lt;/div&gt;<br />
&lt;div class=&quot;xar-block-body&quot;&gt; <br />
#$content# <br />
&lt;/div&gt;<br />
&lt;div class=&quot;xar-block-footer&quot;&gt;&lt;/div&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;<br />
... <br />
&lt;/div&gt;
<p>
&nbsp;
</p>
<h2>Blockgroups use the tabbed.xt Outer Template</h2>
<p>
The template &quot;tabbled.xt&quot; goes in you theme&#39;s
mytheme/blocks/ directory, and will be used as the &quot;outer&quot; template
for each block in the blockgroup. 
</p>
<p>
In the template, we surround the block with a div with class=&quot;xar-tabblocks-block&quot; so each block in the group can be styled similarly. 
</p>
<p>
We&#39;ll also ensure that each block is given a unique ID, in the form
&quot;xar-tabblocks-NAME&quot; where NAME is the name of that block. Thus, the
wrapper div looks like:
</p>
<p>
&nbsp;
</p>
&lt;xar:set name=&quot;divid&quot;&gt;&quot;xar-tabblocks-&quot; . $name&lt;/xar:set&gt;<br />
&lt;div id=&quot;#$divid#&quot; class=&quot;xar-tabblocks-block&quot;&gt;<br />
...
<br />
&lt;/div&gt; 
<p>
Specifically, as an example, here&#39;s my full template, mytheme/blocks/tabblocks.xt
</p>
<p>
&nbsp;
</p>
<p>
&lt;xar:set name=&quot;divid&quot;&gt;&quot;xar-tabblocks-&quot; . $name&lt;/xar:set&gt; <br />
&lt;div id=&quot;#$divid#&quot; class=&quot;xar-tabblocks-block&quot;&gt;<br />
&lt;xar:if id=&quot;title_condition&quot; condition=&quot;!empty($title)&quot;&gt;<br />
&lt;div class=&quot;xar-block-head&quot;&gt;<br />
&lt;div class=&quot;xar-block-title&quot;&gt;<br />
&lt;xar:var name=&quot;title&quot;/&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;<br />
&lt;/xar:if&gt;<br />
&lt;div class=&quot;xar-block-body&quot;&gt;<br />
&lt;xar:var name=&quot;content&quot;/&gt;<br />
&lt;/div&gt;<br />
&lt;div class=&quot;xar-block-foot&quot;&gt;&lt;/div&gt;<br />
&lt;/div&gt;
</p>
<p>
&nbsp;
</p>
<h2>3. Create an include template to render the blockgroup, &quot;tabblocks.xt&quot;</h2>
<p>
The blockgroup will be included in your page using &lt;xar:template
type=&quot;theme&quot; file=&quot;tabblocks&quot; /&gt;. Now we&#39;ll create this template,
mytheme/includes/tabblocks.xt 
</p>
<p>
This is the meat of how this works. There are several parts to this file.
</p>
<h3>3.A. Link exernal files </h3>
<p>
First, we&#39;ll make sure the javascript and stylesheets will be inserted into the page
</p>
<p>
&nbsp;
</p>
<p>
&lt;!-- &lt;xar:base-include-javascript module=&quot;base&quot; filename=&quot;tabblocks.js&quot; position=&quot;head&quot; /&gt; --&gt;<br />
&lt;xar:style scope=&quot;module&quot; module=&quot;base&quot; file=&quot;navtabs&quot; /&gt;<br />
&lt;xar:style scope=&quot;module&quot; module=&quot;base&quot; file=&quot;tabblocks&quot; /&gt;
</p>
<p>
&nbsp;
</p>
<p>
Bug alert: the xar:base-include-javascript doesnt actually work here
(not sure why), so it should be included in the template that calls
this template (as shown later on).
</p>
<p>
The navtabs.css is a standard Xaraya file. You can make your own version, and/or override specific styles specific to the tabbed block groups in the optional tabblocks.css file.
</p>
<h3>3.B. Generate the tabs </h3>
<p>
The second section generates the tabs themselves. We&#39;re usomg the same
navtabs used by Xaraya, which uses &lt;dl&gt; and &lt;dd&gt; tags for
each tab. All the tabs are wrapped in a div class=&quot;xar-tabblocks-tabs&quot;.
Each tab is given a unique ID, in the form &quot;xar-tabblocks-NAME-tab&quot;.
Thus, the tabs are created with the following code:
</p>
<p>
&nbsp;
</p>
<p>
&lt;xar:set name=&quot;grp&quot;&gt;xarModApiFunc(&#39;blocks&#39;,&#39;user&#39;,&#39;groupgetinfo&#39;,array(&#39;name&#39;=&gt;&#39;tabbed&#39;))&lt;/xar:set&gt;<br />
&lt;div class=&quot;xar-tabblocks-tabs&quot;&gt;<br />
&lt;dl class=&quot;xar-tabs&quot;&gt;<br />
&lt;xar:foreach in=&quot;$grp[&#39;instances&#39;]&quot; value=&quot;$blk&quot;&gt;<br />
&lt;xar:set name=&quot;b_nam&quot;&gt;$blk[&#39;name&#39;]&lt;/xar:set&gt;<br />
&lt;xar:set name=&quot;b_id&quot;&gt;&quot;xar-tabblocks-&quot; . $b_nam . &quot;-tab&quot;&lt;/xar:set&gt;<br />
&lt;dd id=&quot;#$b_id#&quot;&gt;&lt;a href=&quot;javascript:void()&quot; onclick=&quot;return tabblocksDisplay(&#39;xar-tabblocks&#39;, &#39;#$b_nam#&#39;);&quot;&gt;#$blk[&#39;title&#39;]#&lt;/a&gt;&lt;/dd&gt;<br />
&lt;/xar:foreach&gt;<br />
&lt;/dl&gt;<br />
&lt;/div&gt;
</p>
<p>
&nbsp;
</p>
<p>
Note, when you click on a tab, a javascript function is called,
tabblocksDisplay, with arguments for the prefix of the tabbed block class, and the
name of the block that&#39;s been selected. (see below). This function
hides all the tab blocks (display:none) except the selected one. And it gives the
current tab a class of &quot;active&quot; so it can be highlighted. 
</p>
<h3>3.C Insert the blockgroup </h3>
<p>
The next step inserts the blockgroup itself:
</p>
<p>
&nbsp;
</p>
&lt;xar:blockgroup name=&quot;tabbed&quot; /&gt;<br />
<h3>3.D Make the first tab block visible </h3>
<p>
Finally, we want to hide all the blocks except the first one using some javascript.
</p>
<p>
&nbsp;
</p>
<p>
&lt;xar:set name=&quot;first&quot;&gt;reset($grp[&#39;instances&#39;])&lt;/xar:set&gt; <br />
&lt;script type=&quot;text/javascript&quot;&gt;<br />
tabblocksDisplay(&#39;xar-tabblocks&#39;,&#39;&quot; . $first[&#39;name&#39;] . &quot;&#39;);<br />
&lt;/script&gt;
</p>
<p>
&nbsp;
</p>
<p>
Actually, we want to enclose the js in html comments to accomodate
non-js browsers, in which case php doesnt see the commented out
variable , so we do it this way,
</p>
<p>
&nbsp;
</p>
<p>
&lt;xar:set name=&quot;first&quot;&gt;reset($grp[&#39;instances&#39;])&lt;/xar:set&gt;<br />
&lt;xar:set name=&quot;js&quot;&gt;&quot;&lt;script type=\&quot;text/javascript\&quot;&gt;\r\n &lt;!-- \r\ntabblocksDisplay(&#39;xar-tabblocks&#39;,&#39;&quot; . $first[&#39;name&#39;] . &quot;&#39;);\r\n //--&gt; \r\n&lt;/script&gt;&quot;<br />
&lt;/xar:set&gt;<br />
#$js#
</p>
<p>
&nbsp;
</p>
<p>
Further fanciness, if you wanted/needed to open this tab via a URL GET var, you
could pass the block name as a variable, say ?tab=BLKNAME, then
</p>
<p>
&nbsp;
</p>
<p>
&lt;xar:set name=&quot;tabname&quot;&gt;xarRequestGetVar(&#39;tab&#39;)&lt;/xar:set&gt;<br />
&lt;xar:if condition=&quot;empty($tabname)&quot;&gt;<br />
&lt;xar:set name=&quot;first&quot;&gt;reset($grp[&#39;instances&#39;])&lt;/xar:set&gt;<br />
&lt;xar:set name=&quot;tabname&quot;&gt;$first[&#39;name&#39;]&lt;/xar:set&gt;<br />
&lt;/xar:if&gt;<br />
&lt;script type=&quot;text/javascript&quot;&gt;<br />
tabblocksDisplay(&#39;xar-tabblocks&#39;,&#39;&quot; . $tabname . &quot;&#39;);  <br />
&lt;/script&gt; 
</p>
<p>
&nbsp;
</p>
<h3>3.E Disable tabs in preview</h3>
<p>
Note, if you want to disable the tabbed view , for example , when
the page is viewed during an admin function such as previews, you can
disable it in the template wit h the following code:
</p>
<p>
&nbsp;
</p>
<p>
&lt;xar:set name=&quot;requestInfo&quot;&gt;xarRequestGetInfo()&lt;/xar:set&gt;<br />
&lt;xar:if condition=&quot;$requestInfo[1] eq &#39;admin&#39;&quot;&gt;<br />
&lt;xar:blockgroup name=&quot;tabbed&quot; /&gt;<br />
&lt;xar:else /&gt;<br />
... normal template ...<br />
&lt;/xar:if&gt;
</p>
<p>
&nbsp;
</p>
<h2>The javascript file, tabblocks.js</h2>
<p>
A  little bit of javascript handles the onclick on the tabs. It defines two functions
</p>
<ul>
	<li>
	tabblocksClearAll - hides all the block divs y setting display:none, and no tabs are active
	</li>
	<li>
	tabblocksDisplay - shows the selected block by setting it to display:block , and gives the current tab a class=&quot;active&quot;<br />
	</li>
</ul>
<p>
This file, tabblocks.js should be placed in mytheme/modules/base/includes/tabblocks.js
</p>
<p>
&nbsp;
</p>
<p>
// looks for block div with id=tabpre-xxx and tabs with id=tabpr-xxx-tab<br />
// hide all blocks with id=tabpre-xxx and unstyle it&#39;s tab<br />
function tabblocksClearAll(blockpre)<br />
{<br />
var divs = document.getElementsByTagName(&quot;div&quot;);
for (i=0; i&lt;divs.length; i++) {<br />
var div = divs[i];<br />
var id = div.id;<br />
if (id.indexOf(blockpre) != -1) {<br />
div.style.display = &#39;none&#39;;    <br />
elem = document.getElementById(id + &#39;-tab&#39;);<br />
elem.setAttribute(&quot;class&quot;,&quot;&quot;);<br />
elem.setAttribute(&quot;className&quot;,&quot;&quot;);<br />
}<br />
}<br />
return false;<br />
}<br />
// display block named id (id=blocpre-id) and active style its tab<br />
function tabblocksDisplay(blockpre, id)<br />
{<br />
tabblocksClearAll(blockpre);<br />
elem = document.getElementById(blockpre + &#39;-&#39; + id);<br />
elem.style.display = &#39;block&#39;;<br />
elem = document.getElementById(blockpre + &#39;-&#39; + id + &#39;-tab&#39;);<br />
elem.setAttribute(&quot;class&quot;,&quot;active&quot;);<br />
elem.setAttribute(&quot;className&quot;,&quot;active&quot;);<br />
return false;<br />
}
</p>
<p>
&nbsp;
</p>
<h2>Define our styles</h2>
<p>
You could run this without overriding any of the styles, but you&#39;ll
see some adjustments will be necessary. Here&#39;s what I see as a good
starting place to put in your themes style.css file
</p>
<p>
&nbsp;
</p>
<p>
/* === tabblocks === */<br />
.xar-tabblocks { /* contains entire includes/tabblocks.xt */<br />
margin: 1em; <br />
background-color: white;<br />
}<br />
.xar-tabblocks-tabs { /* contains the tabs */<br />
width:90%; /* for ie, tabs were pushing width&gt;100% */<br />
margin:0 1em;<br />
}<br />
.xar-tabblocks-tabs .xar-tabs { /* override the xar defaults */<br />
margin-bottom:0; <br />
padding-bottom:0; <br />
background-color: white;<br />
}<br />
.xar-tabblocks-block {<br />
margin-top: 0;<br />
background-color: #ccc;<br />
border: solid #aaa 1px;<br />
}<br />
.xar-tabblocks-block .xar-block-body h2 {<br />
margin-top: 0;<br />
}<br />
/* override base/navtabs.css */<br />
.xar-tabs a:link, .xar-tabs a:visited {<br />
color: green;<br />
font-weight: bold;<br />
}<br />
.xar-tabs a:hover {<br />
color: green;<br />
text-decoration: underline;<br />
background-color: transparent;<br />
}<br />
* html dl.xar-tabs dd.active {<br />
margin-bottom:3px;<br />
}<br />
dl.xar-tabs dd.active a {<br />
color: red;<br />
border-color: red;<br />
font-weight: bold;<br />
}<br />
dl.xar-tabs dd.active a:hover {<br />
text-decoration: underline;<br />
}
</p>
<p>
&nbsp;
</p>
<h2>
Add the Tabbed Blockgroup to your Page Template
</h2>
<p>
For example, if this is a home page and you have the base module as
the default module, then add the following lines to your file
mytheme/modules/base/user-main.xt
</p>
<p>
&lt;xar:base-include-javascript module=&quot;base&quot; filename=&quot;tabblocks.js&quot; position=&quot;head&quot; /&gt;<br />
&lt;xar:template type=&quot;theme&quot; file=&quot;tabblocks&quot; /&gt;
</p>
<p>
Note, the base-include-javascript is called here rather than inside tabblocks.xt because it doesnt seem to work inside there.
</p>
",linoj,2075,37,xaraya,"blocks,tabs",Tabbed_Blockgroups_-_How_It_Works
20,"Tabbed Blockgroups","A techninque for making tabbed blockgroups in Xaraya. ",3,1152164644,9,,2,"<h2>Overview</h2>
<p>
This bit of code uses the Xaraya navtabs styles to make tabbed block
groups. Instead of using the &lt;xar:blockgroup&gt; tag in your
page template to insert the blockgroup, we include a different template, tabblocks.xt, that builds the tabbed
blocks using the blockgroup. That way you can add or change the blocks
using the blockgroups admin GUI and the page will change according. An example can be found on the homepage <a href=""http://www.windaction.org"">here</a> .
</p>
<h2>Install Files </h2>
<p>
The tabblocks.zip package consists of the following files:
</p>
<ul>
	<li>tabblocks.xt - include this template in your page, copy to mytheme/includes/tabblocks.xt 
	</li>
	<li>tabbed.xt - use this as the blockgroup &quot;outer&quot; template, copy to mytheme/blocks/tabbed.xt </li>
	<li>tabblocks.js - a bit of javascript, copy to mytheme/modules/base/includes/tabblocks.js </li>
	<li>tabblocks.css - optional override default tab styles, copy to mytheme/modules/base/xarstyles/tabblocks.css </li>
</ul>
<p>
Place a copy of these files into their corresponding directories in your theme.
</p>
<p>
The
tabblocks.css isn&#39;t necessary if you want to keep the tabnav.css styles
already in your theme (or Xaraya default). This file shows how to
override selective styles for tabs. 
</p>
<p>
You can download a copy of the tabblocks.zip package from [<a href=""~jlinowes/tabblocks.zip"">download</a> ]. 
</p>
<h2>Make a Blockgroup Named &quot;tabbed&quot;</h2>
<p>
Create a block group named &quot;tabbed&quot; (Admin &gt; Global &gt; Blocks &gt;
Add Group). This is just a suggested name, but we&#39;ll assume it here.
(If you use a different name, change it in the tabblocks.xt template). 
</p>
<p>
Give this blockgroup the outer template named &quot;tabbed&quot; (for file mytheme/blocks/tabbed.xt). 
</p>
<p>
Add any number of blocks to the blockgroup (by editing each block and setting Add to Group). 
</p>
<p>
You can adjust the order you want the tabs to appear by arranging the blocks in Block Group Edit.
</p>
<h2>
Call the tabblocks.xt Template From Your Page</h2>
<p>
Lets suppose the tabbed blocks are going on your home page, and you are
using the Base module as your default module. Then the template
mytheme/modules/base/user-main.xt contains your home page content. Add
the following line to your user-main template:
</p>
<pre>
&lt;xar:template type=&quot;theme&quot; file=&quot;tabblocks&quot; /&gt;<br />
</pre>
<p>
That&#39;s it!
</p>
<p>
Well, almost. For some reason we cannot include the
&lt;xar:base-include-javascript&gt; tag in the tabblocks.xt template,
so put the following line in user-main.xt too: 
</p>
<pre>
&lt;xar:base-include-javascript module=&quot;base&quot; filename=&quot;tabblocks.js&quot; position=&quot;head&quot; /&gt; <br />
</pre>
<p>
See <a href=""index.php/documentation/657"" title=""Tabbed Block Groups"">accompanying article</a>  for details how this whole thing works.  
</p>
<p>
&nbsp;
</p>
",linoj,2456,37,xaraya,"blocks,tabs",Tabbed_Blockgroups
19,"Strategies for Debugging in Xaraya","Here's a few techniques I use (alot) when debugging my Xaraya projects.",3,1152118355,9,,2,"<p>
There are numerous types of bugs and ways the manifest themselves. Some examples,<br />
</p>
<ul>
	<li>Logic errors in template -- not seeing the output you expected </li>
	<li>Block layout syntax error -- you get an error page with the template name and line number</li>
	<li>&quot;white page of death&quot; -- usually indicates a php syntax error</li>
	<li>Lots of missing content -- like the &quot;white page&quot; but you lose only one template  </li>
</ul>
<p>
The white page can be caused by (just some examples I can think of): 
</p>
<ul>
	<li>missing #, such as  &lt;p&gt;#$body&lt;/p&gt; <br />
	</li>
	<li>missing closing parenthesis, such as &lt;xar:set name=&quot;arts&quot;&gt;xarModApiFunc(&#39;articles&#39;,&#39;user&#39;,&#39;get&#39;, array(&#39;aid&#39;=&gt;&#39;14&#39;)&lt;/xar:set&gt;</li>
	<li>invalid syntax within #&#39;s, such as #$item[&#39;title&#39;])#   (the parenthesis causes white death)<br />
	</li>
</ul>
<p>
&nbsp;
</p>
<br />
<h2>Dumping Variables from a Template </h2>
<p>
<strong>print_r()</strong> 
</p>
<p>
To dump a variable to the current page: 
</p>
<p>
&lt;pre&gt;&lt;xar:set name=&quot;asdf&quot;&gt;print_r($var)&lt;/xar:set&gt;&lt;/pre&gt; 
</p>
<p>
If things are really messing up, you can stop the output generation (die) immedately after the dump: 
</p>
<p>
&lt;pre&gt;&lt;xar:set name=&quot;asdf&quot;&gt;print_r($var); die()&lt;/xar:set&gt;&lt;/pre&gt;
</p>
<p>
<strong>var_dump()</strong>
</p>
<p>
Like print_r() but also shows the value &quot;types&quot; (int, array, etc). 
</p>
<p>
<strong>dump into comments</strong> 
</p>
<p>
If you prefer to not mess up your page (especially on a live site), you can output the dump as an html comment. BL doesn&#39;t like us using xar:set with a value that looks like a comment :) so you have to work around with an embedded php hack
</p>
<p>
&lt;xar:set name=&quot;asdf&quot;&gt;1; $opencomment=&quot;&lt;!-- &quot;; $closecomment=&quot; --&gt;&quot;;&lt;/xar:set&gt; 
</p>
<p>
#$opencomment#
</p>
<p>
The value of $var is #$var#
</p>
<p>
#$closecomment#
</p>
<p>
&nbsp;
</p>
<h2>Error Logs</h2>
<p>
<strong>
var/logs/log.txt</strong> <br />
</p>
<p>
When things look like they&#39;re not going well, be sure to check your Xaraya log file. By default, there is no logging. To start debug logging, simply touch (create 0 length file) at var/logs/log.txt . And make sure it is web-server writeable (e.g. permissions 774)<br />
</p>
<p>
The file contains a trace log of everything you do when loading each page. Ignore most of it, just look for ERRORs rather than DEBUG statements. 
</p>
<p>
To stop logging, delete the file. 
</p>
<p>
<strong>php error log</strong>
</p>
<p>
You might want to turn on php error logging. That&#39;s set in the php.ini file.
</p>
<p>
log_errors = on
</p>
<p>
and something like
</p>
<p>
; Log errors to specified file.<br />
error_log = php_error.log 
</p>
<p>
If you dont specify a path, it will (should) write it into the current web root. You can also tell php to output it as html so you can view it in your browser, though I dont use that. 
</p>
<h2>
Cache</h2>
<p>
One source of frustration is when you think you&#39;ve fixed something but its still broken. 
</p>
<p>
<strong>
Clear template cache</strong>
</p>
<p>
from command line:  
</p>
<p>
rm -f var/cache/templates/*.php CACHEKEYS
</p>
<p>
or from the SiteTools module. 
</p>
<p>
<strong>
Clear browser cache</strong>
</p>
<p>
yup. 
</p>
<p>
<strong>
Clear session cookies</strong> 
</p>
<p>
This can be helpful for example if there&#39;s session vars hanging around and you want to start fresh. The FireFox webdeveloper plugin can do this directly.
</p>
<h2>Debugging PHP</h2>
<p>
Even if you&#39;re not a module developer, you sometimes might need to trace through the php code to see what&#39;s going on or help track down a bug.
</p>
<p>
You can output directly to the current page using echo, print_r(), printf(), and var_dump() . Note, these will also cause a warning message on your page that you have output that has not gone through the normal buffering. Examples:
</p>
<p>
echo &#39;you have entered articles_userapi_getall&#39;;
</p>
<p>
printf( &quot;the value of x is %s&quot;, $x );
</p>
<p>
print_r( $arr );
</p>
<p>
var_dump( $arr );
</p>
<p>
<strong>Output to log.txt</strong>
</p>
<p>
To send your debugging info to log.txt instead of the page:
</p>
<p>
xarLogMessage( $string ); 
</p>
<p>
xarLogVariable($name, $var ); 
</p>
<p>
for example,
</p>
<p>
xarLogMessage( &#39;entered articles_userapi_getall&#39;);<br />
xarLogVariable(&#39;args&#39;, $args); 
</p>
<p>
I suppose these functions can be called from a template too though I havent had occation to do that yet.
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<h2>Using xdebug</h2>
<p>
Disclaimer, i&#39;ve never tried they yet myself, but dropped these notes in here. One day I&#39;ll give it a try and update this section. 
</p>
<p>
in php.ini: 
</p>
<p>
extension=xdebug.so<br />
xdebug.collect_params=1<br />
xdebug.collect_return=1<br />
xdebug.trace_output_name=timestamp 
</p>
<p>
in template: 
</p>
<p>
&lt;xar:set name=&quot;dummy1&quot;&gt;1;xdebug_start_trace()&lt;/xar:set&gt;
</p>
<p>
...
</p>
<p>
&lt;xar:set name=&quot;dummy2&quot;&gt;1;xdebug_stop_trace()&lt;/xar:set&gt;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,2526,37,xaraya,"debugging,block layout,php",Strategies_for_Debugging_in_Xaraya
18,"Compatibility between mySQL 4 and 5","I regularly move my projects between various servers, which often have different versions of software tools. I encountered a problem moving data from MySQL 5 to MySQL 4. Here's the fix.",3,1151638041,9,,2,"<p>
In general, I use mysqldump to export databases, and mysql to import them.
</p>
<h2>MySQL 4 to 5</h2>
<p>
No problems here.
</p>
<p>
1. Export the database on the system with MySQL 4:
</p>
<p>
mysqldump  -p  --opt   dbname  &gt;dbname.sql
</p>
<p>
&nbsp;
</p>
<p>
2. Copy the database to the other sytem, for example,
</p>
<p>
scp   dbname.sql   me@domain.com:/home/me
</p>
<p>
&nbsp;
</p>
<p>
3. To import the database on the system with MySQL 5:
</p>
<p>
mysqladmin   -p   drop   dbname
</p>
<p>
mysqladmin   -p   create   dbname
</p>
<p>
mysql   -p   -D   dbname   &lt;dbname.sql
</p>
<p>
&nbsp;
</p>
<h2>MySQL 5 to 4</h2>
<p>
The issue here is 4 cannot directly import files dumped by 5. You must use the --compatible=mysql40 flag. However, that does not export the &quot;autoincrement&quot; option on tables that are autoincremented, so re-importing the data will fail.
</p>
<p>
I&#39;ve assembled a script from various googled sources (unfortunately I didnt add those links in my comments). I called it &quot;mysql-aifix&quot;, and it takes the dbname and creates a file called &quot;dbname-fix.sql&quot;. After importing the database, also import this fix sql to ensure your autoincrement tables are autoincrementing.
</p>
<p>
1. Export the database on the system with MySQL 5:
</p>
<p>
mysqldump  -p  --opt   --compatible=mysql40  dbname  &gt;dbname.sql
</p>
<p>
mysql-aifix  dbname 
</p>
<p>
&nbsp;
</p>
<p>
2. Copy the database to the other sytem, for example,
</p>
<p>
scp  dbname.sql  me@domain.com:/home/me
</p>
<p>
scp  dbname-fix.sql  me@domain.com:/home/me 
</p>
<p>
&nbsp;
</p>
<p>
3. To import the database on the system with MySQL 4:
</p>
<p>
mysqladmin  -p  drop  dbname
</p>
<p>
mysqladmin  -p  create  dbname
</p>
<p>
mysql  -p  -D  dbname  &lt;dbname.sql
</p>
<p>
mysql  -p  -D  dbname  &lt;dbname-fix.sql 
</p>
<p>
&nbsp;
</p>
<h2>The msql-aifix Script</h2>
<p>
Paste this code into a file named mysql-aifix, and chmod +x it. 
</p>
<p>
&nbsp;
</p>
#!/usr/bin/php <br />
&lt;?php<br />
$hostname = &quot;localhost&quot;;<br />
$username = &quot;root&quot;;<br />
$password = &quot;secret&quot;;<br />
if ($argc &lt; 2) {<br />
echo &quot;Usage: mysql-aifix [dbname] \n&quot;;<br />
echo &quot;Adds autoincrement to mysqldump for database dbname \n&quot;;<br />
echo &quot;Outputs file dbname-fix.sql \n&quot;;<br />
exit;<br />
}<br />
<br />
$dbName = $argv[1];<br />
mysql_connect($hostname,$username,$password) or die(&quot;Can&#39;t create connection&quot;);<br />
$res1 = mysql_query(&quot;SHOW TABLES FROM $dbName&quot;);<br />
if (empty($res1)) die(&quot;Can&#39;t find database &#39;&quot; . $dbName . &quot;&#39;&quot;);<br />
$i=0;<br />
$fname = $dbName . &quot;-fix.sql&quot;;<br />
$fp = fopen ($fname, &quot;w&quot;);<br />
while($row1 = mysql_fetch_array($res1)){<br />
$res2 = mysql_db_query($dbName, &quot;SHOW CREATE TABLE $row1[0]&quot;);<br />
while($row2 = mysql_fetch_array($res2)){<br />
preg_match(&quot;/\s*(\W\w+\W)(.*auto_increment)/&quot;, $row2[1], $matches);<br />
if($matches){<br />
$i++;<br />
$str = &quot;ALTER TABLE &quot;.$row2[0].&quot; CHANGE &quot;.$matches[1].&quot;<br />
&quot;.$matches[1].&quot;&quot;.$matches[2].&quot;;\n&quot;;<br />
fwrite($fp, $str);<br />
}<br />
}<br />
mysql_free_result($res2);<br />
}<br />
fclose($fp);<br />
mysql_free_result($res1);<br />
mysql_close();<br />
echo &quot;Entries created: &quot;.$i . &quot; in file &quot; . $fname; <br />
?&gt;<br />
<br />
<p>
&nbsp;
</p>
",linoj,17769,38,xamp,mysql,Compatibility_between_mySQL_4_and_5
17,"o-wa tana siam","A tale I once heard. The older I get, this story seems more and more appropriate.",3,1151510046,9,,2,"<p>
A young man, upset, bitter and depressed, went to visit an old Indian witch doctor for help. 
</p>
<p>
The young man spent hours, complaining about everything. He was unhappy. He was not satisfied. He did not like the things he had. He wanted the things he didn&#39;t have. He failed because others got in his way. Nothing was right. Nothing was good. If only he could find someone to fix his problems.   
</p>
<p>
The witch doctor offered a remedy, and told him &quot;repeat these holy words every day for a week&quot;:
</p>
<p>
<br />
&quot;o-wa tana siam&quot;
</p>
<p>
&nbsp;
</p>
<p>
The man did so, and returned a week later. &quot;I did as you said, but things are not better. Now what?&quot;
</p>
<p>
&nbsp;
</p>
<p>
The witch doctor instructed him repeat the words, louder, and louder while walking through town.
</p>
<p>
&nbsp;
</p>
<p>
&quot;And then when you reach the center square, SHOUT the same chant again and again at the top of your lungs&quot;,
</p>
<p>
&nbsp;
</p>
<p>
&quot;O-WA TANA SIAM&quot;
</p>
<p>
&nbsp;
</p>
<p>
The young man followed the wise man&#39;s instructions.
</p>
<p>
&nbsp;
</p>
<p>
Until he realized he as actually shouting, &quot;OH WHAT AN ASS I AM&quot;
</p>
<p>
&nbsp;
</p>
<p>
And at that moment, he laughed, he cried, he felt better, for he realized it was the truth! 
</p>
<p>
&nbsp;
</p>
",linoj,2335,39,musings,,o-wa_tana_siam
16,"Successful Ubuntu linux install","Tonight I installed the Ubuntu distro with my son on an old PC. Quick, easy, and just works!",3,1151471712,9,,0,"<p>
A few years ago i first installed Linux on several machines, and ended up using them mostly as headless servers (no monitor) on my home network while keeping Windows on my laptop and desktop workstations. 
</p>
<p>
&nbsp;
</p>
",linoj,0,38,xamp,,Successful_Ubuntu_linux_install
15,"Unix Command crib sheet",,3,1151451145,9,,2,"<p>
&nbsp;
</p>
<h2>Copying/Downloading</h2>
<p>
wget
</p>
<p>
fetch
</p>
<p>
scp
</p>
<p>
curl 
</p>
<p>
&nbsp;
</p>
<h2>Searching</h2>
<p>
<strong>grep</strong>
</p>
<p>
grep -r &quot;text2find&quot; ./* 
</p>
<p>
(*.ext doesnt recurse)
</p>
<p>
ls | grep -i php |less 
</p>
<p>
&nbsp;
</p>
<h3>
find</h3>
<p>
find  /etc  -name my.cnf 
</p>
<p>
find  /usr  -name &quot;Chapter1*&quot;  -type f  -pint 
</p>
<p>
find  /   -name &quot;something.*&quot;  -print
</p>
<p>
find / -iname &#39;*some*&#39; 
</p>
<p>
http://www.devdaily.com/unix/edu/examples/find.shtml
</p>
<p>
&nbsp;
</p>
<h2>Processes</h2>
<p>
ps aux |grep httpd 
</p>
<p>
netstat -anl |grep LISTEN
</p>
<p>
sudo killall -9 httpd
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,3358,38,xamp,,Unix_Command_crib_sheet
14,"Xaraya Taxonomies: organizing your content","Xaraya offers a number of different ways to organize content. There are plusses and minusses to each way. And unfortuntely none are 100%. So, how do you decide what to use and when?",3,1151448106,9,,0,"<p>
Issues
</p>
<ul>
	<li>types of content</li>
	<li>tagging items</li>
	<li>navigation</li>
	<li>combining methods<br />
	</li>
</ul>
<p>
&nbsp;
</p>
<p>
Articles/Pubtypes
</p>
<p>
&nbsp;
</p>
<p>
Categories
</p>
<p>
&nbsp;
</p>
<p>
Keywords
</p>
<p>
&nbsp;
</p>
<p>
Xarpages
</p>
<p>
&nbsp;
</p>
<p>
Hooked Dynamic Data fields
</p>
<p>
&nbsp;
</p>
<p>
Dynamic Data Objects
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,0,37,xaraya,,Xaraya_Taxonomies%3A_organizing_your_content
13,"Ancient history: OOPC 1988","look what i found... :) I was thinking about how I used to enjoy programming in C and C++, back in the ""old"" days. And then I started searching for an article I published in Byte magazine back in 1988. ",3,1151447243,9,,2,"<p>
table of contents: http://www.math.utah.edu/pub/tex/bib/toc/byte1980.html  search my name &quot;linowes&quot; on that page
</p>
<p>
i was in good company in that issue-- Kernighan &amp; Ritchie, Bjarne Stroustrup 
</p>
<p>
article is here: http://www.krsaborio.net/research/1980s/88/880801_e.htm
</p>
<p>
looks like they OCR&#39;d it or something.
</p>
<p>
Here&#39;s the full text (just in case that link goes away)
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
<strong>In Depth: The C Language It&#39;s an Attitude</strong>
</p>
<p>
<strong>There&#39;s a lot of extra coding, but you can do object-oriented programming 
in conventional C</strong>
</p>
<p>
Jonathan S. Linowes <br />
BYTE 
</p>
<p>
August 1, 1988
</p>
<p>
Object-oriented programming is not dependent on any given programming 
language; it&#39;s an attitude. Structured programming asks you to answer the 
questions, &#39;&#39;How is my data transformed?&#39;&#39; and &#39;&#39;What are my inputs and 
outputs?&#39;&#39; Object-oriented programming asks, &#39;&#39;What are the things I will be 
working with?&#39;&#39; and &#39;&#39;What do I expect these things to do?&#39;&#39; It is becoming a 
popular alternative to conventional structured techniques for organizing and 
thinking about programs. 
</p>
<p>
OOPC is a mechanism for object-oriented programming using standard C. It&#39;s 
not a programming language in itself, nor is it a preprocessor. Rather, it&#39;s a 
collection of conventions and programming techniques that, if followed, give you 
many of the benefits of today&#39;s object-oriented programming languages--benefits 
such as data encapsulation, modularity, and inheritance. 
</p>
<p>
Through OOPC, I introduce the concepts of object-oriented programming in a 
practical and familiar context, rather than complicating the issue with a new 
language and a new syntax. To demonstrate OOPC techniques in action, I have 
implemented the MyShape example adapted from The C++ Programming Language by 
Bjarne Stroustrup (Addison-Wesley, 1986), pages 213 to 221. 
</p>
<p>
Object-oriented programming techniques are very good for prototyping 
applications. In fact, OOPC was developed for the MIT Media Laboratory UseIT 
project, a user-interface test-bed system. The UseIT system lets you easily 
build components of a user interface, modify an interaction technique (such as 
changing a pop-up menu into a pull-down), and quickly program entirely new 
objects. This was a fairly complex project with multiple programmers and 
required the ability to make quick code modifications. Using object-oriented 
programming techniques made the UseIT system easy to understand and modify. 
Objects as Virtual Devices You can think of object-oriented systems as a 
collection of independent virtual devices communicating with each other, each 
with its own internal structure. These virtual devices, called objects, consist 
of properties (private data) and methods (the operations applied to that data). 
The internal structure of an object is not accessible to any other object or 
program. This concept of data encapsulation is key to object-oriented 
programming, as it separates the object&#39;s implementation from its use. 
</p>
<p>
Objects communicate with other objects through messages. You send messages to 
create new objects, to modify and inquire about an object&#39;s property values, and 
to request the object to perform specific actions. In a sense, messages are like 
op codes to the object. An object can send messages to any other object, 
including itself. 
</p>
<p>
You create objects by instantiating classes. Classes act as templates for 
objects, which have a particular set of properties and methods. All instances of 
a given class have the same properties and methods, although the values of each 
property will vary. 
</p>
<p>
The distinction between object classes and instances is analogous to the 
relationship between structure definitions and structure variables. For example, 
in C, struct sname open-brace ... close-brace; declares a template for structure 
sname, and struct sname varname; declares varname as an instance of sname. 
</p>
<p>
Object classes are organized into a hierarchical taxonomy of subclasses and 
superclasses. With subclasses you can define increasingly specialized object 
types. Superclasses let you share generalizations among separate classes. 
</p>
<p>
An object inherits all the properties and methods of its superclass. A class 
can distinguish itself from its superclass by assigning different default 
property values, substituting methods for specific messages, and adding new 
properties, methods, and messages. 
</p>
<p>
When you send a message to an object, the object&#39;s message handler receives 
the message and checks for a local method for that message. If it has none, the 
message is forwarded to the object&#39;s superclass message handler, and the method 
there is used. If the superclass doesn&#39;t recognize the message, it sends the 
message along to its superclass, and so forth, until a method is found. The 
message is declared invalid if no method is found. Using OOPC Objects The OOPC 
programmer interface consists of a header file, the functions New and Send, and 
a library of message-handler functions. Message handlers receive messages and 
invoke the corresponding methods. Every object class in the object library has a 
message handler. 
</p>
<p>
The header file, OOPC.H, contains common definitions for standard data types 
in OOPC, such as class message-handler function declarations and message 
definitions. 
</p>
<p>
Instance objects are identified with a reference, or handle, of type Object, 
defined in OOPC.H, returned when a new instance is created. You must use this 
identifier whenever you reference the object--for example, when sending it 
messages. When you use the Object handle, applications need never know the 
internal structure of the object. 
</p>
<p>
You create a new instance with the function New: object = New( handler ); 
where handler is the message-handler function for the class of the object you 
are creating. The function New returns the handle of the instance into whatever 
variable name you&#39;ve specified for the object. When you create an object, New 
allocates memory for the object&#39;s properties and initializes this memory to 
default values. It returns a null object if it can&#39;t create the instance. 
</p>
<p>
Objects are sent messages with the Send macro function: error = Send( object, 
message, &amp;parameters, &amp;result ); where object receives the message, message 
enumerates it, and the last two arguments are pointers to the parameter and 
result blocks whose contents depend on the particular message specified (they 
could be null). The function Send returns an error code (0=ok). 
</p>
<p>
A message is actually just an enumerated integer type, such that each message 
has a unique value. Some examples include MSG-SET-RECTANGLE-p, which sets a 
rectangle&#39;s corner coordinates; MSG-ASK-NORTH-r, which requests the top-center 
point of a rectangle; and MSG-DRAW-p, which tells the object to draw itself. The 
name extensions -p, -r, and -pr remind you that the object requires a parameter 
block, result block, or both, along with the message. 
</p>
<p>
When a message requires parameters, it has an associated data structure for 
stuffing the parameter values, named, by convention, message-Param. For example, 
Msg-Draw-Param is the parameter block for the MSG-DRAW-p message (Msg-Draw-Param 
specifies the screen on which to draw the object). Similarly, results are 
returned in the structure message-Result. For example, structure 
Msg-North-Result contains the point returned by MSG-NORTH-r. These parameter and 
result blocks are the same regardless of which object receives the message. 
</p>
<p>
Unfortunately, because OOPC requires that you be able to send different data 
structures to the same function, you can&#39;t perform type checking to verify that 
the correct blocks are specified for a given message. However, the 
message-naming convention, combined with the parameter- and result-block 
structures, form a satisfactory interim solution without a preprocessor. The 
naming conventions make it easier to visually verify the code, and the C 
compiler will verify the types of each specific parameter/result field within 
the blocks. An Example The class hierarchy in figure 1 shows the superclasses 
and subclass used for the MyShape example. The class Rectangle includes 
coordinates defining its two corners. MyShape is a subclass of Rectangle that 
implements a picture of a face. It uses the Rectangle properties to define its 
border and adds properties for the eyes and mouth (defined as horizontal lines). 
Messages and methods regarding the border of a MyShape object are inherited from 
its superclass, Rectangle; other messages are handled by the local method, 
MyShape. In OOPC, all objects are subclasses of class Common. 
</p>
<p>
The main program, shown in listing 1, creates three shapes--a rectangle, a 
horizontal line, and an instance of MyShape (a face)--and draws them on the 
screen. Then, the line is stacked on top of the face, the rectangle is stacked 
on top of the line, and the drawing is refreshed. 
</p>
<p>
When an instance of a class is created, its properties are set to default 
values, leaving it to the application to set them to desired values. For 
example, new rectangles are created at (0,0)-(0,0), which is not very useful. 
The new object must then be set, such as at (0,0)-(10,10), as in the example.
</p>
<p>
The MyShape example shows how you can write procedures that manipulate 
objects without knowledge of the objects they will be manipulating. For example, 
the stack-on-top function rearranges arbitrary objects, as long as they 
understand the messages MSG-NORTH, MSG- SOUTH, and MSG-MOVE, to get their 
top-center and bottom-center points and to change their positions. Similarly, 
the function refresh-shapes sends MSG- DRAW to the objects in the display list, 
without knowing anything about the objects there. In fact, you can code and 
compile these functions before writing the object classes they are manipulating. 
Implementing OOPC Objects OOPC uses an #include chaining technique that requires 
that each object be compiled separately. Each class is made of at least two 
source files: class.C and class.P. The .C file contains the message handler and 
individual methods. The .P file contains the class properties. You must include 
the header file OOPC.H at the top of every source (.C) file in addition to the 
object&#39;s class property file. 
</p>
<p>
Using nested file inclusion, the .P files provide the mechanism for property 
inheritance. For example, listing 2 shows the Rectangle-Object data structure. 
The fields of this structure are included from the RECTANGLE.P file. The first 
statement of the file is another include file, SHAPE.H, containing the 
properties from Rectangle&#39;s superclass. 
</p>
<p>
Superclass properties appear in memory before subclass properties, as shown 
in figure 2, which facilitates method inheritance. When a message is deferred by 
a class to its superclass, the object&#39;s handle is passed. Since this handle is 
actually a pointer to the object&#39;s property data, the superclass can access the 
properties it knows of, yet need not (and should not) access the subclass 
properties. 
</p>
<p>
Each object class has a single message-handler function having the same name 
as the object itself. Thus, rectangles have a message handler called Rectangle.
</p>
<p>
The handler is a &#39;&#39;switch&#39;&#39; statement with cases for each message recognized 
locally by the class, calling the corresponding method--a static local function. 
If the message handler does not recognize the message, the message is forwarded 
up to the superclass message handler. Listing 2 is an excerpt of the file 
RECTANGLE.C, showing the chain of inheritance an unrecognized message will 
follow. 
</p>
<p>
Even if an object has a method for a message, it can still inherit the 
superclass method and then augment the result. In the initialization method, for 
example, the object first inherits its superclass method to initialize the 
superclass properties and then initializes its own properties. 
</p>
<p>
Because the topmost class is Common, the first property of every object is a 
pointer to the object&#39;s message-function handler. The Send macro function takes 
advantage of this fact by simply accessing the first field of the object. The 
following is an excerpt from OOPC.H showing how Send is implemented: typedef int 
(*Functionp)(); typedef struct open-brace Functionp 
</p>
<p>
dispatch; close-brace *Object; #define Send(obj,msg,param, 
</p>
<p>
result)?((*(obj- greater than dispatch))(obj,msg, 
</p>
<p>
param,result)) To implement Send, I first define the data type Functionp, 
which is a pointer to a function. Then I define a data structure that declares 
as its member an item called dispatch, which is of type Functionp. Finally, I 
give this structure the tag *Object, so that Object is a data type that is a 
pointer to a structure whose first member is a pointer to a function. In the 
Send macro, obj is of type Object, so obj- greater than dispatch will fish out 
the pointer to the desired function. The rest of this line executes the 
function. 
</p>
<p>
Finally, the function New is an interface for sending a MSG-NEW message to a 
dispatch function. New creates an instance for an object class that you can then 
use with the function Send. typedef struct open-brace Object object; close-brace
</p>
<p>
Msg-New-Result; Objec-New-Result new; 
</p>
<p>
(*dispatch)( NULL, 
</p>
<p>
MSG-NEW-r, NULL, &amp;new ); 
</p>
<p>
return new.object; close-brace Limitations of OOPC As you can see, there is a 
lot of extra coding you must tend to yourself, such as setting up the include 
chain and making sure that you pass the correct parameters to an object. These 
are details that an object-oriented language can manage for you. Object-oriented 
languages differ in their support for memory management. 
</p>
<p>
The advantage of using a conventional language is that it doesn&#39;t require the 
additional investment of buying and learning a new language. Plus, it&#39;s 
code-compatible with any existing libraries and tools you currently use. 
Editor&#39;s note: The source code for the OOPC object classes and the MyShape 
example are available in a variety of formats. See page 3 for further details.
</p>
<p>
-- Jonathan S. Linowes is a founding partner of Sirlin Computer Corp. in 
Hudson, New Hampshire, specializing in database and computer graphics systems. 
He can be contacted on BIX as &#39;&#39;editors.&#39;&#39; 
</p>
<p>
Figure 1: Class hierarchy in the MyShape example. 
</p>
<p>
Figure 2: Memory organization of MyShape class properties. 
</p>
<p>
Listing 1: OOPC code for the MyShape example program. This code creates 
several shapes--a rectangle, a line, and a face (MyShape)--and then stacks them 
on top of each other. 
</p>
<p>
Listing 2: The chain of inheritance for the rectangle class. If a rectangle 
object is not able to recognize a message, the Base macro will pass it up to a 
superclass, Shape, to see if the message is defined there. If Shape can&#39;t decode 
the message, it will pass it up to Common. If Common can&#39;t understand the 
message, an error is returned. 
</p>
<p>
&nbsp;
</p>
<p>
Copyright 1988 McGraw-Hill, Inc
</p>
<p>
&nbsp;
</p>
",linoj,23779,39,musings,,Ancient_history%3A_OOPC_1988
12,"subscription, notification, and newsletter features","This is an attempt to capture the various features I require for managing mailing lists from my sites.",3,1151444662,9,,0,"<p>
This is no small feat, since various different xaraya modules do some of this but none do all if it. Just keeping track of the features is hard enough. Then making the decision what to use now. And finally, if I were to develop what I need, would it make sense to improve an existing module or start a new one (taking pieces from various places).
</p>
<p>
&nbsp;
</p>
<p>
Features
</p>
<p>
&nbsp;
</p>
<p>
Subscriber options
</p>
<p>
Registered users: user id<br />
</p>
<p>
Non-registered users: email, name, other contact info
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<h2>Feature / Module Checklist</h2>
<p>
&nbsp;
</p>
<table border=""0"">
	<tbody>
		<tr>
			<td> Feature</td>
			<td> </td>
			<td> pubsub</td>
			<td>xarbb </td>
			<td>sitecontact </td>
			<td>Dada mail </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> Subscriber Options<br />
			</td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> Registered users<br />
			</td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> Non-registered</td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> Opt-in/out</td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> Sending Options<br />
			</td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> Content</td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
	</tbody>
</table>
<p>
&nbsp;
</p>
",linoj,0,37,xaraya,newsletter,subscription%2C_notification%2C_and_newsletter_features
11,"ins and outs of the pubsub module","this is not an overview of the module, it's musing about what i've discovered that is, and is not, implemented in  this module (as of v1.5.0)",3,1151299767,9,,0,"<p>
&nbsp;
</p>
<h2>html mail</h2>
<p>
is not implemented.
</p>
<p>
if html mail is on in the mail module, the content from the pubsub template is enclosed within &lt;pre&gt; ... &lt;/pre&gt; tags. So, dont try to use &lt;div&#39;s or &lt;a&gt; or anything like that.
</p>
<p>
&nbsp;
</p>
<p>
Emal template
</p>
<p>
&nbsp;
</p>
<p>
- the link at the bottom of the email is hardcoded in the php (runjob.php) 
</p>
",linoj,0,37,xaraya,,ins_and_outs_of_the_pubsub_module
10,"Accessing URL details","Summary of the various xaraya api for getting info on the current URL[b]",3,1151288260,9,,2,"<h2>Current Page</h2>
<p>
<strong>$url = xarServerGetCurrentURL() </strong>
</p>
<p>
Returns the current page URL. Optionally replace some components (see below)
</p>
<p>
&nbsp;
</p>
<p>
<strong>$url = xarServerGetCurrentURL( $args = array(), $generateXMLURL = NULL, $target = NULL ) </strong>
</p>
<p>
Returns the current page URL. Optionally replace some components.
</p>
<p>
* @param args array additional parameters to be added to/replaced in the URL (e.g. theme, ...)<br />
* @param generateXMLURL boolean over-ride Server default setting for generating XML URLs (true/false/NULL)<br />
* @param target string add a &#39;target&#39; component to the URL<br />
</p>
<p>
Examples:
</p>
<p>
$url = xarServerGetCurrentURL();<br />
returns &quot;http://www.mysite.com/news/123&quot; (with short url&#39;s enabled and index.php removed)<br />
</p>
<p>
$url = xarServerGetCurrentURL( array(&#39;phase&#39;=&gt;&#39;2&#39;) ) <br />
returns &quot;http://www.mysite.com/news/123?phase=2&quot; 
</p>
<p>
$url = xarServerGetCurrentURL( NULL, NULL, &quot;abc&quot; ) <br />
returns &quot;http://www.mysite.com/news/123#abc&quot;  <br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>$server = xarServerGetHost() </strong>
</p>
<p>
Returns current server name, e.g. &quot;www.mysite.com&quot;. Constructed from HTTP_HOST, or HTTP_SERVER:HTTP_PORT
</p>
<p>
&nbsp;
</p>
<p>
<strong>$http = xarServerGetProtocol()</strong>
</p>
<p>
Returns either &quot;http&quot; or &quot;https&quot;
</p>
<p>
&nbsp;
</p>
<p>
<strong>$url = xarServerGetBaseURL() </strong>
</p>
<p>
Returns the Xaraya base URL, e.g. &quot;http://www.mysite.com/index.php&quot; 
</p>
<p>
&nbsp;
</p>
<h2>Getting Get Vars </h2>
<p>
<strong>$info = xarRequestGetInfo()</strong>
</p>
<p>
get current module, fn type, and function
</p>
<p>
[0 ] = module name (&#39;articles&#39;)
</p>
<p>
[1] = type (&#39;user&#39;, &#39;admin&#39;)
</p>
<p>
[2] = function (&#39;view&#39;) 
</p>
<p>
&nbsp;
</p>
<p>
<strong>
$value = xarRequestGetVar( &#39;xxx&#39; )</strong>
</p>
<p>
get value of a get var &#39;xxx&#39;
</p>
<p>
&nbsp;
</p>
<h2>xarVarFetch </h2>
<p>
<strong>$ret = xarVarFetch(  &#39;name&#39;, &#39;validation&#39;, $var, default[, flags[, prep]] )</strong>
</p>
<p>
like xarRequestGetVar but does the validation stuff. This is my most common usage, for more see article: <a href=""http://it-works.ch/index.php?module=articles&amp;func=display&amp;ptid=28&amp;catid=8&amp;aid=37"" target=""_blank"">http://it-works.ch/index.php?module=articles&amp;func=display&amp;ptid=28&amp;catid=8&amp;aid=37</a>
</p>
<p>
Where:
</p>
<p>
name        - string name of the get or post variable 
</p>
<p>
validation - type checking, possible values: &#39;int&#39;, &#39;str&#39;, &#39;checkbox&#39;, &#39;array&#39;, 
</p>
<blockquote>
	<p>
	xaraya comes with a ton of different validators you can use 
	</p>
	<p>
	advanced validation examples
	</p>
	<p>
	&#39;int:1:100&#39;     integer in range 1 to 100
	</p>
	<p>
	&nbsp;
	</p>
	<p>
	For details on validation rules, see <a href=""http://www.xaraya.com/index.php/documentation/163"">http://www.xaraya.com/index.php/documentation/163</a>   
	</p>
</blockquote>
<p>
var             - php variable to assign the value
</p>
<p>
default        - default value if &#39;name&#39; isn&#39;t found
</p>
<p>
flags        -  
</p>
<blockquote>
	<p>
	(none)        - required, raise exception if not in post or get 
	</p>
	<p>
	XARVAR_NOT_REQUIRED    - if not present, use the default value
	</p>
	<p>
	XARVAR_DONT_SET     - if there is an existing value, use it 
	</p>
	<p>
	other flags also available.
	</p>
	<p>
	prep    - optional flags can do a bit of processing on the data, includes XARVAR_PREP_FOR_DISPLAY, XAR_VAR_PREP_FOR_HTML, and XARVAR_PREP_TRIM 
	</p>
</blockquote>
<p>
ret            - return value, is value assigned to $var, or null if error
</p>
<p>
&nbsp;
</p>
<p>
Examples:
</p>
<pre>
if(!xarVarFetch(&#39;id&#39;, &#39;int&#39;, $id, 0, XARVAR_NOT_REQUIRED)) {return;}<br />
</pre>
<pre>
if (!xarVarFetch(&#39;reassign&#39;, &#39;checkbox&#39;,  $reassign, false, XARVAR_NOT_REQUIRED)) {return;} <br />
</pre>
<pre>
    if (!xarVarFetch(&#39;colors&#39;, &#39;array&#39;,  $colors, array(), XARVAR_NOT_REQUIRED)) {return;} <br />
</pre>
<p>
&nbsp;
</p>
<h2>Redirect, Referer, etc.</h2>
<p>
<strong>xarResponseRedirect( $redirectURL ) </strong>
</p>
<p>
Redirect to the $redirectURL
</p>
<p>
&nbsp;
</p>
<p>
<strong>$truefalse = xarRequestIsLocalReferer() </strong>
</p>
<p>
Returns true if this is a local referal 
</p>
<p>
&nbsp;
</p>
<h2>Constructing a URL</h2>
<p>
See <strong>xarServerGetCurrentURL </strong>above.
</p>
<p>
&nbsp;
</p>
<p>
<strong>$url = xarModUrl( $modName, $modType, $funcName, $args ) </strong>
</p>
<p>
<strong>$url = xarModURL($modName = NULL, $modType = &#39;user&#39;, $funcName = &#39;main&#39;, $args = array(), $generateXMLURL = NULL, $fragment = NULL, $entrypoint = array())</strong><br />
</p>
<p>
Create a Xaraya URL.
</p>
<p>
* @global xarMod_generateShortURLs bool<br />
* @global xarMod_generateXMLURLs bool<br />
* @param modName string registered name of module<br />
* @param modType string type of function<br />
* @param funcName string module function<br />
* @param string fragment document fragment target (e.g. somesite.com/index.php?foo=bar#target)<br />
* @param args array of arguments to put on the URL<br />
* @param entrypoint array of arguments for different entrypoint than index.php<br />
* @return mixed absolute URL for call, or false on failure<br />
</p>
<p>
&nbsp;
</p>
<p>
<strong>$content = xarModFunc( $modName, $modType = &#39;user&#39;, $funcName = &#39;main&#39;, $args = array() )</strong> 
</p>
<p>
Not exactly fits in this article topic, but included here anyway. Processes the xar module function, runs it through its template, and returns the content in a string for display in the current template.
</p>
<p>
Example:
</p>
<p>
&lt;xar:set name=&quot;stuff&quot;&gt;xarModFunc(&#39;articles&#39;,&#39;user&#39;,&#39;display&#39;,array(&#39;aid&#39;=&gt;$aid))&lt;/xar:set&gt;<br />
#$stuff#
</p>
<p>
&nbsp;
</p>
<p>
<strong>$results = xarModAPIFunc($modName, $modType = &#39;user&#39;, $funcName = &#39;main&#39;, $args = array(), $throwException = 1) </strong>
</p>
<p>
well, if i&#39;m going to include xarModFunc, I might as well include this one too, now we&#39;re really off topic :)
</p>
<p>
* @param modName string registered name of module<br />
* @param modType string type of function to run<br />
* @param funcName string specific function to run<br />
* @param args array arguments to pass to the function<br />
* @param throwException boolean optional flag to throw an exception if the function doesn&#39;t exist or not (default = 1)<br />
* @return mixed The output of the function, or false on failure<br />
* @raise BAD_PARAM, MODULE_FUNCTION_NOT_EXIST<br />
</p>
<p>
&nbsp;
</p>
",linoj,4700,37,xaraya,"url,xarvarfetch,validation,redirect",Accessing_URL_details
9,"Tabbed blockgroups","A techninque for making tabbed blockgroups in Xaraya. Instead of using <xar:blockgroup name=""tabbed"" /> in my page template, we include a different template that builds the tabbed blocks using the blockgroup. That way we can add or change the blocks using the blockgroups admin GUI and the page will change according.",3,1151275918,9,,2,"<h2>
Overview</h2>
<p>
files:
</p>
<p>
mytheme/includes/tabblocks.xt - include this template in your page
</p>
<p>
mytheme/blocks/tabbed.xt - use this as the blockgroup &quot;outer&quot; template 
</p>
<p>
mytheme/modules/base/includes/tabblocks.js - a bit of javascript 
</p>
<p>
&nbsp;
</p>
<h2>1. Make a blockgroup named &quot;tabbed&quot;</h2>
<p>
This is just a suggested name, but we&#39;ll assume it here.
</p>
<p>
Include any number of blocks to the blockgroup, in the order you want the tabs to appear.
</p>
<p>
Give the blockgroup a template named &quot;tabbed&quot;, defined next.<br />
</p>
<h2>2. Create blocks template &quot;tabbed.xt&quot;</h2>
<p>
Create an outer block template &quot;tabbled.xt&quot; in you theme&#39;s mytheme/blocks/ directory, which will be used as the &quot;outer&quot; template for each block in the blockgroup. 
</p>
<p>
In the template, we&#39;ll surround the block with a div with class=&quot;xar-tabblocks-block&quot; 
</p>
<p>
We&#39;ll also ensure that each block is given a unique ID, in the form &quot;xar-tabblocks-NAME&quot; where NAME is the name of that block. Thus, the wrapper div looks like: 
</p>
<pre>
&lt;xar:set name=&quot;divid&quot;&gt;&quot;xar-tabblocks-&quot; . $name&lt;/xar:set&gt; <br />
&lt;div id=&quot;#$divid#&quot; class=&quot;xar-tabblocks-block&quot;&gt;
</pre>
<pre>
...<br />
</pre>
<pre>
&lt;/div&gt; <br />
</pre>
<p>
Specifically, as an example, here&#39;s my full template,
</p>
<p>
&nbsp;
</p>
<p>
File: mytheme/blocks/tabblocks.xt 
</p>
<pre>
&lt;xar:set name=&quot;divid&quot;&gt;&quot;xar-tabblocks-&quot; . $name&lt;/xar:set&gt; <br />
<br />
&lt;div id=&quot;#$divid#&quot; class=&quot;xar-tabblocks-block&quot;&gt;<br />
</pre>
<pre>
    &lt;xar:if id=&quot;title_condition&quot; condition=&quot;!empty($title)&quot;&gt;<br />
<br />
&lt;div class=&quot;xar-block-head&quot;&gt;<br />
<br />
&lt;div class=&quot;xar-block-title&quot;&gt;<br />
<br />
&lt;xar:var name=&quot;title&quot;/&gt;<br />
<br />
&lt;/div&gt;<br />
<br />
&lt;/div&gt;<br />
<br />
&lt;/xar:if&gt;<br />
<br />
&lt;div class=&quot;xar-block-body&quot;&gt;<br />
<br />
&lt;xar:var name=&quot;content&quot;/&gt;<br />
<br />
&lt;/div&gt;<br />
<br />
&lt;div class=&quot;xar-block-foot&quot;&gt;<br />
<br />
&lt;/div&gt;<br />
</pre>
<pre>
&lt;/div&gt; <br />
</pre>
<pre>
 <br />
</pre>
<p>
&nbsp;
</p>
<h2>3. Create an include template to render the blockgroup, &quot;tabblocks.xt&quot;</h2>
<p>
The blockgroup will be included in your page using &lt;xar:template type=&quot;theme&quot; file=&quot;tabblocks&quot; /&gt;. Now we&#39;ll create this template, mytheme/includes/tabblocks.xt 
</p>
<p>
This is the meat of how this works. There are several parts to this file.
</p>
<h3>3.A. Link exernal files </h3>
<p>
First, we&#39;ll make sure the javascript and stylesheets will be inserted into the page
</p>
<pre>
&lt;!-- &lt;xar:base-include-javascript module=&quot;base&quot; filename=&quot;tabblocks.js&quot; position=&quot;head&quot; /&gt; --&gt;<br />
</pre>
<pre>
&lt;xar:style scope=&quot;module&quot; module=&quot;base&quot; file=&quot;navtabs&quot; /&gt; <br />
</pre>
<p>
Bug alert: the xar:base-include-javascript doesnt actually work here (not sure why), so it should be included in the template that calls this template (as shown later on).
</p>
<p>
&nbsp;
</p>
<h3>3.B. Generate the tabs </h3>
<p>
The second section generates the tabs themselves. We&#39;ll use the same navtabs used by Xaraya, with uses &lt;dl&gt; and &lt;dd&gt; tags for each tab. All the tabs are wrapped in a div class=&quot;xar-tabblocks-tabs&quot;. Each tab is given a unique ID, in the form &quot;xar-tabblocks-NAME-tab&quot;. Thus, the tabs are created with the following code:
</p>
<pre>
    &lt;xar:set name=&quot;grp&quot;&gt;xarModApiFunc(&#39;blocks&#39;,&#39;user&#39;,&#39;groupgetinfo&#39;,array(&#39;name&#39;=&gt;&#39;tabbed&#39;))&lt;/xar:set&gt;<br />
&lt;div class=&quot;xar-tabblocks-tabs&quot;&gt;<br />
&lt;dl class=&quot;xar-tabs&quot;&gt;<br />
&lt;xar:foreach in=&quot;$grp[&#39;instances&#39;]&quot; value=&quot;$blk&quot;&gt;<br />
&lt;xar:set name=&quot;b_nam&quot;&gt;$blk[&#39;name&#39;]&lt;/xar:set&gt;<br />
&lt;xar:set name=&quot;b_id&quot;&gt;&quot;xar-tabblocks-&quot; . $b_nam . &quot;-tab&quot;&lt;/xar:set&gt;<br />
&lt;dd id=&quot;#$b_id#&quot;&gt;&lt;a href=&quot;javascript:void()&quot; onclick=&quot;return tabblocksDisplay(&#39;xar-tabblocks&#39;, &#39;#$b_nam#&#39;);&quot;&gt;#$blk[&#39;title&#39;]#&lt;/a&gt;&lt;/dd&gt;<br />
&lt;/xar:foreach&gt;<br />
&lt;/dl&gt;<br />
&lt;/div&gt;
</pre>
<p>
Note, when you click on a tab, a javascript function is called, tabblocksDisplay, with the prefix of the tabbed block class, and the name of the block that&#39;s been selected. (see below). This function hides all the tab blocks except the selected one. And it gives the current tab a class of &quot;active&quot; so it can be highlighted. 
</p>
<p>
&nbsp;
</p>
<h3>3.C Insert the blockgroup </h3>
<p>
The next step inserts the blockgroup itself:
</p>
<pre>
    &lt;xar:blockgroup name=&quot;tabbed&quot; /&gt;<br />
</pre>
<h3>3.D Make the first tab block visible </h3>
<p>
Finally, we want to hide all the blocks except the first one using some javascript.
</p>
<pre>
&lt;xar:set name=&quot;first&quot;&gt;reset($grp[&#39;instances&#39;])&lt;/xar:set&gt; <br />
</pre>
<pre>
&lt;script type=&quot;text/javascript&quot;&gt;<br />
</pre>
<pre>
tabblocksDisplay(&#39;xar-tabblocks&#39;,&#39;&quot; . $first[&#39;name&#39;] . &quot;&#39;);<br />
</pre>
<pre>
&lt;/script&gt;<br />
</pre>
<p>
Actually, we want to enclose the js in html comments to accomodate non-js browsers, in which case php doesnt see the commented out variable , so we do it this way,<br />
</p>
<pre>
 &lt;xar:set name=&quot;first&quot;&gt;reset($grp[&#39;instances&#39;])&lt;/xar:set&gt;<br />
</pre>
<pre>
 &lt;xar:set name=&quot;js&quot;&gt;<br />
</pre>
<pre>
&quot;&lt;script type=\&quot;text/javascript\&quot;&gt;\r\n &lt;!-- \r\ntabblocksDisplay(&#39;xar-tabblocks&#39;,&#39;&quot; . $first[&#39;name&#39;] . &quot;&#39;);\r\n //--&gt; \r\n&lt;/script&gt;&quot;<br />
</pre>
<pre>
&lt;/xar:set&gt;<br />
</pre>
<pre>
    #$js#<br />
</pre>
<p>
Further fanciness, if you wanted/needed to open this tab via a URL, you could pass the block name as a variable, say ?tab=BLKNAME, then
</p>
<pre>
&lt;xar:set name=&quot;tabname&quot;&gt;xarRequestGetVar(&#39;tab&#39;)&lt;/xar:set&gt;<br />
&lt;xar:if condition=&quot;empty($tabname)&quot;&gt;
</pre>
<pre>
 &lt;xar:set name=&quot;first&quot;&gt;reset($grp[&#39;instances&#39;])&lt;/xar:set&gt;<br />
<br />
&lt;xar:set name=&quot;tabname&quot;&gt;$first[&#39;name&#39;]&lt;/xar:set&gt;
</pre>
<pre>
&lt;/xar:if&gt;<br />
</pre>
<pre>
&lt;script type=&quot;text/javascript&quot;&gt;<br />
</pre>
<pre>
tabblocksDisplay(&#39;xar-tabblocks&#39;,&#39;&quot; . $tabname . &quot;&#39;);  <br />
</pre>
<pre>
&lt;/script&gt; <br />
</pre>
<p>
&nbsp;
</p>
<h3>3.E Resulting document object structure </h3>
<p>
The resulting structure of document object is as follows:
</p>
<pre>
        &lt;div class=&quot;xar-tabblocks&quot;&gt;<br />
</pre>
<pre>
            &lt;div class=&quot;xar-tabblocks-tabs&quot;&gt;<br />
</pre>
<pre>
                &lt;dl class=&quot;xar-tabs&quot;&gt;<br />
</pre>
<pre>
                    &lt;dd id=&quot;xar-tabblocks-BLKNAME-tab&quot;&gt; block title &lt;/dd&gt;<br />
</pre>
<pre>
                    ...<br />
</pre>
<pre>
                &lt;/dl&gt;<br />
</pre>
<pre>
            &lt;/div&gt;<br />
</pre>
<pre>
            &lt;!-- blockgroup name=&quot;tabbed&quot; --&gt;<br />
</pre>
<pre>
            &lt;div id=&quot;xar-tabblocks-BLKNAME&quot; class=&quot;xar-tabblocks-block&quot;&gt;<br />
</pre>
<pre>
                    &lt;div class=&quot;xar-block-head&quot;&gt;<br />
</pre>
<pre>
                        &lt;div class=&quot;xar-block-title&quot;&gt; block title &lt;/div&gt;<br />
</pre>
<pre>
                    &lt;/div&gt;<br />
</pre>
<pre>
                    &lt;div class=&quot;xar-block-body&quot;&gt; <br />
</pre>
<pre>
                        #$content# <br />
</pre>
<pre>
                    &lt;/div&gt;<br />
</pre>
<pre>
                    &lt;div class=&quot;xar-block-footer&quot;&gt;&lt;/div&gt;<br />
</pre>
<pre>
                &lt;/div&gt;<br />
</pre>
<pre>
            &lt;/div&gt;<br />
</pre>
<pre>
            ... for each block in the blockgroup<br />
</pre>
<pre>
        &lt;/div&gt;<br />
</pre>
<h3>3 .F Disable tabs in preview</h3>
<p>
Note, if you want to disable the tabbed  view , for example , when the page is viewed during an admin function such as previews, you can  disable  it in the template wit h  the following code:
</p>
<p>
&lt;xar:set name=&quot;requestInfo&quot;&gt;xarRequestGetInfo()&lt;/xar:set&gt;<br />
&lt;xar:if condition=&quot;$requestInfo[1] eq &#39;admin&#39;&quot;&gt;<br />
&lt;xar:blockgroup name=&quot;tabbed&quot; /&gt;<br />
&lt;xar:else /&gt;<br />
... normal template ...
</p>
<p>
&lt;/xar:if&gt; 
</p>
<p>
&nbsp;
</p>
<h2>The javascript file, tabblocks.js</h2>
<p>
A  little bit of javascript handles the onclick on the tabs. It defines two functions
</p>
<p>
tabblocksClearAll - hides all the block divs y setting display:none, and no tabs are active
</p>
<p>
tabblocksDisplay - shows the selected block by setting it to display:block , and gives the current tab a class=&quot;active&quot;<br />
</p>
<p>
This file, tabblocks.js should be placed in mytheme/modules/base/includes/tabblocks.js
</p>
<p>
&nbsp;
</p>
<pre>
// looks for block div with id=tabpre-xxx and tabs with id=tabpr-xxx-tab<br />
// hide all blocks with id=tabpre-xxx and unstyle it&#39;s tab<br />
function tabblocksClearAll(blockpre)<br />
{<br />
var divs = document.getElementsByTagName(&quot;div&quot;);<br />
for (i=0; i&lt;divs.length; i++) {<br />
var div = divs[i];<br />
var id = div.id;<br />
if (id.indexOf(blockpre) != -1) {<br />
div.style.display = &#39;none&#39;;    <br />
<br />
elem = document.getElementById(id + &#39;-tab&#39;);<br />
<br />
elem.setAttribute(&quot;class&quot;,&quot;&quot;);<br />
elem.setAttribute(&quot;className&quot;,&quot;&quot;);<br />
}<br />
}<br />
return false;<br />
}<br />
// display block named id (id=blocpre-id) and active style its tab<br />
function tabblocksDisplay(blockpre, id)<br />
{<br />
tabblocksClearAll(blockpre);<br />
elem = document.getElementById(blockpre + &#39;-&#39; + id);<br />
elem.style.display = &#39;block&#39;;<br />
elem = document.getElementById(id + &#39;-tab&#39;);<br />
elem.setAttribute(&quot;class&quot;,&quot;active&quot;);<br />
elem.setAttribute(&quot;className&quot;,&quot;active&quot;);<br />
return false;<br />
}
</pre>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<h2>Define our styles</h2>
<p>
You could run this without overriding any of the styles, but you&#39;ll see some adjustments will be necessary. Here&#39;s what I see as a good starting place to put in your themes style.css file
</p>
<pre>
/* === tabblocks === */<br />
</pre>
<pre>
.xar-tabblocks { /* contains entire includes/tabblocks.xt */<br />
</pre>
<pre>
    margin: 1em;<br />
</pre>
<pre>
    background-color: white;<br />
</pre>
<pre>
}<br />
</pre>
<pre>
.xar-tabblocks-tabs { /* contains the tabs */<br />
</pre>
<pre>
    width:90%; /* for ie, tabs were pushing width&gt;100% */<br />
</pre>
<pre>
    margin:0 1em;<br />
</pre>
<pre>
}<br />
</pre>
<br />
<pre>
.xar-tabblocks-block { /* tab content div */<br />
</pre>
<pre>
    margin-top: 0;<br />
</pre>
<pre>
    background-color: #ccc;<br />
</pre>
<pre>
    border: solid #aaa 1px;<br />
</pre>
<pre>
}<br />
</pre>
<pre>
 <br />
</pre>
<pre>
.xar-tabblocks-tabs .xar-tabs { /* override the xar defaults */<br />
<br />
<br />
margin-bottom:0; <br />
<br />
<br />
padding-bottom:0; <br />
<br />
<br />
background-color: white;<br />
<br />
<br />
} <br />
</pre>
<pre>
.xar-tabblocks-tabs .xar-tabs a:link, .xar-tabs a:visited {<br />
color: #522829;<br />
font-weight: bold;<br />
}<br />
.xar-tabblocks-tabs .xar-tabs a:hover {<br />
color: #015118;<br />
text-decoration: underline;<br />
background-color: transparent;<br />
}<br />
.xar-tabblocks-tabs * html dl.xar-tabs dd.active {<br />
margin-bottom:3px;    <br />
}<br />
.xar-tabblocks-tabs dl.xar-tabs dd.active a {<br />
color: #015118; /*#00497b;*/<br />
border-color: #015118;<br />
font-weight: bold;<br />
}<br />
.xar-tabblocks-tabs dl.xar-tabs dd.active a:hover {<br />
text-decoration: underline;<br />
}<br />
</pre>
<h2>
Add the Tabbed Blockgroup to your Page Template
</h2>
<p>
For example, if this is a home page and you have the base module as the default module, then add the following lines to your file mytheme/modules/base/user-main.xt
</p>
<p>
&lt;xar:base-include-javascript module=&quot;base&quot; filename=&quot;tabblocks.js&quot; position=&quot;head&quot; /&gt;<br />
&lt;xar:template type=&quot;theme&quot; file=&quot;tabblocks&quot; /&gt;
</p>
<p>
[Note, the base-include-javascript is called here rather than inside tabblocks.xt because it doesnt seem to work inside there]
</p>
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
",linoj,2112,37,xaraya,,Tabbed_blockgroups
8,"Make author editable in articles","Alright, not very profound or rocket science, but it wasn't obvious to me at first",3,1151210657,9,,2,"<p>
To make the author editable in Articles, 
</p>
<p>
Change property type of &quot;authorid&quot; from username to userlist 
</p>
",linoj,2686,37,xaraya,,Make_author_editable_in_articles
7,"Upgrading to 1.1 from Xar 1.0.2","My notes on upgrading my existing sites from Xaraya 1.0.2 to 1.1",3,1151204349,9,,0,"Untitled document
<h2>adminpanels</h2>
<p>
module adminpanels is now base<br />
</p>
<ul>
	<li>pages/default.xt: replace instances of module=&quot;adminpanels&quot;with module=&quot;base&quot;</li>
	<li>move blocks/vertiallistsbycats-top.xt from adminpanels to blocks in the theme/modules (and delete the adminpanels directory)</li>
</ul>
<h2>grpEditorFlag</h2>
<p>
may need to create grpEditorFlag priv and assign to Administrators group (etc)
</p>
<p>
&nbsp;
</p>
<h2>ViewAuthsystem Priv </h2>
<p>
&quot;cant access ViewAuthsystem&quot; error after upgrade<br />
</p>
<p>
if can&#39;t even get the login form after upgrading it may be because the new ViewAuthsystem priv created by upgrade.php was not assigned to the Everybody roles group (upgrade looks for CasualAccess or ReadNonCore).  If my site doesnt have either of these privs assigned to Everybody, use this workaround
</p>
<ul>
	<li>before the upgrade, assign (temporarily) CasualAccess priv to Everybody</li>
	<li>do the upgrade, and login as admim</li>
	<li>add the new ViewAuthsystem priv to the Everybody group (or the priv group that gets assigned there, such as grpVisitorAccess</li>
	<li>remove CasualAccess from Everybody </li>
</ul>
<h2>if allow registration</h2>
<p>
- install Registration module ,  enable short urls etc<br />
</p>
<p>
Replace links in menus and templates
</p>
<p>
-  /roles/register?phase=registerform
with /registration
</p>
<p>
Go into Roles, Config, set the registration and authentication modules, and Submit. Needed even if it seems already set to make sure the db is updated properly. <br />
see http://www.nabble.com/registration-validation-error-t2242035.html<br />
</p>
<p>
&nbsp;
</p>
<h2>login block<br />
</h2>
<p>
Can still login as index.php/roles but the official login page is now index.php?module=authsystem&amp;function=showloginform
</p>
<p>
- replace login blocks with the one in the Registration module <br />
</p>
<p>
Replace links in menus and templates
</p>
<p>
-  &lt;form action=&quot;&amp;xar-modurl-authsystem-user-login;&quot; method=&quot;post&quot; class=&quot;no-top-space&quot;&gt;  (was 
&quot;&amp;xar-modurl-roles-user-login;&quot;)
</p>
<p>
And logout:
</p>
<p>
- roles/logout with authsystem/logout 
</p>
<p>
&nbsp;
</p>
<h2>misctools module</h2>
<p>
- symlink and install  
</p>
<p>
- replace calls to xarModApiFunc(&#39;base&#39;,... with &#39;misctools&#39; for my custom functions (e.g. truncate_string, )
</p>
<p>
&nbsp;
</p>
<h2>other things</h2>
<p>
- make sure  &lt;xar:style scope=&quot;common&quot; /&gt; is in head section (for some reason was commented out of headtagcontent.xt)
</p>
<p>
&nbsp;
</p>
<h2>
CUSTOM HACKS</h2>
<p>
images/xaruserapi/resize.php<br />
78:  $errorMsg = xarML(&#39;Resized image: #(1)&#39;, $src);<br />
<br />
- ? articles search.php uncomment to enable full-text search<br />
<br />
- xarpages uploads fix - admin-modifypage.xd<br />
&lt;form class=&quot;xar-xarpages-admin&quot; action=&quot;#xarModURL(&#39;xarpages&#39;,&#39;admin&#39;,&#39;updatepage&#39;)#&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;<br />
<br />
<br />
<br />
</p>
",linoj,0,37,xaraya,,Upgrading_to_1.1_from_Xar_1.0.2
6,"Human readable files sizes",,3,1151204191,9,,0,"<p>
baraboom posted this at
</p>
<p>
http://www.xaraya.com/index.php/userwiki/597 
</p>
<pre>
&lt;xar:set name=&quot;size&quot;&gt;<br />
xarModAPIFunc(&#39;uploads&#39;, &#39;user&#39;, &#39;normalize_filesize&#39;, array(&#39;fileSize&#39; =&gt; $file[&#39;fileSize&#39;]))<br />
&lt;/xar:set&gt;<br />
&lt;xar:comment&gt;<br />
the following will display 210.19 KB<br />
&lt;/xar:comment&gt;<br />
#size[&#39;short&#39;]#<br />
<br />
&lt;xar:comment&gt;<br />
the following will display 215,234<br />
&lt;/xar:comment&gt;
</pre>
<pre>
#size[&#39;long&#39;]#<br />
</pre>
<p>
&nbsp;
</p>
",linoj,0,37,xaraya,,Human_readable_files_sizes
5,"How to setup multiple configurations in tinymce","I wanted to setup an alternative toolbar setup, a simple toolbar for end users, while using the full advanced one for the webmaster. After a few failed attempts, jojo walked me through it.",3,1151027534,9,,2,"<p>
I decided that the default tinymce configuration would be the advanced
one setup via the admin gui. Thus, my custom one would be a simpler
config that I specify only in the templates that will use it.
</p>
<h2>1. Configure tinymce</h2>
<p>
First, lets make sure tinymce is configured so the rest of this will work. 
</p>
<p>
<span class=""xar-title"">
Install options:</span>
</p>
<p>
<span class=""xar-title"">
Default action mode: </span>Specially labelled only
</p>
<p>
<span class=""xar-title"">
Activation method:</span> Manual override (required for multi configs)<br />
</p>
<p>
<span class=""xar-title"">
Basic options:</span>
</p>
<p>
<span class=""xar-title"">
Default theme editor panel:</span> Advanced (required for multi configs) 
</p>
<p>
<span class=""xar-title"">
Use icon map:</span> no (just to be safe while testing)
</p>
<p>
<span class=""xar-title"">
Use compressor:</span> no (i&#39;ve never seen this work on any of my servers)
</p>
<p>
&nbsp;
</p>
<!--pagebreak-->
<h2>2. Define your new 2nd configuration</h2>
<p>
Go to the Advanced Config tab, and check Multiple Configuration Instances.
</p>
<p>
Then you can enter your new configuration options in the box. Duh...
</p>
<p>
Well, the following options are required. Use the following as a skeleton.
</p>
<pre>
tinyMCE.init({<br />
mode : &quot;textareas&quot;,<br />
editor_selector : &quot;myconfig&quot;,<br />
theme : &quot;advanced&quot;,<br />
theme_advanced_buttons1 : &quot; &quot;,<br />
theme_advanced_buttons2 : &quot; &quot;,<br />
theme_advanced_buttons3 : &quot; &quot;
}); <br />
</pre>
<p>
The editor_selector
option is where you give this config a unique name. All three button lines are required, and if empty, must contain
at least one space char inside the quotes. Also, each line must end
with a comma, except the last that has none.
</p>
<p>
Here&#39;s an example of a simple toolbar that I&#39;ll give my end users
(while reserving the full advanced config for other admin pages). 
</p>
<pre>
tinyMCE.init({<br />
mode : &quot;textareas&quot;,<br />
editor_selector : &quot;simpleEditorConfig&quot;,<br />
theme : &quot;advanced&quot;,<br />
theme_advanced_buttons1 : &quot;bold,underline, bullist,numlist,outdent,indent&quot;,<br />
theme_advanced_buttons2 : &quot; &quot;,<br />
theme_advanced_buttons3 : &quot; &quot;,<br />
theme_advanced_toolbar_location: &quot;top&quot;<br />
}); <br />
</pre>
<p>
This toolbar has just bold, underline, and a few other buttons. And it will be on the top of the edit box. 
</p>
<p>
For other options, you can refer to the Current Active Default
Configuration at the bottom of the page. It shows the options in the
current advanced config (not the one we just defined). You might even
play around with the option settings in the other tabs and see how this
configuration listing changes accordingly, to help define the options
you want in your custom config. And, documentation of all the tinymce
options can be found by following the Usage Documentation link in the
middle of the page.
</p>
<!--pagebreak-->
<h2>3. Add the Configuration to Your Template</h2>
<p>
There are a couple different ways to enable your custom tinymce
configuration. The simplest is to edit the specific template you want
to use it in.
</p>
<p>
For example, lets say you have an Articles module Pubtype, and you
want to use the config on the &quot;body&quot; field in the Modify page. Copy the
modules/articles/xartemplates/admin-modify.xd file to themes/yourtheme/
modules/articles/admin-modify-mypubtype.xt.
</p>
<p>
At the top of the template insert the following lines (as explained in the tinymce Install Options tab page). 
</p>
<pre>
&lt;xar:if condition=&quot;xarModGetVar(&#39;base&#39;,&#39;editor&#39;) eq &#39;tinymce&#39;&quot;&gt;<br />
&lt;xar:template file=&quot;tinymce_insert&quot; module=&quot;tinymce&quot; type=&quot;module&quot; /&gt;<br />
&lt;/xar:if&gt; <br />
</pre>
<p>
This inserts the custom configuration definition into your page. (It
also inserts the default configuration, etc. You can see what&#39;s
inserted by doing a View Source of the page in your browser when we&#39;re
done).
</p>
<p>
Alternatively you can override the showinput-textarea.xt template
with a copy of showinput-tinymce.xd, as explained in the tinymce
Install Options config page.
</p>
<p>
&nbsp;
</p>
<!--pagebreak-->
<h2>4. Tag the Field(s) which will use your configuration </h2>
<p>
In this example we&#39;re going to use our new configuration on the body field. 
</p>
<p>
You must replace the default way of referencing the body textarea
field in BL (block layout) with a regular &lt;textarea&gt; html tag. You cannot use the
BL &lt;xar:articles-field&gt; tag. For example,<br />
</p>
<pre>
&lt;textarea class=&quot;simpleEditorConfig&quot; rows=&quot;10&quot; cols=&quot;50&quot; id=&quot;body&quot; name=&quot;body&quot; tabindex=&quot;0&quot;&gt;&lt;/textarea&gt;<br />
</pre>
<p>
Thus, the template might read:
</p>
<pre>
        &lt;xar:foreach in=&quot;$fields&quot; value=&quot;$field&quot;&gt;<br />
&lt;div class=&quot;xar-form-input-wrapper&quot;&gt;<br />
&lt;label class=&quot;help xar-form-label&quot; title=&quot;#$field[&#39;label&#39;]#&quot; for=&quot;#$field[&#39;id&#39;]#&quot;&gt;#$field[&#39;label&#39;]#&lt;/label&gt;<br />
&lt;xar:if condition=&quot;$field[&#39;label&#39;] eq &#39;body&#39;&gt;<br />
&lt;textarea class=&quot;simpleEditorConfig&quot; rows=&quot;10&quot; cols=&quot;50&quot; id=&quot;body&quot; name=&quot;body&quot; tabindex=&quot;0&quot;&gt;#$fields[&#39;body&#39;][&#39;definition&#39;][&#39;value&#39;]#&lt;/textarea&gt;<br />
&lt;xar:else /&gt;<br />
&lt;xar:articles-field definition=&quot;$field[&#39;definition&#39;]&quot; /&gt;<br />
&lt;/xar:if&gt;<br />
&lt;/div&gt;<br />
&lt;/xar:foreach&gt; 
</pre>
<p>
That should do it!
</p>
<br />
",linoj,3317,37,xaraya,tinymce,How_to_setup_multiple_configurations_in_tinymce
4,"Testing which page you're on in a template","Some templates are included outside the current module space, yet may need to know what page you are currently viewing. For example, some templates are used across pages in your site (using xar:template tag) such as the masthead, leftmenus, navbar, etc. Lots of ways to do this, here's some notes.",3,1150847078,9,,2,"<h2>What URL am I on?</h2>
<p>
Just to start this disucssion, you can get the current URL you&#39;re on with <strong>$url = xarServerGetCurrentURL()</strong>
</p>
<p>
For more on this, and accessing URL parameters, see Vaporbase article &quot;<a href=""postings/10"">Accessing URL details</a>&quot;. 
</p>
<p>
&nbsp;
</p>
<h2>What module and function am I in? </h2>
<p>
Sometimes I just want to know which module you&#39;re in. You can use the <strong>xarModGetName()</strong> function.<br />
</p>
<p>
For example, when base is the default module
</p>
<p>
&lt;xar:if condition=&quot;xarModGetName() eq &#39;base&#39;&quot;&gt;
...
&lt;/xar:if&gt;
</p>
<p>
This especially works if you only have user-main.xt in base. (which
i always do because if i need other standalone pages i use xarpages and
alias them).
</p>
<p>
More generally, you can get the URL info with <strong>$info = xarRequestGetInfo()</strong> which returns the current module, fn type, and function
</p>
<p>
[0 ] = module name (&#39;articles&#39;)
</p>
<p>
[1] = type (&#39;user&#39;, &#39;admin&#39;)
</p>
<p>
[2] = function (&#39;view&#39;) 
</p>
<p>
&lt;xar:if condition=&quot;$info[0] eq &#39;articles&#39; and $info[1] eq &#39;view&#39;&quot;&gt;
...
&lt;/xar:if&gt; 
</p>
<p>
&nbsp;
</p>
<h2>Which Xarpage am I on?</h2>
<p>
Of course, if you&#39;re in the Xarpages module space, you already have the $current_page variable, so you can just do<br />
</p>
<p>
&lt;xar:if condition=&quot;$current_page.name eq &#39;about&#39;&quot;&gt;
... &lt;/xar:if&gt; 
</p>
<p>
But this won&#39;t help if you&#39;re in pages/default.xt or some other template that does not have $current_page.
</p>
<p>
Some modules will cache details of the current page, for use by blocks. But we can use the cached values too in any template. 
</p>
<p>
To know what values a given function caches (if any), you&#39;ll need to inspect the php code for that page function. Displaying an xarpage calls the function xarpages_user_display() in display.php; look for calls to xarVarSetCached(), such as:
</p>
<ul>
	<li>xarVarSetCached(&#39;Blocks.xarpages&#39;, &#39;pagedata&#39;, $data);</li>
	<li>xarVarSetCached(&#39;Blocks.xarpages&#39;, &#39;current_pid&#39;, $pid);</li>
</ul>
Thus, if we need a condition based on if we&#39;re on pid 8, 
<p>
&lt;xar:if condition=&quot;$info[0] eq &#39;xarpages&#39;&quot; /&gt;
</p>
<p>
&lt;xar:set name=&quot;pid&quot;&gt;xarVarGetCached(&#39;Blocks.xarpages&#39;,&#39;current_pid&#39;)&lt;/xar:set&gt;
</p>
<p>
&lt;xar:if condition=&quot;$pid eq 8&quot;&gt;
...
&lt;/xar:if&gt;
</p>
<p>
&lt;/xar:if&gt;
</p>
<p>
Personally I dont like hardcoding pid&#39;s this way (the &#39;8&#39;), and prefer using a page name. That makes my templates more readable, maintainable, and portable. You can use xarpages_userapi_getpagebypath() like this
</p>
<p>
&lt;xar:set name=&quot;aboutpage&quot;&gt;xarModApiFunc(&#39;xarpages&#39;,&#39;user&#39;,&#39;getpagebypath&#39;,array(&#39;path&#39;=&gt;&#39;about&#39;))&lt;/xar:set&gt;
</p>
<p>
&lt;xar:if condition=&quot;!empty($aboutpage) and ($pid eq $aboutpage[&#39;pid&#39;])&quot;&gt; ...
</p>
<p>
Then again, I&#39;m not sure the processing overhead is worth it, to get what amounts to a static value on a given site.
</p>
<p>
&nbsp;
</p>
<h2>Which Pubtype am I on? 
</h2>
<p>
This is also useful in other situations where i need to know the
specific module page or in the case of articles, specific pubtypes, e.g.
</p>
<p>
&lt;xar:if condition=&quot;$info[0] eq &#39;articles&#39;&quot;&gt;
</p>
<p>
&lt;xar:set name=&quot;ptid&quot;&gt;xarVarGetCached(&#39;Blocks.articles&#39;,&#39;ptid&#39;)&lt;/xar:set&gt;
</p>
<p>
&lt;xar:if condition=&quot;$ptid eq 5 or $ptid eq 7 or $ptid eq 13&quot;&gt;
etc.
</p>
<p>
&nbsp;
</p>
<h2>Telling yourself where you are</h2>
<p>
Another technique is similar to using the Block cached vars, but you do it yourself. In your module space template you cache a variable, then in the template outside this space (e.g. pages/default.xt) you test that.
</p>
<p>
For example, if base is the default template, and thus the home page template is mytheme/modules/base/user-main.xt, add this 
</p>
<p>
&lt;xar:set name=&quot;dummy&quot;&gt;xarVarSetCached(&#39;base.mysite&#39;,&#39;home&#39;,1)&lt;/xar:set&gt;
</p>
<p>
Then in pages/default.xt, you can get it
</p>
<p>
&lt;xar:if condition=&quot;xarVarIsCached(&#39;base.mysite&#39;,&#39;home&#39;)&quot;&gt;
</p>
<p>
...
</p>
<p>
&lt;/xar:if&gt;
</p>
<p>
The only time that var will be cached is when your home page is loaded.
</p>
<p>
&nbsp;
</p>
<p>
(ref: <a href=""http://www.xaraya.com/index.php/xarbb/topic/2056"">http://www.xaraya.com/index.php/xarbb/topic/2056</a> )
</p>
<p>
&nbsp;
</p>
",linoj,2254,37,xaraya,"xarpages,articles,cache",Testing_which_page_you%27re_on_in_a_template
3,"Truncate string","Function and usage for truncating an article to a specific number of words

Also used to truncate long urls in download links",3,1150843071,9,,0,"<br />
<p>
&nbsp;
</p>
<p>
&nbsp;
</p>
<p>
&lt;div&gt;#xarModAPIFunc(&#39;misctools&#39;, &#39;user&#39;, &#39;truncate_string&#39;, array(&#39;string&#39; =&gt; strip_tags($loop:item.featuredbody), &#39;length&#39; =&gt; &#39;75&#39;, &#39;type&#39; =&gt; &#39;1&#39;, &#39;alt_text&#39; =&gt; &#39;... &#39;))#&lt;span class=&quot;more&quot;&gt;&lt;a href=&quot;http://localhost/xb/index.php#$loop:item.featuredlink#&quot;&gt;more&lt;/a&gt; &amp;raquo;&lt;/span&gt;&lt;/div&gt; 
</p>
",linoj,0,37,xaraya,"truncate string",Truncate_string
2,"Using cookies in javascript and xaraya","Some notes on my experience using coookies",3,1150811961,9,,0,"Cookie format is<br />
&quot;name=value;expires=date;path=/;&quot;<br />
such as<br />
&quot;fontsz=67;expires=####;path=/;&quot;<br />
<br />
<br />
When using short urls in xaraya, be sure to specify &quot;path=/;&quot; in your cookie otherwise it will make a separate cookie for each apparent subdirectory under root, such as /news/c_12/<br />
<br />
<br />
Here&#39;s a few links i googled<br />
<br />
http://www.quirksmode.org/js/cookies.html<br />
http://www.w3schools.com/js/js_cookies.asp<br />
http://academ.hvcc.edu/~kantopet/old/javascript/index.php?page=reading+js+cookies&amp;parent=js+cookies<br />
<br />
<br />
",linoj,0,37,xaraya,,Using_cookies_in_javascript_and_xaraya
